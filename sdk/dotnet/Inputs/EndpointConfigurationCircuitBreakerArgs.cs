// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Ngrok.Inputs
{

    public sealed class EndpointConfigurationCircuitBreakerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Error threshold percentage should be between 0 - 1.0, not 0-100.0
        /// </summary>
        [Input("errorThresholdPercentage")]
        public Input<double>? ErrorThresholdPercentage { get; set; }

        /// <summary>
        /// Integer number of buckets into which metrics are retained. Max 128.
        /// </summary>
        [Input("numBuckets")]
        public Input<int>? NumBuckets { get; set; }

        /// <summary>
        /// Integer number of seconds in the statistical rolling window that metrics are retained for.
        /// </summary>
        [Input("rollingWindow")]
        public Input<int>? RollingWindow { get; set; }

        /// <summary>
        /// Integer number of seconds after which the circuit is tripped to wait before re-evaluating upstream health
        /// </summary>
        [Input("trippedDuration")]
        public Input<int>? TrippedDuration { get; set; }

        /// <summary>
        /// Integer number of requests in a rolling window that will trip the circuit. Helpful if traffic volume is low.
        /// </summary>
        [Input("volumeThreshold")]
        public Input<int>? VolumeThreshold { get; set; }

        public EndpointConfigurationCircuitBreakerArgs()
        {
        }
        public static new EndpointConfigurationCircuitBreakerArgs Empty => new EndpointConfigurationCircuitBreakerArgs();
    }
}
