// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Ngrok.Outputs
{

    [OutputType]
    public sealed class EndpointConfigurationOidc
    {
        /// <summary>
        /// The OIDC app's client ID and OIDC audience.
        /// </summary>
        public readonly string? ClientId;
        /// <summary>
        /// The OIDC app's client secret.
        /// </summary>
        public readonly string? ClientSecret;
        /// <summary>
        /// the prefix of the session cookie that ngrok sets on the http client to cache authentication. default is 'ngrok.'
        /// </summary>
        public readonly string? CookiePrefix;
        /// <summary>
        /// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Integer number of seconds of inactivity after which if the user has not accessed the endpoint, their session will time out and they will be forced to reauthenticate.
        /// </summary>
        public readonly int? InactivityTimeout;
        /// <summary>
        /// URL of the OIDC "OpenID provider". This is the base URL used for discovery.
        /// </summary>
        public readonly string? Issuer;
        /// <summary>
        /// Integer number of seconds of the maximum duration of an authenticated session. After this period is exceeded, a user must reauthenticate.
        /// </summary>
        public readonly int? MaximumDuration;
        /// <summary>
        /// Do not enforce authentication on HTTP OPTIONS requests. necessary if you are supporting CORS.
        /// </summary>
        public readonly bool? OptionsPassthrough;
        /// <summary>
        /// The set of scopes to request from the OIDC identity provider.
        /// </summary>
        public readonly ImmutableArray<string> Scopes;

        [OutputConstructor]
        private EndpointConfigurationOidc(
            string? clientId,

            string? clientSecret,

            string? cookiePrefix,

            bool? enabled,

            int? inactivityTimeout,

            string? issuer,

            int? maximumDuration,

            bool? optionsPassthrough,

            ImmutableArray<string> scopes)
        {
            ClientId = clientId;
            ClientSecret = clientSecret;
            CookiePrefix = cookiePrefix;
            Enabled = enabled;
            InactivityTimeout = inactivityTimeout;
            Issuer = issuer;
            MaximumDuration = maximumDuration;
            OptionsPassthrough = optionsPassthrough;
            Scopes = scopes;
        }
    }
}
