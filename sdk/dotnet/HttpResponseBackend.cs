// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PiersKarsenbarg.Ngrok
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ngrok = PiersKarsenbarg.Ngrok;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Ngrok.HttpResponseBackend("example", new()
    ///     {
    ///         Body = "I'm a teapot",
    ///         Description = "acme http response",
    ///         Headers = 
    ///         {
    ///             { "Content-Type", "text/plain" },
    ///         },
    ///         Metadata = "{\"environment\": \"staging\"}",
    ///         StatusCode = 418,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [NgrokResourceType("ngrok:index/httpResponseBackend:HttpResponseBackend")]
    public partial class HttpResponseBackend : global::Pulumi.CustomResource
    {
        /// <summary>
        /// body to return as fixed content
        /// </summary>
        [Output("body")]
        public Output<string?> Body { get; private set; } = null!;

        /// <summary>
        /// timestamp when the backend was created, RFC 3339 format
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// human-readable description of this backend. Optional
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// headers to return
        /// </summary>
        [Output("headers")]
        public Output<ImmutableDictionary<string, string>?> Headers { get; private set; } = null!;

        /// <summary>
        /// arbitrary user-defined machine-readable data of this backend. Optional
        /// </summary>
        [Output("metadata")]
        public Output<string?> Metadata { get; private set; } = null!;

        /// <summary>
        /// status code to return
        /// </summary>
        [Output("statusCode")]
        public Output<int?> StatusCode { get; private set; } = null!;

        /// <summary>
        /// URI of the HTTPResponseBackend API resource
        /// </summary>
        [Output("uri")]
        public Output<string> Uri { get; private set; } = null!;


        /// <summary>
        /// Create a HttpResponseBackend resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HttpResponseBackend(string name, HttpResponseBackendArgs? args = null, CustomResourceOptions? options = null)
            : base("ngrok:index/httpResponseBackend:HttpResponseBackend", name, args ?? new HttpResponseBackendArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HttpResponseBackend(string name, Input<string> id, HttpResponseBackendState? state = null, CustomResourceOptions? options = null)
            : base("ngrok:index/httpResponseBackend:HttpResponseBackend", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pierskarsenbarg/pulumi-ngrok",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HttpResponseBackend resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HttpResponseBackend Get(string name, Input<string> id, HttpResponseBackendState? state = null, CustomResourceOptions? options = null)
        {
            return new HttpResponseBackend(name, id, state, options);
        }
    }

    public sealed class HttpResponseBackendArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// body to return as fixed content
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        /// <summary>
        /// timestamp when the backend was created, RFC 3339 format
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// human-readable description of this backend. Optional
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("headers")]
        private InputMap<string>? _headers;

        /// <summary>
        /// headers to return
        /// </summary>
        public InputMap<string> Headers
        {
            get => _headers ?? (_headers = new InputMap<string>());
            set => _headers = value;
        }

        /// <summary>
        /// arbitrary user-defined machine-readable data of this backend. Optional
        /// </summary>
        [Input("metadata")]
        public Input<string>? Metadata { get; set; }

        /// <summary>
        /// status code to return
        /// </summary>
        [Input("statusCode")]
        public Input<int>? StatusCode { get; set; }

        /// <summary>
        /// URI of the HTTPResponseBackend API resource
        /// </summary>
        [Input("uri")]
        public Input<string>? Uri { get; set; }

        public HttpResponseBackendArgs()
        {
        }
        public static new HttpResponseBackendArgs Empty => new HttpResponseBackendArgs();
    }

    public sealed class HttpResponseBackendState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// body to return as fixed content
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        /// <summary>
        /// timestamp when the backend was created, RFC 3339 format
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// human-readable description of this backend. Optional
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("headers")]
        private InputMap<string>? _headers;

        /// <summary>
        /// headers to return
        /// </summary>
        public InputMap<string> Headers
        {
            get => _headers ?? (_headers = new InputMap<string>());
            set => _headers = value;
        }

        /// <summary>
        /// arbitrary user-defined machine-readable data of this backend. Optional
        /// </summary>
        [Input("metadata")]
        public Input<string>? Metadata { get; set; }

        /// <summary>
        /// status code to return
        /// </summary>
        [Input("statusCode")]
        public Input<int>? StatusCode { get; set; }

        /// <summary>
        /// URI of the HTTPResponseBackend API resource
        /// </summary>
        [Input("uri")]
        public Input<string>? Uri { get; set; }

        public HttpResponseBackendState()
        {
        }
        public static new HttpResponseBackendState Empty => new HttpResponseBackendState();
    }
}
