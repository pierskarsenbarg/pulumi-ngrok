// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * IP Policy Rules are the IPv4 or IPv6 CIDRs entries that
 *  make up an IP Policy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ngrok from "@pulumi/ngrok";
 *
 * const example = new ngrok.index/ipPolicyRule.IpPolicyRule("example", {
 *     cidr: "212.3.14.0/24",
 *     description: "nyc office",
 *     ipPolicyId: "ipp_25auGv9R7vPmi6NKs5Cxcyzc2Cm",
 * });
 * ```
 */
export class IpPolicyRule extends pulumi.CustomResource {
    /**
     * Get an existing IpPolicyRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpPolicyRuleState, opts?: pulumi.CustomResourceOptions): IpPolicyRule {
        return new IpPolicyRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ngrok:index/ipPolicyRule:IpPolicyRule';

    /**
     * Returns true if the given object is an instance of IpPolicyRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpPolicyRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpPolicyRule.__pulumiType;
    }

    /**
     * the action to apply to the policy rule, either `allow` or `deny`
     */
    public readonly action!: pulumi.Output<string | undefined>;
    /**
     * an IP or IP range specified in CIDR notation. IPv4 and IPv6 are both supported.
     */
    public readonly cidr!: pulumi.Output<string>;
    /**
     * human-readable description of the source IPs of this IP rule. optional, max 255 bytes.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * ID of the IP policy this IP policy rule will be attached to
     */
    public readonly ipPolicyId!: pulumi.Output<string>;
    /**
     * arbitrary user-defined machine-readable data of this IP policy rule. optional, max 4096 bytes.
     */
    public readonly metadata!: pulumi.Output<string | undefined>;

    /**
     * Create a IpPolicyRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpPolicyRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpPolicyRuleArgs | IpPolicyRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpPolicyRuleState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["cidr"] = state ? state.cidr : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["ipPolicyId"] = state ? state.ipPolicyId : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
        } else {
            const args = argsOrState as IpPolicyRuleArgs | undefined;
            if ((!args || args.cidr === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cidr'");
            }
            if ((!args || args.ipPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipPolicyId'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["cidr"] = args ? args.cidr : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ipPolicyId"] = args ? args.ipPolicyId : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IpPolicyRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IpPolicyRule resources.
 */
export interface IpPolicyRuleState {
    /**
     * the action to apply to the policy rule, either `allow` or `deny`
     */
    action?: pulumi.Input<string>;
    /**
     * an IP or IP range specified in CIDR notation. IPv4 and IPv6 are both supported.
     */
    cidr?: pulumi.Input<string>;
    /**
     * human-readable description of the source IPs of this IP rule. optional, max 255 bytes.
     */
    description?: pulumi.Input<string>;
    /**
     * ID of the IP policy this IP policy rule will be attached to
     */
    ipPolicyId?: pulumi.Input<string>;
    /**
     * arbitrary user-defined machine-readable data of this IP policy rule. optional, max 4096 bytes.
     */
    metadata?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IpPolicyRule resource.
 */
export interface IpPolicyRuleArgs {
    /**
     * the action to apply to the policy rule, either `allow` or `deny`
     */
    action?: pulumi.Input<string>;
    /**
     * an IP or IP range specified in CIDR notation. IPv4 and IPv6 are both supported.
     */
    cidr: pulumi.Input<string>;
    /**
     * human-readable description of the source IPs of this IP rule. optional, max 255 bytes.
     */
    description?: pulumi.Input<string>;
    /**
     * ID of the IP policy this IP policy rule will be attached to
     */
    ipPolicyId: pulumi.Input<string>;
    /**
     * arbitrary user-defined machine-readable data of this IP policy rule. optional, max 4096 bytes.
     */
    metadata?: pulumi.Input<string>;
}
