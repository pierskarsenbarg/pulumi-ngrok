// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ngrok from "@pulumi/ngrok";
 *
 * const example = new ngrok.index/agentIngress.AgentIngress("example", {
 *     description: "acme devices",
 *     domain: "connect.acme.com",
 * });
 * ```
 */
export class AgentIngress extends pulumi.CustomResource {
    /**
     * Get an existing AgentIngress resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AgentIngressState, opts?: pulumi.CustomResourceOptions): AgentIngress {
        return new AgentIngress(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ngrok:index/agentIngress:AgentIngress';

    /**
     * Returns true if the given object is an instance of AgentIngress.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AgentIngress {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AgentIngress.__pulumiType;
    }

    /**
     * timestamp when the Agent Ingress was created, RFC 3339 format
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * human-readable description of the use of this Agent Ingress. optional, max 255 bytes.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * the domain that you own to be used as the base domain name to generate regional agent ingress domains.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * arbitrary user-defined machine-readable data of this Agent Ingress. optional, max 4096 bytes
     */
    public readonly metadata!: pulumi.Output<string | undefined>;
    /**
     * a list of target values to use as the values of NS records for the domain property these values will delegate control over the domain to ngrok
     */
    public /*out*/ readonly nsTargets!: pulumi.Output<string[]>;
    /**
     * a list of regional agent ingress domains that are subdomains of the value of domain this value may increase over time as ngrok adds more regions
     */
    public /*out*/ readonly regionDomains!: pulumi.Output<string[]>;
    /**
     * URI to the API resource of this Agent ingress
     */
    public readonly uri!: pulumi.Output<string>;

    /**
     * Create a AgentIngress resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AgentIngressArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AgentIngressArgs | AgentIngressState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AgentIngressState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["nsTargets"] = state ? state.nsTargets : undefined;
            resourceInputs["regionDomains"] = state ? state.regionDomains : undefined;
            resourceInputs["uri"] = state ? state.uri : undefined;
        } else {
            const args = argsOrState as AgentIngressArgs | undefined;
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["uri"] = args ? args.uri : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["nsTargets"] = undefined /*out*/;
            resourceInputs["regionDomains"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AgentIngress.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AgentIngress resources.
 */
export interface AgentIngressState {
    /**
     * timestamp when the Agent Ingress was created, RFC 3339 format
     */
    createdAt?: pulumi.Input<string>;
    /**
     * human-readable description of the use of this Agent Ingress. optional, max 255 bytes.
     */
    description?: pulumi.Input<string>;
    /**
     * the domain that you own to be used as the base domain name to generate regional agent ingress domains.
     */
    domain?: pulumi.Input<string>;
    /**
     * arbitrary user-defined machine-readable data of this Agent Ingress. optional, max 4096 bytes
     */
    metadata?: pulumi.Input<string>;
    /**
     * a list of target values to use as the values of NS records for the domain property these values will delegate control over the domain to ngrok
     */
    nsTargets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * a list of regional agent ingress domains that are subdomains of the value of domain this value may increase over time as ngrok adds more regions
     */
    regionDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * URI to the API resource of this Agent ingress
     */
    uri?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AgentIngress resource.
 */
export interface AgentIngressArgs {
    /**
     * human-readable description of the use of this Agent Ingress. optional, max 255 bytes.
     */
    description?: pulumi.Input<string>;
    /**
     * the domain that you own to be used as the base domain name to generate regional agent ingress domains.
     */
    domain: pulumi.Input<string>;
    /**
     * arbitrary user-defined machine-readable data of this Agent Ingress. optional, max 4096 bytes
     */
    metadata?: pulumi.Input<string>;
    /**
     * URI to the API resource of this Agent ingress
     */
    uri?: pulumi.Input<string>;
}
