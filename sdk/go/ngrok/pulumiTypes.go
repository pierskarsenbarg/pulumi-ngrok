// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ngrok

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-ngrok/sdk/go/ngrok/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type EndpointConfigurationBackend struct {
	// backend to be used to back this endpoint
	Backends []EndpointConfigurationBackendBackend `pulumi:"backends"`
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled *bool `pulumi:"enabled"`
}

// EndpointConfigurationBackendInput is an input type that accepts EndpointConfigurationBackendArgs and EndpointConfigurationBackendOutput values.
// You can construct a concrete instance of `EndpointConfigurationBackendInput` via:
//
//	EndpointConfigurationBackendArgs{...}
type EndpointConfigurationBackendInput interface {
	pulumi.Input

	ToEndpointConfigurationBackendOutput() EndpointConfigurationBackendOutput
	ToEndpointConfigurationBackendOutputWithContext(context.Context) EndpointConfigurationBackendOutput
}

type EndpointConfigurationBackendArgs struct {
	// backend to be used to back this endpoint
	Backends EndpointConfigurationBackendBackendArrayInput `pulumi:"backends"`
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (EndpointConfigurationBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationBackend)(nil)).Elem()
}

func (i EndpointConfigurationBackendArgs) ToEndpointConfigurationBackendOutput() EndpointConfigurationBackendOutput {
	return i.ToEndpointConfigurationBackendOutputWithContext(context.Background())
}

func (i EndpointConfigurationBackendArgs) ToEndpointConfigurationBackendOutputWithContext(ctx context.Context) EndpointConfigurationBackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationBackendOutput)
}

// EndpointConfigurationBackendArrayInput is an input type that accepts EndpointConfigurationBackendArray and EndpointConfigurationBackendArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationBackendArrayInput` via:
//
//	EndpointConfigurationBackendArray{ EndpointConfigurationBackendArgs{...} }
type EndpointConfigurationBackendArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationBackendArrayOutput() EndpointConfigurationBackendArrayOutput
	ToEndpointConfigurationBackendArrayOutputWithContext(context.Context) EndpointConfigurationBackendArrayOutput
}

type EndpointConfigurationBackendArray []EndpointConfigurationBackendInput

func (EndpointConfigurationBackendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationBackend)(nil)).Elem()
}

func (i EndpointConfigurationBackendArray) ToEndpointConfigurationBackendArrayOutput() EndpointConfigurationBackendArrayOutput {
	return i.ToEndpointConfigurationBackendArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationBackendArray) ToEndpointConfigurationBackendArrayOutputWithContext(ctx context.Context) EndpointConfigurationBackendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationBackendArrayOutput)
}

type EndpointConfigurationBackendOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationBackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationBackend)(nil)).Elem()
}

func (o EndpointConfigurationBackendOutput) ToEndpointConfigurationBackendOutput() EndpointConfigurationBackendOutput {
	return o
}

func (o EndpointConfigurationBackendOutput) ToEndpointConfigurationBackendOutputWithContext(ctx context.Context) EndpointConfigurationBackendOutput {
	return o
}

// backend to be used to back this endpoint
func (o EndpointConfigurationBackendOutput) Backends() EndpointConfigurationBackendBackendArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationBackend) []EndpointConfigurationBackendBackend { return v.Backends }).(EndpointConfigurationBackendBackendArrayOutput)
}

// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
func (o EndpointConfigurationBackendOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationBackend) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type EndpointConfigurationBackendArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationBackendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationBackend)(nil)).Elem()
}

func (o EndpointConfigurationBackendArrayOutput) ToEndpointConfigurationBackendArrayOutput() EndpointConfigurationBackendArrayOutput {
	return o
}

func (o EndpointConfigurationBackendArrayOutput) ToEndpointConfigurationBackendArrayOutputWithContext(ctx context.Context) EndpointConfigurationBackendArrayOutput {
	return o
}

func (o EndpointConfigurationBackendArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationBackendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationBackend {
		return vs[0].([]EndpointConfigurationBackend)[vs[1].(int)]
	}).(EndpointConfigurationBackendOutput)
}

type EndpointConfigurationBackendBackend struct {
	// unique identifier of this endpoint configuration
	Id  *string `pulumi:"id"`
	Uri *string `pulumi:"uri"`
}

// EndpointConfigurationBackendBackendInput is an input type that accepts EndpointConfigurationBackendBackendArgs and EndpointConfigurationBackendBackendOutput values.
// You can construct a concrete instance of `EndpointConfigurationBackendBackendInput` via:
//
//	EndpointConfigurationBackendBackendArgs{...}
type EndpointConfigurationBackendBackendInput interface {
	pulumi.Input

	ToEndpointConfigurationBackendBackendOutput() EndpointConfigurationBackendBackendOutput
	ToEndpointConfigurationBackendBackendOutputWithContext(context.Context) EndpointConfigurationBackendBackendOutput
}

type EndpointConfigurationBackendBackendArgs struct {
	// unique identifier of this endpoint configuration
	Id  pulumi.StringPtrInput `pulumi:"id"`
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (EndpointConfigurationBackendBackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationBackendBackend)(nil)).Elem()
}

func (i EndpointConfigurationBackendBackendArgs) ToEndpointConfigurationBackendBackendOutput() EndpointConfigurationBackendBackendOutput {
	return i.ToEndpointConfigurationBackendBackendOutputWithContext(context.Background())
}

func (i EndpointConfigurationBackendBackendArgs) ToEndpointConfigurationBackendBackendOutputWithContext(ctx context.Context) EndpointConfigurationBackendBackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationBackendBackendOutput)
}

// EndpointConfigurationBackendBackendArrayInput is an input type that accepts EndpointConfigurationBackendBackendArray and EndpointConfigurationBackendBackendArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationBackendBackendArrayInput` via:
//
//	EndpointConfigurationBackendBackendArray{ EndpointConfigurationBackendBackendArgs{...} }
type EndpointConfigurationBackendBackendArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationBackendBackendArrayOutput() EndpointConfigurationBackendBackendArrayOutput
	ToEndpointConfigurationBackendBackendArrayOutputWithContext(context.Context) EndpointConfigurationBackendBackendArrayOutput
}

type EndpointConfigurationBackendBackendArray []EndpointConfigurationBackendBackendInput

func (EndpointConfigurationBackendBackendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationBackendBackend)(nil)).Elem()
}

func (i EndpointConfigurationBackendBackendArray) ToEndpointConfigurationBackendBackendArrayOutput() EndpointConfigurationBackendBackendArrayOutput {
	return i.ToEndpointConfigurationBackendBackendArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationBackendBackendArray) ToEndpointConfigurationBackendBackendArrayOutputWithContext(ctx context.Context) EndpointConfigurationBackendBackendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationBackendBackendArrayOutput)
}

type EndpointConfigurationBackendBackendOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationBackendBackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationBackendBackend)(nil)).Elem()
}

func (o EndpointConfigurationBackendBackendOutput) ToEndpointConfigurationBackendBackendOutput() EndpointConfigurationBackendBackendOutput {
	return o
}

func (o EndpointConfigurationBackendBackendOutput) ToEndpointConfigurationBackendBackendOutputWithContext(ctx context.Context) EndpointConfigurationBackendBackendOutput {
	return o
}

// unique identifier of this endpoint configuration
func (o EndpointConfigurationBackendBackendOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationBackendBackend) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigurationBackendBackendOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationBackendBackend) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type EndpointConfigurationBackendBackendArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationBackendBackendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationBackendBackend)(nil)).Elem()
}

func (o EndpointConfigurationBackendBackendArrayOutput) ToEndpointConfigurationBackendBackendArrayOutput() EndpointConfigurationBackendBackendArrayOutput {
	return o
}

func (o EndpointConfigurationBackendBackendArrayOutput) ToEndpointConfigurationBackendBackendArrayOutputWithContext(ctx context.Context) EndpointConfigurationBackendBackendArrayOutput {
	return o
}

func (o EndpointConfigurationBackendBackendArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationBackendBackendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationBackendBackend {
		return vs[0].([]EndpointConfigurationBackendBackend)[vs[1].(int)]
	}).(EndpointConfigurationBackendBackendOutput)
}

type EndpointConfigurationBasicAuth struct {
	// true or false indicating whether to allow OPTIONS requests through without authentication which is necessary for CORS. default is `false`
	AllowOptions *bool `pulumi:"allowOptions"`
	// determines how the basic auth credentials are validated. Currently only the value `agent` is supported which means that credentials will be validated against the username and password specified by the ngrok agent's `--basic-auth` flag, if any.
	AuthProviderId *string `pulumi:"authProviderId"`
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled *bool `pulumi:"enabled"`
	// an arbitrary string to be specified in as the 'realm' value in the `WWW-Authenticate` header. default is `ngrok`
	Realm *string `pulumi:"realm"`
}

// EndpointConfigurationBasicAuthInput is an input type that accepts EndpointConfigurationBasicAuthArgs and EndpointConfigurationBasicAuthOutput values.
// You can construct a concrete instance of `EndpointConfigurationBasicAuthInput` via:
//
//	EndpointConfigurationBasicAuthArgs{...}
type EndpointConfigurationBasicAuthInput interface {
	pulumi.Input

	ToEndpointConfigurationBasicAuthOutput() EndpointConfigurationBasicAuthOutput
	ToEndpointConfigurationBasicAuthOutputWithContext(context.Context) EndpointConfigurationBasicAuthOutput
}

type EndpointConfigurationBasicAuthArgs struct {
	// true or false indicating whether to allow OPTIONS requests through without authentication which is necessary for CORS. default is `false`
	AllowOptions pulumi.BoolPtrInput `pulumi:"allowOptions"`
	// determines how the basic auth credentials are validated. Currently only the value `agent` is supported which means that credentials will be validated against the username and password specified by the ngrok agent's `--basic-auth` flag, if any.
	AuthProviderId pulumi.StringPtrInput `pulumi:"authProviderId"`
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// an arbitrary string to be specified in as the 'realm' value in the `WWW-Authenticate` header. default is `ngrok`
	Realm pulumi.StringPtrInput `pulumi:"realm"`
}

func (EndpointConfigurationBasicAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationBasicAuth)(nil)).Elem()
}

func (i EndpointConfigurationBasicAuthArgs) ToEndpointConfigurationBasicAuthOutput() EndpointConfigurationBasicAuthOutput {
	return i.ToEndpointConfigurationBasicAuthOutputWithContext(context.Background())
}

func (i EndpointConfigurationBasicAuthArgs) ToEndpointConfigurationBasicAuthOutputWithContext(ctx context.Context) EndpointConfigurationBasicAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationBasicAuthOutput)
}

// EndpointConfigurationBasicAuthArrayInput is an input type that accepts EndpointConfigurationBasicAuthArray and EndpointConfigurationBasicAuthArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationBasicAuthArrayInput` via:
//
//	EndpointConfigurationBasicAuthArray{ EndpointConfigurationBasicAuthArgs{...} }
type EndpointConfigurationBasicAuthArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationBasicAuthArrayOutput() EndpointConfigurationBasicAuthArrayOutput
	ToEndpointConfigurationBasicAuthArrayOutputWithContext(context.Context) EndpointConfigurationBasicAuthArrayOutput
}

type EndpointConfigurationBasicAuthArray []EndpointConfigurationBasicAuthInput

func (EndpointConfigurationBasicAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationBasicAuth)(nil)).Elem()
}

func (i EndpointConfigurationBasicAuthArray) ToEndpointConfigurationBasicAuthArrayOutput() EndpointConfigurationBasicAuthArrayOutput {
	return i.ToEndpointConfigurationBasicAuthArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationBasicAuthArray) ToEndpointConfigurationBasicAuthArrayOutputWithContext(ctx context.Context) EndpointConfigurationBasicAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationBasicAuthArrayOutput)
}

type EndpointConfigurationBasicAuthOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationBasicAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationBasicAuth)(nil)).Elem()
}

func (o EndpointConfigurationBasicAuthOutput) ToEndpointConfigurationBasicAuthOutput() EndpointConfigurationBasicAuthOutput {
	return o
}

func (o EndpointConfigurationBasicAuthOutput) ToEndpointConfigurationBasicAuthOutputWithContext(ctx context.Context) EndpointConfigurationBasicAuthOutput {
	return o
}

// true or false indicating whether to allow OPTIONS requests through without authentication which is necessary for CORS. default is `false`
func (o EndpointConfigurationBasicAuthOutput) AllowOptions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationBasicAuth) *bool { return v.AllowOptions }).(pulumi.BoolPtrOutput)
}

// determines how the basic auth credentials are validated. Currently only the value `agent` is supported which means that credentials will be validated against the username and password specified by the ngrok agent's `--basic-auth` flag, if any.
func (o EndpointConfigurationBasicAuthOutput) AuthProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationBasicAuth) *string { return v.AuthProviderId }).(pulumi.StringPtrOutput)
}

// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
func (o EndpointConfigurationBasicAuthOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationBasicAuth) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// an arbitrary string to be specified in as the 'realm' value in the `WWW-Authenticate` header. default is `ngrok`
func (o EndpointConfigurationBasicAuthOutput) Realm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationBasicAuth) *string { return v.Realm }).(pulumi.StringPtrOutput)
}

type EndpointConfigurationBasicAuthArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationBasicAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationBasicAuth)(nil)).Elem()
}

func (o EndpointConfigurationBasicAuthArrayOutput) ToEndpointConfigurationBasicAuthArrayOutput() EndpointConfigurationBasicAuthArrayOutput {
	return o
}

func (o EndpointConfigurationBasicAuthArrayOutput) ToEndpointConfigurationBasicAuthArrayOutputWithContext(ctx context.Context) EndpointConfigurationBasicAuthArrayOutput {
	return o
}

func (o EndpointConfigurationBasicAuthArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationBasicAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationBasicAuth {
		return vs[0].([]EndpointConfigurationBasicAuth)[vs[1].(int)]
	}).(EndpointConfigurationBasicAuthOutput)
}

type EndpointConfigurationCircuitBreaker struct {
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled *bool `pulumi:"enabled"`
	// Error threshold percentage should be between 0 - 1.0, not 0-100.0
	ErrorThresholdPercentage *float64 `pulumi:"errorThresholdPercentage"`
	// Integer number of buckets into which metrics are retained. Max 128.
	NumBuckets *int `pulumi:"numBuckets"`
	// Integer number of seconds in the statistical rolling window that metrics are retained for.
	RollingWindow *int `pulumi:"rollingWindow"`
	// Integer number of seconds after which the circuit is tripped to wait before re-evaluating upstream health
	TrippedDuration *int `pulumi:"trippedDuration"`
	// Integer number of requests in a rolling window that will trip the circuit. Helpful if traffic volume is low.
	VolumeThreshold *int `pulumi:"volumeThreshold"`
}

// EndpointConfigurationCircuitBreakerInput is an input type that accepts EndpointConfigurationCircuitBreakerArgs and EndpointConfigurationCircuitBreakerOutput values.
// You can construct a concrete instance of `EndpointConfigurationCircuitBreakerInput` via:
//
//	EndpointConfigurationCircuitBreakerArgs{...}
type EndpointConfigurationCircuitBreakerInput interface {
	pulumi.Input

	ToEndpointConfigurationCircuitBreakerOutput() EndpointConfigurationCircuitBreakerOutput
	ToEndpointConfigurationCircuitBreakerOutputWithContext(context.Context) EndpointConfigurationCircuitBreakerOutput
}

type EndpointConfigurationCircuitBreakerArgs struct {
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Error threshold percentage should be between 0 - 1.0, not 0-100.0
	ErrorThresholdPercentage pulumi.Float64PtrInput `pulumi:"errorThresholdPercentage"`
	// Integer number of buckets into which metrics are retained. Max 128.
	NumBuckets pulumi.IntPtrInput `pulumi:"numBuckets"`
	// Integer number of seconds in the statistical rolling window that metrics are retained for.
	RollingWindow pulumi.IntPtrInput `pulumi:"rollingWindow"`
	// Integer number of seconds after which the circuit is tripped to wait before re-evaluating upstream health
	TrippedDuration pulumi.IntPtrInput `pulumi:"trippedDuration"`
	// Integer number of requests in a rolling window that will trip the circuit. Helpful if traffic volume is low.
	VolumeThreshold pulumi.IntPtrInput `pulumi:"volumeThreshold"`
}

func (EndpointConfigurationCircuitBreakerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationCircuitBreaker)(nil)).Elem()
}

func (i EndpointConfigurationCircuitBreakerArgs) ToEndpointConfigurationCircuitBreakerOutput() EndpointConfigurationCircuitBreakerOutput {
	return i.ToEndpointConfigurationCircuitBreakerOutputWithContext(context.Background())
}

func (i EndpointConfigurationCircuitBreakerArgs) ToEndpointConfigurationCircuitBreakerOutputWithContext(ctx context.Context) EndpointConfigurationCircuitBreakerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationCircuitBreakerOutput)
}

// EndpointConfigurationCircuitBreakerArrayInput is an input type that accepts EndpointConfigurationCircuitBreakerArray and EndpointConfigurationCircuitBreakerArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationCircuitBreakerArrayInput` via:
//
//	EndpointConfigurationCircuitBreakerArray{ EndpointConfigurationCircuitBreakerArgs{...} }
type EndpointConfigurationCircuitBreakerArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationCircuitBreakerArrayOutput() EndpointConfigurationCircuitBreakerArrayOutput
	ToEndpointConfigurationCircuitBreakerArrayOutputWithContext(context.Context) EndpointConfigurationCircuitBreakerArrayOutput
}

type EndpointConfigurationCircuitBreakerArray []EndpointConfigurationCircuitBreakerInput

func (EndpointConfigurationCircuitBreakerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationCircuitBreaker)(nil)).Elem()
}

func (i EndpointConfigurationCircuitBreakerArray) ToEndpointConfigurationCircuitBreakerArrayOutput() EndpointConfigurationCircuitBreakerArrayOutput {
	return i.ToEndpointConfigurationCircuitBreakerArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationCircuitBreakerArray) ToEndpointConfigurationCircuitBreakerArrayOutputWithContext(ctx context.Context) EndpointConfigurationCircuitBreakerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationCircuitBreakerArrayOutput)
}

type EndpointConfigurationCircuitBreakerOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationCircuitBreakerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationCircuitBreaker)(nil)).Elem()
}

func (o EndpointConfigurationCircuitBreakerOutput) ToEndpointConfigurationCircuitBreakerOutput() EndpointConfigurationCircuitBreakerOutput {
	return o
}

func (o EndpointConfigurationCircuitBreakerOutput) ToEndpointConfigurationCircuitBreakerOutputWithContext(ctx context.Context) EndpointConfigurationCircuitBreakerOutput {
	return o
}

// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
func (o EndpointConfigurationCircuitBreakerOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationCircuitBreaker) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Error threshold percentage should be between 0 - 1.0, not 0-100.0
func (o EndpointConfigurationCircuitBreakerOutput) ErrorThresholdPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v EndpointConfigurationCircuitBreaker) *float64 { return v.ErrorThresholdPercentage }).(pulumi.Float64PtrOutput)
}

// Integer number of buckets into which metrics are retained. Max 128.
func (o EndpointConfigurationCircuitBreakerOutput) NumBuckets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationCircuitBreaker) *int { return v.NumBuckets }).(pulumi.IntPtrOutput)
}

// Integer number of seconds in the statistical rolling window that metrics are retained for.
func (o EndpointConfigurationCircuitBreakerOutput) RollingWindow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationCircuitBreaker) *int { return v.RollingWindow }).(pulumi.IntPtrOutput)
}

// Integer number of seconds after which the circuit is tripped to wait before re-evaluating upstream health
func (o EndpointConfigurationCircuitBreakerOutput) TrippedDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationCircuitBreaker) *int { return v.TrippedDuration }).(pulumi.IntPtrOutput)
}

// Integer number of requests in a rolling window that will trip the circuit. Helpful if traffic volume is low.
func (o EndpointConfigurationCircuitBreakerOutput) VolumeThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationCircuitBreaker) *int { return v.VolumeThreshold }).(pulumi.IntPtrOutput)
}

type EndpointConfigurationCircuitBreakerArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationCircuitBreakerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationCircuitBreaker)(nil)).Elem()
}

func (o EndpointConfigurationCircuitBreakerArrayOutput) ToEndpointConfigurationCircuitBreakerArrayOutput() EndpointConfigurationCircuitBreakerArrayOutput {
	return o
}

func (o EndpointConfigurationCircuitBreakerArrayOutput) ToEndpointConfigurationCircuitBreakerArrayOutputWithContext(ctx context.Context) EndpointConfigurationCircuitBreakerArrayOutput {
	return o
}

func (o EndpointConfigurationCircuitBreakerArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationCircuitBreakerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationCircuitBreaker {
		return vs[0].([]EndpointConfigurationCircuitBreaker)[vs[1].(int)]
	}).(EndpointConfigurationCircuitBreakerOutput)
}

type EndpointConfigurationCompression struct {
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled *bool `pulumi:"enabled"`
}

// EndpointConfigurationCompressionInput is an input type that accepts EndpointConfigurationCompressionArgs and EndpointConfigurationCompressionOutput values.
// You can construct a concrete instance of `EndpointConfigurationCompressionInput` via:
//
//	EndpointConfigurationCompressionArgs{...}
type EndpointConfigurationCompressionInput interface {
	pulumi.Input

	ToEndpointConfigurationCompressionOutput() EndpointConfigurationCompressionOutput
	ToEndpointConfigurationCompressionOutputWithContext(context.Context) EndpointConfigurationCompressionOutput
}

type EndpointConfigurationCompressionArgs struct {
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (EndpointConfigurationCompressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationCompression)(nil)).Elem()
}

func (i EndpointConfigurationCompressionArgs) ToEndpointConfigurationCompressionOutput() EndpointConfigurationCompressionOutput {
	return i.ToEndpointConfigurationCompressionOutputWithContext(context.Background())
}

func (i EndpointConfigurationCompressionArgs) ToEndpointConfigurationCompressionOutputWithContext(ctx context.Context) EndpointConfigurationCompressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationCompressionOutput)
}

// EndpointConfigurationCompressionArrayInput is an input type that accepts EndpointConfigurationCompressionArray and EndpointConfigurationCompressionArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationCompressionArrayInput` via:
//
//	EndpointConfigurationCompressionArray{ EndpointConfigurationCompressionArgs{...} }
type EndpointConfigurationCompressionArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationCompressionArrayOutput() EndpointConfigurationCompressionArrayOutput
	ToEndpointConfigurationCompressionArrayOutputWithContext(context.Context) EndpointConfigurationCompressionArrayOutput
}

type EndpointConfigurationCompressionArray []EndpointConfigurationCompressionInput

func (EndpointConfigurationCompressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationCompression)(nil)).Elem()
}

func (i EndpointConfigurationCompressionArray) ToEndpointConfigurationCompressionArrayOutput() EndpointConfigurationCompressionArrayOutput {
	return i.ToEndpointConfigurationCompressionArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationCompressionArray) ToEndpointConfigurationCompressionArrayOutputWithContext(ctx context.Context) EndpointConfigurationCompressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationCompressionArrayOutput)
}

type EndpointConfigurationCompressionOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationCompression)(nil)).Elem()
}

func (o EndpointConfigurationCompressionOutput) ToEndpointConfigurationCompressionOutput() EndpointConfigurationCompressionOutput {
	return o
}

func (o EndpointConfigurationCompressionOutput) ToEndpointConfigurationCompressionOutputWithContext(ctx context.Context) EndpointConfigurationCompressionOutput {
	return o
}

// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
func (o EndpointConfigurationCompressionOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationCompression) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type EndpointConfigurationCompressionArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationCompressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationCompression)(nil)).Elem()
}

func (o EndpointConfigurationCompressionArrayOutput) ToEndpointConfigurationCompressionArrayOutput() EndpointConfigurationCompressionArrayOutput {
	return o
}

func (o EndpointConfigurationCompressionArrayOutput) ToEndpointConfigurationCompressionArrayOutputWithContext(ctx context.Context) EndpointConfigurationCompressionArrayOutput {
	return o
}

func (o EndpointConfigurationCompressionArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationCompressionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationCompression {
		return vs[0].([]EndpointConfigurationCompression)[vs[1].(int)]
	}).(EndpointConfigurationCompressionOutput)
}

type EndpointConfigurationIpPolicy struct {
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled    *bool                                   `pulumi:"enabled"`
	IpPolicies []EndpointConfigurationIpPolicyIpPolicy `pulumi:"ipPolicies"`
}

// EndpointConfigurationIpPolicyInput is an input type that accepts EndpointConfigurationIpPolicyArgs and EndpointConfigurationIpPolicyOutput values.
// You can construct a concrete instance of `EndpointConfigurationIpPolicyInput` via:
//
//	EndpointConfigurationIpPolicyArgs{...}
type EndpointConfigurationIpPolicyInput interface {
	pulumi.Input

	ToEndpointConfigurationIpPolicyOutput() EndpointConfigurationIpPolicyOutput
	ToEndpointConfigurationIpPolicyOutputWithContext(context.Context) EndpointConfigurationIpPolicyOutput
}

type EndpointConfigurationIpPolicyArgs struct {
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled    pulumi.BoolPtrInput                             `pulumi:"enabled"`
	IpPolicies EndpointConfigurationIpPolicyIpPolicyArrayInput `pulumi:"ipPolicies"`
}

func (EndpointConfigurationIpPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationIpPolicy)(nil)).Elem()
}

func (i EndpointConfigurationIpPolicyArgs) ToEndpointConfigurationIpPolicyOutput() EndpointConfigurationIpPolicyOutput {
	return i.ToEndpointConfigurationIpPolicyOutputWithContext(context.Background())
}

func (i EndpointConfigurationIpPolicyArgs) ToEndpointConfigurationIpPolicyOutputWithContext(ctx context.Context) EndpointConfigurationIpPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationIpPolicyOutput)
}

// EndpointConfigurationIpPolicyArrayInput is an input type that accepts EndpointConfigurationIpPolicyArray and EndpointConfigurationIpPolicyArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationIpPolicyArrayInput` via:
//
//	EndpointConfigurationIpPolicyArray{ EndpointConfigurationIpPolicyArgs{...} }
type EndpointConfigurationIpPolicyArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationIpPolicyArrayOutput() EndpointConfigurationIpPolicyArrayOutput
	ToEndpointConfigurationIpPolicyArrayOutputWithContext(context.Context) EndpointConfigurationIpPolicyArrayOutput
}

type EndpointConfigurationIpPolicyArray []EndpointConfigurationIpPolicyInput

func (EndpointConfigurationIpPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationIpPolicy)(nil)).Elem()
}

func (i EndpointConfigurationIpPolicyArray) ToEndpointConfigurationIpPolicyArrayOutput() EndpointConfigurationIpPolicyArrayOutput {
	return i.ToEndpointConfigurationIpPolicyArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationIpPolicyArray) ToEndpointConfigurationIpPolicyArrayOutputWithContext(ctx context.Context) EndpointConfigurationIpPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationIpPolicyArrayOutput)
}

type EndpointConfigurationIpPolicyOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationIpPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationIpPolicy)(nil)).Elem()
}

func (o EndpointConfigurationIpPolicyOutput) ToEndpointConfigurationIpPolicyOutput() EndpointConfigurationIpPolicyOutput {
	return o
}

func (o EndpointConfigurationIpPolicyOutput) ToEndpointConfigurationIpPolicyOutputWithContext(ctx context.Context) EndpointConfigurationIpPolicyOutput {
	return o
}

// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
func (o EndpointConfigurationIpPolicyOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationIpPolicy) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o EndpointConfigurationIpPolicyOutput) IpPolicies() EndpointConfigurationIpPolicyIpPolicyArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationIpPolicy) []EndpointConfigurationIpPolicyIpPolicy { return v.IpPolicies }).(EndpointConfigurationIpPolicyIpPolicyArrayOutput)
}

type EndpointConfigurationIpPolicyArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationIpPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationIpPolicy)(nil)).Elem()
}

func (o EndpointConfigurationIpPolicyArrayOutput) ToEndpointConfigurationIpPolicyArrayOutput() EndpointConfigurationIpPolicyArrayOutput {
	return o
}

func (o EndpointConfigurationIpPolicyArrayOutput) ToEndpointConfigurationIpPolicyArrayOutputWithContext(ctx context.Context) EndpointConfigurationIpPolicyArrayOutput {
	return o
}

func (o EndpointConfigurationIpPolicyArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationIpPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationIpPolicy {
		return vs[0].([]EndpointConfigurationIpPolicy)[vs[1].(int)]
	}).(EndpointConfigurationIpPolicyOutput)
}

type EndpointConfigurationIpPolicyIpPolicy struct {
	// unique identifier of this endpoint configuration
	Id  *string `pulumi:"id"`
	Uri *string `pulumi:"uri"`
}

// EndpointConfigurationIpPolicyIpPolicyInput is an input type that accepts EndpointConfigurationIpPolicyIpPolicyArgs and EndpointConfigurationIpPolicyIpPolicyOutput values.
// You can construct a concrete instance of `EndpointConfigurationIpPolicyIpPolicyInput` via:
//
//	EndpointConfigurationIpPolicyIpPolicyArgs{...}
type EndpointConfigurationIpPolicyIpPolicyInput interface {
	pulumi.Input

	ToEndpointConfigurationIpPolicyIpPolicyOutput() EndpointConfigurationIpPolicyIpPolicyOutput
	ToEndpointConfigurationIpPolicyIpPolicyOutputWithContext(context.Context) EndpointConfigurationIpPolicyIpPolicyOutput
}

type EndpointConfigurationIpPolicyIpPolicyArgs struct {
	// unique identifier of this endpoint configuration
	Id  pulumi.StringPtrInput `pulumi:"id"`
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (EndpointConfigurationIpPolicyIpPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationIpPolicyIpPolicy)(nil)).Elem()
}

func (i EndpointConfigurationIpPolicyIpPolicyArgs) ToEndpointConfigurationIpPolicyIpPolicyOutput() EndpointConfigurationIpPolicyIpPolicyOutput {
	return i.ToEndpointConfigurationIpPolicyIpPolicyOutputWithContext(context.Background())
}

func (i EndpointConfigurationIpPolicyIpPolicyArgs) ToEndpointConfigurationIpPolicyIpPolicyOutputWithContext(ctx context.Context) EndpointConfigurationIpPolicyIpPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationIpPolicyIpPolicyOutput)
}

// EndpointConfigurationIpPolicyIpPolicyArrayInput is an input type that accepts EndpointConfigurationIpPolicyIpPolicyArray and EndpointConfigurationIpPolicyIpPolicyArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationIpPolicyIpPolicyArrayInput` via:
//
//	EndpointConfigurationIpPolicyIpPolicyArray{ EndpointConfigurationIpPolicyIpPolicyArgs{...} }
type EndpointConfigurationIpPolicyIpPolicyArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationIpPolicyIpPolicyArrayOutput() EndpointConfigurationIpPolicyIpPolicyArrayOutput
	ToEndpointConfigurationIpPolicyIpPolicyArrayOutputWithContext(context.Context) EndpointConfigurationIpPolicyIpPolicyArrayOutput
}

type EndpointConfigurationIpPolicyIpPolicyArray []EndpointConfigurationIpPolicyIpPolicyInput

func (EndpointConfigurationIpPolicyIpPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationIpPolicyIpPolicy)(nil)).Elem()
}

func (i EndpointConfigurationIpPolicyIpPolicyArray) ToEndpointConfigurationIpPolicyIpPolicyArrayOutput() EndpointConfigurationIpPolicyIpPolicyArrayOutput {
	return i.ToEndpointConfigurationIpPolicyIpPolicyArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationIpPolicyIpPolicyArray) ToEndpointConfigurationIpPolicyIpPolicyArrayOutputWithContext(ctx context.Context) EndpointConfigurationIpPolicyIpPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationIpPolicyIpPolicyArrayOutput)
}

type EndpointConfigurationIpPolicyIpPolicyOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationIpPolicyIpPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationIpPolicyIpPolicy)(nil)).Elem()
}

func (o EndpointConfigurationIpPolicyIpPolicyOutput) ToEndpointConfigurationIpPolicyIpPolicyOutput() EndpointConfigurationIpPolicyIpPolicyOutput {
	return o
}

func (o EndpointConfigurationIpPolicyIpPolicyOutput) ToEndpointConfigurationIpPolicyIpPolicyOutputWithContext(ctx context.Context) EndpointConfigurationIpPolicyIpPolicyOutput {
	return o
}

// unique identifier of this endpoint configuration
func (o EndpointConfigurationIpPolicyIpPolicyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationIpPolicyIpPolicy) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigurationIpPolicyIpPolicyOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationIpPolicyIpPolicy) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type EndpointConfigurationIpPolicyIpPolicyArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationIpPolicyIpPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationIpPolicyIpPolicy)(nil)).Elem()
}

func (o EndpointConfigurationIpPolicyIpPolicyArrayOutput) ToEndpointConfigurationIpPolicyIpPolicyArrayOutput() EndpointConfigurationIpPolicyIpPolicyArrayOutput {
	return o
}

func (o EndpointConfigurationIpPolicyIpPolicyArrayOutput) ToEndpointConfigurationIpPolicyIpPolicyArrayOutputWithContext(ctx context.Context) EndpointConfigurationIpPolicyIpPolicyArrayOutput {
	return o
}

func (o EndpointConfigurationIpPolicyIpPolicyArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationIpPolicyIpPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationIpPolicyIpPolicy {
		return vs[0].([]EndpointConfigurationIpPolicyIpPolicy)[vs[1].(int)]
	}).(EndpointConfigurationIpPolicyIpPolicyOutput)
}

type EndpointConfigurationLogging struct {
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled *bool `pulumi:"enabled"`
	// list of all EventStreams that will be used to configure and export this endpoint's logs
	EventStreams []EndpointConfigurationLoggingEventStream `pulumi:"eventStreams"`
}

// EndpointConfigurationLoggingInput is an input type that accepts EndpointConfigurationLoggingArgs and EndpointConfigurationLoggingOutput values.
// You can construct a concrete instance of `EndpointConfigurationLoggingInput` via:
//
//	EndpointConfigurationLoggingArgs{...}
type EndpointConfigurationLoggingInput interface {
	pulumi.Input

	ToEndpointConfigurationLoggingOutput() EndpointConfigurationLoggingOutput
	ToEndpointConfigurationLoggingOutputWithContext(context.Context) EndpointConfigurationLoggingOutput
}

type EndpointConfigurationLoggingArgs struct {
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// list of all EventStreams that will be used to configure and export this endpoint's logs
	EventStreams EndpointConfigurationLoggingEventStreamArrayInput `pulumi:"eventStreams"`
}

func (EndpointConfigurationLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationLogging)(nil)).Elem()
}

func (i EndpointConfigurationLoggingArgs) ToEndpointConfigurationLoggingOutput() EndpointConfigurationLoggingOutput {
	return i.ToEndpointConfigurationLoggingOutputWithContext(context.Background())
}

func (i EndpointConfigurationLoggingArgs) ToEndpointConfigurationLoggingOutputWithContext(ctx context.Context) EndpointConfigurationLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationLoggingOutput)
}

// EndpointConfigurationLoggingArrayInput is an input type that accepts EndpointConfigurationLoggingArray and EndpointConfigurationLoggingArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationLoggingArrayInput` via:
//
//	EndpointConfigurationLoggingArray{ EndpointConfigurationLoggingArgs{...} }
type EndpointConfigurationLoggingArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationLoggingArrayOutput() EndpointConfigurationLoggingArrayOutput
	ToEndpointConfigurationLoggingArrayOutputWithContext(context.Context) EndpointConfigurationLoggingArrayOutput
}

type EndpointConfigurationLoggingArray []EndpointConfigurationLoggingInput

func (EndpointConfigurationLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationLogging)(nil)).Elem()
}

func (i EndpointConfigurationLoggingArray) ToEndpointConfigurationLoggingArrayOutput() EndpointConfigurationLoggingArrayOutput {
	return i.ToEndpointConfigurationLoggingArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationLoggingArray) ToEndpointConfigurationLoggingArrayOutputWithContext(ctx context.Context) EndpointConfigurationLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationLoggingArrayOutput)
}

type EndpointConfigurationLoggingOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationLogging)(nil)).Elem()
}

func (o EndpointConfigurationLoggingOutput) ToEndpointConfigurationLoggingOutput() EndpointConfigurationLoggingOutput {
	return o
}

func (o EndpointConfigurationLoggingOutput) ToEndpointConfigurationLoggingOutputWithContext(ctx context.Context) EndpointConfigurationLoggingOutput {
	return o
}

// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
func (o EndpointConfigurationLoggingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationLogging) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// list of all EventStreams that will be used to configure and export this endpoint's logs
func (o EndpointConfigurationLoggingOutput) EventStreams() EndpointConfigurationLoggingEventStreamArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationLogging) []EndpointConfigurationLoggingEventStream { return v.EventStreams }).(EndpointConfigurationLoggingEventStreamArrayOutput)
}

type EndpointConfigurationLoggingArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationLogging)(nil)).Elem()
}

func (o EndpointConfigurationLoggingArrayOutput) ToEndpointConfigurationLoggingArrayOutput() EndpointConfigurationLoggingArrayOutput {
	return o
}

func (o EndpointConfigurationLoggingArrayOutput) ToEndpointConfigurationLoggingArrayOutputWithContext(ctx context.Context) EndpointConfigurationLoggingArrayOutput {
	return o
}

func (o EndpointConfigurationLoggingArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationLogging {
		return vs[0].([]EndpointConfigurationLogging)[vs[1].(int)]
	}).(EndpointConfigurationLoggingOutput)
}

type EndpointConfigurationLoggingEventStream struct {
	// unique identifier of this endpoint configuration
	Id  *string `pulumi:"id"`
	Uri *string `pulumi:"uri"`
}

// EndpointConfigurationLoggingEventStreamInput is an input type that accepts EndpointConfigurationLoggingEventStreamArgs and EndpointConfigurationLoggingEventStreamOutput values.
// You can construct a concrete instance of `EndpointConfigurationLoggingEventStreamInput` via:
//
//	EndpointConfigurationLoggingEventStreamArgs{...}
type EndpointConfigurationLoggingEventStreamInput interface {
	pulumi.Input

	ToEndpointConfigurationLoggingEventStreamOutput() EndpointConfigurationLoggingEventStreamOutput
	ToEndpointConfigurationLoggingEventStreamOutputWithContext(context.Context) EndpointConfigurationLoggingEventStreamOutput
}

type EndpointConfigurationLoggingEventStreamArgs struct {
	// unique identifier of this endpoint configuration
	Id  pulumi.StringPtrInput `pulumi:"id"`
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (EndpointConfigurationLoggingEventStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationLoggingEventStream)(nil)).Elem()
}

func (i EndpointConfigurationLoggingEventStreamArgs) ToEndpointConfigurationLoggingEventStreamOutput() EndpointConfigurationLoggingEventStreamOutput {
	return i.ToEndpointConfigurationLoggingEventStreamOutputWithContext(context.Background())
}

func (i EndpointConfigurationLoggingEventStreamArgs) ToEndpointConfigurationLoggingEventStreamOutputWithContext(ctx context.Context) EndpointConfigurationLoggingEventStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationLoggingEventStreamOutput)
}

// EndpointConfigurationLoggingEventStreamArrayInput is an input type that accepts EndpointConfigurationLoggingEventStreamArray and EndpointConfigurationLoggingEventStreamArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationLoggingEventStreamArrayInput` via:
//
//	EndpointConfigurationLoggingEventStreamArray{ EndpointConfigurationLoggingEventStreamArgs{...} }
type EndpointConfigurationLoggingEventStreamArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationLoggingEventStreamArrayOutput() EndpointConfigurationLoggingEventStreamArrayOutput
	ToEndpointConfigurationLoggingEventStreamArrayOutputWithContext(context.Context) EndpointConfigurationLoggingEventStreamArrayOutput
}

type EndpointConfigurationLoggingEventStreamArray []EndpointConfigurationLoggingEventStreamInput

func (EndpointConfigurationLoggingEventStreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationLoggingEventStream)(nil)).Elem()
}

func (i EndpointConfigurationLoggingEventStreamArray) ToEndpointConfigurationLoggingEventStreamArrayOutput() EndpointConfigurationLoggingEventStreamArrayOutput {
	return i.ToEndpointConfigurationLoggingEventStreamArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationLoggingEventStreamArray) ToEndpointConfigurationLoggingEventStreamArrayOutputWithContext(ctx context.Context) EndpointConfigurationLoggingEventStreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationLoggingEventStreamArrayOutput)
}

type EndpointConfigurationLoggingEventStreamOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationLoggingEventStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationLoggingEventStream)(nil)).Elem()
}

func (o EndpointConfigurationLoggingEventStreamOutput) ToEndpointConfigurationLoggingEventStreamOutput() EndpointConfigurationLoggingEventStreamOutput {
	return o
}

func (o EndpointConfigurationLoggingEventStreamOutput) ToEndpointConfigurationLoggingEventStreamOutputWithContext(ctx context.Context) EndpointConfigurationLoggingEventStreamOutput {
	return o
}

// unique identifier of this endpoint configuration
func (o EndpointConfigurationLoggingEventStreamOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationLoggingEventStream) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigurationLoggingEventStreamOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationLoggingEventStream) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type EndpointConfigurationLoggingEventStreamArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationLoggingEventStreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationLoggingEventStream)(nil)).Elem()
}

func (o EndpointConfigurationLoggingEventStreamArrayOutput) ToEndpointConfigurationLoggingEventStreamArrayOutput() EndpointConfigurationLoggingEventStreamArrayOutput {
	return o
}

func (o EndpointConfigurationLoggingEventStreamArrayOutput) ToEndpointConfigurationLoggingEventStreamArrayOutputWithContext(ctx context.Context) EndpointConfigurationLoggingEventStreamArrayOutput {
	return o
}

func (o EndpointConfigurationLoggingEventStreamArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationLoggingEventStreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationLoggingEventStream {
		return vs[0].([]EndpointConfigurationLoggingEventStream)[vs[1].(int)]
	}).(EndpointConfigurationLoggingEventStreamOutput)
}

type EndpointConfigurationMutualTl struct {
	// PEM-encoded CA certificates that will be used to validate. Multiple CAs may be provided by concatenating them together.
	CertificateAuthorities []EndpointConfigurationMutualTlCertificateAuthority `pulumi:"certificateAuthorities"`
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled *bool `pulumi:"enabled"`
}

// EndpointConfigurationMutualTlInput is an input type that accepts EndpointConfigurationMutualTlArgs and EndpointConfigurationMutualTlOutput values.
// You can construct a concrete instance of `EndpointConfigurationMutualTlInput` via:
//
//	EndpointConfigurationMutualTlArgs{...}
type EndpointConfigurationMutualTlInput interface {
	pulumi.Input

	ToEndpointConfigurationMutualTlOutput() EndpointConfigurationMutualTlOutput
	ToEndpointConfigurationMutualTlOutputWithContext(context.Context) EndpointConfigurationMutualTlOutput
}

type EndpointConfigurationMutualTlArgs struct {
	// PEM-encoded CA certificates that will be used to validate. Multiple CAs may be provided by concatenating them together.
	CertificateAuthorities EndpointConfigurationMutualTlCertificateAuthorityArrayInput `pulumi:"certificateAuthorities"`
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (EndpointConfigurationMutualTlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationMutualTl)(nil)).Elem()
}

func (i EndpointConfigurationMutualTlArgs) ToEndpointConfigurationMutualTlOutput() EndpointConfigurationMutualTlOutput {
	return i.ToEndpointConfigurationMutualTlOutputWithContext(context.Background())
}

func (i EndpointConfigurationMutualTlArgs) ToEndpointConfigurationMutualTlOutputWithContext(ctx context.Context) EndpointConfigurationMutualTlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationMutualTlOutput)
}

// EndpointConfigurationMutualTlArrayInput is an input type that accepts EndpointConfigurationMutualTlArray and EndpointConfigurationMutualTlArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationMutualTlArrayInput` via:
//
//	EndpointConfigurationMutualTlArray{ EndpointConfigurationMutualTlArgs{...} }
type EndpointConfigurationMutualTlArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationMutualTlArrayOutput() EndpointConfigurationMutualTlArrayOutput
	ToEndpointConfigurationMutualTlArrayOutputWithContext(context.Context) EndpointConfigurationMutualTlArrayOutput
}

type EndpointConfigurationMutualTlArray []EndpointConfigurationMutualTlInput

func (EndpointConfigurationMutualTlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationMutualTl)(nil)).Elem()
}

func (i EndpointConfigurationMutualTlArray) ToEndpointConfigurationMutualTlArrayOutput() EndpointConfigurationMutualTlArrayOutput {
	return i.ToEndpointConfigurationMutualTlArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationMutualTlArray) ToEndpointConfigurationMutualTlArrayOutputWithContext(ctx context.Context) EndpointConfigurationMutualTlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationMutualTlArrayOutput)
}

type EndpointConfigurationMutualTlOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationMutualTlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationMutualTl)(nil)).Elem()
}

func (o EndpointConfigurationMutualTlOutput) ToEndpointConfigurationMutualTlOutput() EndpointConfigurationMutualTlOutput {
	return o
}

func (o EndpointConfigurationMutualTlOutput) ToEndpointConfigurationMutualTlOutputWithContext(ctx context.Context) EndpointConfigurationMutualTlOutput {
	return o
}

// PEM-encoded CA certificates that will be used to validate. Multiple CAs may be provided by concatenating them together.
func (o EndpointConfigurationMutualTlOutput) CertificateAuthorities() EndpointConfigurationMutualTlCertificateAuthorityArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationMutualTl) []EndpointConfigurationMutualTlCertificateAuthority {
		return v.CertificateAuthorities
	}).(EndpointConfigurationMutualTlCertificateAuthorityArrayOutput)
}

// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
func (o EndpointConfigurationMutualTlOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationMutualTl) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type EndpointConfigurationMutualTlArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationMutualTlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationMutualTl)(nil)).Elem()
}

func (o EndpointConfigurationMutualTlArrayOutput) ToEndpointConfigurationMutualTlArrayOutput() EndpointConfigurationMutualTlArrayOutput {
	return o
}

func (o EndpointConfigurationMutualTlArrayOutput) ToEndpointConfigurationMutualTlArrayOutputWithContext(ctx context.Context) EndpointConfigurationMutualTlArrayOutput {
	return o
}

func (o EndpointConfigurationMutualTlArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationMutualTlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationMutualTl {
		return vs[0].([]EndpointConfigurationMutualTl)[vs[1].(int)]
	}).(EndpointConfigurationMutualTlOutput)
}

type EndpointConfigurationMutualTlCertificateAuthority struct {
	// unique identifier of this endpoint configuration
	Id  *string `pulumi:"id"`
	Uri *string `pulumi:"uri"`
}

// EndpointConfigurationMutualTlCertificateAuthorityInput is an input type that accepts EndpointConfigurationMutualTlCertificateAuthorityArgs and EndpointConfigurationMutualTlCertificateAuthorityOutput values.
// You can construct a concrete instance of `EndpointConfigurationMutualTlCertificateAuthorityInput` via:
//
//	EndpointConfigurationMutualTlCertificateAuthorityArgs{...}
type EndpointConfigurationMutualTlCertificateAuthorityInput interface {
	pulumi.Input

	ToEndpointConfigurationMutualTlCertificateAuthorityOutput() EndpointConfigurationMutualTlCertificateAuthorityOutput
	ToEndpointConfigurationMutualTlCertificateAuthorityOutputWithContext(context.Context) EndpointConfigurationMutualTlCertificateAuthorityOutput
}

type EndpointConfigurationMutualTlCertificateAuthorityArgs struct {
	// unique identifier of this endpoint configuration
	Id  pulumi.StringPtrInput `pulumi:"id"`
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (EndpointConfigurationMutualTlCertificateAuthorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationMutualTlCertificateAuthority)(nil)).Elem()
}

func (i EndpointConfigurationMutualTlCertificateAuthorityArgs) ToEndpointConfigurationMutualTlCertificateAuthorityOutput() EndpointConfigurationMutualTlCertificateAuthorityOutput {
	return i.ToEndpointConfigurationMutualTlCertificateAuthorityOutputWithContext(context.Background())
}

func (i EndpointConfigurationMutualTlCertificateAuthorityArgs) ToEndpointConfigurationMutualTlCertificateAuthorityOutputWithContext(ctx context.Context) EndpointConfigurationMutualTlCertificateAuthorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationMutualTlCertificateAuthorityOutput)
}

// EndpointConfigurationMutualTlCertificateAuthorityArrayInput is an input type that accepts EndpointConfigurationMutualTlCertificateAuthorityArray and EndpointConfigurationMutualTlCertificateAuthorityArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationMutualTlCertificateAuthorityArrayInput` via:
//
//	EndpointConfigurationMutualTlCertificateAuthorityArray{ EndpointConfigurationMutualTlCertificateAuthorityArgs{...} }
type EndpointConfigurationMutualTlCertificateAuthorityArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationMutualTlCertificateAuthorityArrayOutput() EndpointConfigurationMutualTlCertificateAuthorityArrayOutput
	ToEndpointConfigurationMutualTlCertificateAuthorityArrayOutputWithContext(context.Context) EndpointConfigurationMutualTlCertificateAuthorityArrayOutput
}

type EndpointConfigurationMutualTlCertificateAuthorityArray []EndpointConfigurationMutualTlCertificateAuthorityInput

func (EndpointConfigurationMutualTlCertificateAuthorityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationMutualTlCertificateAuthority)(nil)).Elem()
}

func (i EndpointConfigurationMutualTlCertificateAuthorityArray) ToEndpointConfigurationMutualTlCertificateAuthorityArrayOutput() EndpointConfigurationMutualTlCertificateAuthorityArrayOutput {
	return i.ToEndpointConfigurationMutualTlCertificateAuthorityArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationMutualTlCertificateAuthorityArray) ToEndpointConfigurationMutualTlCertificateAuthorityArrayOutputWithContext(ctx context.Context) EndpointConfigurationMutualTlCertificateAuthorityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationMutualTlCertificateAuthorityArrayOutput)
}

type EndpointConfigurationMutualTlCertificateAuthorityOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationMutualTlCertificateAuthorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationMutualTlCertificateAuthority)(nil)).Elem()
}

func (o EndpointConfigurationMutualTlCertificateAuthorityOutput) ToEndpointConfigurationMutualTlCertificateAuthorityOutput() EndpointConfigurationMutualTlCertificateAuthorityOutput {
	return o
}

func (o EndpointConfigurationMutualTlCertificateAuthorityOutput) ToEndpointConfigurationMutualTlCertificateAuthorityOutputWithContext(ctx context.Context) EndpointConfigurationMutualTlCertificateAuthorityOutput {
	return o
}

// unique identifier of this endpoint configuration
func (o EndpointConfigurationMutualTlCertificateAuthorityOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationMutualTlCertificateAuthority) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigurationMutualTlCertificateAuthorityOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationMutualTlCertificateAuthority) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type EndpointConfigurationMutualTlCertificateAuthorityArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationMutualTlCertificateAuthorityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationMutualTlCertificateAuthority)(nil)).Elem()
}

func (o EndpointConfigurationMutualTlCertificateAuthorityArrayOutput) ToEndpointConfigurationMutualTlCertificateAuthorityArrayOutput() EndpointConfigurationMutualTlCertificateAuthorityArrayOutput {
	return o
}

func (o EndpointConfigurationMutualTlCertificateAuthorityArrayOutput) ToEndpointConfigurationMutualTlCertificateAuthorityArrayOutputWithContext(ctx context.Context) EndpointConfigurationMutualTlCertificateAuthorityArrayOutput {
	return o
}

func (o EndpointConfigurationMutualTlCertificateAuthorityArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationMutualTlCertificateAuthorityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationMutualTlCertificateAuthority {
		return vs[0].([]EndpointConfigurationMutualTlCertificateAuthority)[vs[1].(int)]
	}).(EndpointConfigurationMutualTlCertificateAuthorityOutput)
}

type EndpointConfigurationOauth struct {
	// Integer number of seconds after which ngrok guarantees it will refresh user state from the identity provider and recheck whether the user is still authorized to access the endpoint. This is the preferred tunable to use to enforce a minimum amount of time after which a revoked user will no longer be able to access the resource.
	AuthCheckInterval *int `pulumi:"authCheckInterval"`
	// the prefix of the session cookie that ngrok sets on the http client to cache authentication. default is 'ngrok.'
	CookiePrefix *string `pulumi:"cookiePrefix"`
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled *bool `pulumi:"enabled"`
	// Integer number of seconds of inactivity after which if the user has not accessed the endpoint, their session will time out and they will be forced to reauthenticate.
	InactivityTimeout *int `pulumi:"inactivityTimeout"`
	// Integer number of seconds of the maximum duration of an authenticated session. After this period is exceeded, a user must reauthenticate.
	MaximumDuration *int `pulumi:"maximumDuration"`
	// Do not enforce authentication on HTTP OPTIONS requests. necessary if you are supporting CORS.
	OptionsPassthrough *bool `pulumi:"optionsPassthrough"`
	// an object which defines the identity provider to use for authentication and configuration for who may access the endpoint
	Providers []EndpointConfigurationOauthProvider `pulumi:"providers"`
}

// EndpointConfigurationOauthInput is an input type that accepts EndpointConfigurationOauthArgs and EndpointConfigurationOauthOutput values.
// You can construct a concrete instance of `EndpointConfigurationOauthInput` via:
//
//	EndpointConfigurationOauthArgs{...}
type EndpointConfigurationOauthInput interface {
	pulumi.Input

	ToEndpointConfigurationOauthOutput() EndpointConfigurationOauthOutput
	ToEndpointConfigurationOauthOutputWithContext(context.Context) EndpointConfigurationOauthOutput
}

type EndpointConfigurationOauthArgs struct {
	// Integer number of seconds after which ngrok guarantees it will refresh user state from the identity provider and recheck whether the user is still authorized to access the endpoint. This is the preferred tunable to use to enforce a minimum amount of time after which a revoked user will no longer be able to access the resource.
	AuthCheckInterval pulumi.IntPtrInput `pulumi:"authCheckInterval"`
	// the prefix of the session cookie that ngrok sets on the http client to cache authentication. default is 'ngrok.'
	CookiePrefix pulumi.StringPtrInput `pulumi:"cookiePrefix"`
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Integer number of seconds of inactivity after which if the user has not accessed the endpoint, their session will time out and they will be forced to reauthenticate.
	InactivityTimeout pulumi.IntPtrInput `pulumi:"inactivityTimeout"`
	// Integer number of seconds of the maximum duration of an authenticated session. After this period is exceeded, a user must reauthenticate.
	MaximumDuration pulumi.IntPtrInput `pulumi:"maximumDuration"`
	// Do not enforce authentication on HTTP OPTIONS requests. necessary if you are supporting CORS.
	OptionsPassthrough pulumi.BoolPtrInput `pulumi:"optionsPassthrough"`
	// an object which defines the identity provider to use for authentication and configuration for who may access the endpoint
	Providers EndpointConfigurationOauthProviderArrayInput `pulumi:"providers"`
}

func (EndpointConfigurationOauthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationOauth)(nil)).Elem()
}

func (i EndpointConfigurationOauthArgs) ToEndpointConfigurationOauthOutput() EndpointConfigurationOauthOutput {
	return i.ToEndpointConfigurationOauthOutputWithContext(context.Background())
}

func (i EndpointConfigurationOauthArgs) ToEndpointConfigurationOauthOutputWithContext(ctx context.Context) EndpointConfigurationOauthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationOauthOutput)
}

// EndpointConfigurationOauthArrayInput is an input type that accepts EndpointConfigurationOauthArray and EndpointConfigurationOauthArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationOauthArrayInput` via:
//
//	EndpointConfigurationOauthArray{ EndpointConfigurationOauthArgs{...} }
type EndpointConfigurationOauthArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationOauthArrayOutput() EndpointConfigurationOauthArrayOutput
	ToEndpointConfigurationOauthArrayOutputWithContext(context.Context) EndpointConfigurationOauthArrayOutput
}

type EndpointConfigurationOauthArray []EndpointConfigurationOauthInput

func (EndpointConfigurationOauthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationOauth)(nil)).Elem()
}

func (i EndpointConfigurationOauthArray) ToEndpointConfigurationOauthArrayOutput() EndpointConfigurationOauthArrayOutput {
	return i.ToEndpointConfigurationOauthArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationOauthArray) ToEndpointConfigurationOauthArrayOutputWithContext(ctx context.Context) EndpointConfigurationOauthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationOauthArrayOutput)
}

type EndpointConfigurationOauthOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationOauthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationOauth)(nil)).Elem()
}

func (o EndpointConfigurationOauthOutput) ToEndpointConfigurationOauthOutput() EndpointConfigurationOauthOutput {
	return o
}

func (o EndpointConfigurationOauthOutput) ToEndpointConfigurationOauthOutputWithContext(ctx context.Context) EndpointConfigurationOauthOutput {
	return o
}

// Integer number of seconds after which ngrok guarantees it will refresh user state from the identity provider and recheck whether the user is still authorized to access the endpoint. This is the preferred tunable to use to enforce a minimum amount of time after which a revoked user will no longer be able to access the resource.
func (o EndpointConfigurationOauthOutput) AuthCheckInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOauth) *int { return v.AuthCheckInterval }).(pulumi.IntPtrOutput)
}

// the prefix of the session cookie that ngrok sets on the http client to cache authentication. default is 'ngrok.'
func (o EndpointConfigurationOauthOutput) CookiePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOauth) *string { return v.CookiePrefix }).(pulumi.StringPtrOutput)
}

// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
func (o EndpointConfigurationOauthOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOauth) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Integer number of seconds of inactivity after which if the user has not accessed the endpoint, their session will time out and they will be forced to reauthenticate.
func (o EndpointConfigurationOauthOutput) InactivityTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOauth) *int { return v.InactivityTimeout }).(pulumi.IntPtrOutput)
}

// Integer number of seconds of the maximum duration of an authenticated session. After this period is exceeded, a user must reauthenticate.
func (o EndpointConfigurationOauthOutput) MaximumDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOauth) *int { return v.MaximumDuration }).(pulumi.IntPtrOutput)
}

// Do not enforce authentication on HTTP OPTIONS requests. necessary if you are supporting CORS.
func (o EndpointConfigurationOauthOutput) OptionsPassthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOauth) *bool { return v.OptionsPassthrough }).(pulumi.BoolPtrOutput)
}

// an object which defines the identity provider to use for authentication and configuration for who may access the endpoint
func (o EndpointConfigurationOauthOutput) Providers() EndpointConfigurationOauthProviderArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationOauth) []EndpointConfigurationOauthProvider { return v.Providers }).(EndpointConfigurationOauthProviderArrayOutput)
}

type EndpointConfigurationOauthArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationOauthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationOauth)(nil)).Elem()
}

func (o EndpointConfigurationOauthArrayOutput) ToEndpointConfigurationOauthArrayOutput() EndpointConfigurationOauthArrayOutput {
	return o
}

func (o EndpointConfigurationOauthArrayOutput) ToEndpointConfigurationOauthArrayOutputWithContext(ctx context.Context) EndpointConfigurationOauthArrayOutput {
	return o
}

func (o EndpointConfigurationOauthArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationOauthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationOauth {
		return vs[0].([]EndpointConfigurationOauth)[vs[1].(int)]
	}).(EndpointConfigurationOauthOutput)
}

type EndpointConfigurationOauthProvider struct {
	Facebooks  []EndpointConfigurationOauthProviderFacebook  `pulumi:"facebooks"`
	Githubs    []EndpointConfigurationOauthProviderGithub    `pulumi:"githubs"`
	Googles    []EndpointConfigurationOauthProviderGoogle    `pulumi:"googles"`
	Microsofts []EndpointConfigurationOauthProviderMicrosoft `pulumi:"microsofts"`
}

// EndpointConfigurationOauthProviderInput is an input type that accepts EndpointConfigurationOauthProviderArgs and EndpointConfigurationOauthProviderOutput values.
// You can construct a concrete instance of `EndpointConfigurationOauthProviderInput` via:
//
//	EndpointConfigurationOauthProviderArgs{...}
type EndpointConfigurationOauthProviderInput interface {
	pulumi.Input

	ToEndpointConfigurationOauthProviderOutput() EndpointConfigurationOauthProviderOutput
	ToEndpointConfigurationOauthProviderOutputWithContext(context.Context) EndpointConfigurationOauthProviderOutput
}

type EndpointConfigurationOauthProviderArgs struct {
	Facebooks  EndpointConfigurationOauthProviderFacebookArrayInput  `pulumi:"facebooks"`
	Githubs    EndpointConfigurationOauthProviderGithubArrayInput    `pulumi:"githubs"`
	Googles    EndpointConfigurationOauthProviderGoogleArrayInput    `pulumi:"googles"`
	Microsofts EndpointConfigurationOauthProviderMicrosoftArrayInput `pulumi:"microsofts"`
}

func (EndpointConfigurationOauthProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationOauthProvider)(nil)).Elem()
}

func (i EndpointConfigurationOauthProviderArgs) ToEndpointConfigurationOauthProviderOutput() EndpointConfigurationOauthProviderOutput {
	return i.ToEndpointConfigurationOauthProviderOutputWithContext(context.Background())
}

func (i EndpointConfigurationOauthProviderArgs) ToEndpointConfigurationOauthProviderOutputWithContext(ctx context.Context) EndpointConfigurationOauthProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationOauthProviderOutput)
}

// EndpointConfigurationOauthProviderArrayInput is an input type that accepts EndpointConfigurationOauthProviderArray and EndpointConfigurationOauthProviderArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationOauthProviderArrayInput` via:
//
//	EndpointConfigurationOauthProviderArray{ EndpointConfigurationOauthProviderArgs{...} }
type EndpointConfigurationOauthProviderArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationOauthProviderArrayOutput() EndpointConfigurationOauthProviderArrayOutput
	ToEndpointConfigurationOauthProviderArrayOutputWithContext(context.Context) EndpointConfigurationOauthProviderArrayOutput
}

type EndpointConfigurationOauthProviderArray []EndpointConfigurationOauthProviderInput

func (EndpointConfigurationOauthProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationOauthProvider)(nil)).Elem()
}

func (i EndpointConfigurationOauthProviderArray) ToEndpointConfigurationOauthProviderArrayOutput() EndpointConfigurationOauthProviderArrayOutput {
	return i.ToEndpointConfigurationOauthProviderArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationOauthProviderArray) ToEndpointConfigurationOauthProviderArrayOutputWithContext(ctx context.Context) EndpointConfigurationOauthProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationOauthProviderArrayOutput)
}

type EndpointConfigurationOauthProviderOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationOauthProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationOauthProvider)(nil)).Elem()
}

func (o EndpointConfigurationOauthProviderOutput) ToEndpointConfigurationOauthProviderOutput() EndpointConfigurationOauthProviderOutput {
	return o
}

func (o EndpointConfigurationOauthProviderOutput) ToEndpointConfigurationOauthProviderOutputWithContext(ctx context.Context) EndpointConfigurationOauthProviderOutput {
	return o
}

func (o EndpointConfigurationOauthProviderOutput) Facebooks() EndpointConfigurationOauthProviderFacebookArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProvider) []EndpointConfigurationOauthProviderFacebook {
		return v.Facebooks
	}).(EndpointConfigurationOauthProviderFacebookArrayOutput)
}

func (o EndpointConfigurationOauthProviderOutput) Githubs() EndpointConfigurationOauthProviderGithubArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProvider) []EndpointConfigurationOauthProviderGithub {
		return v.Githubs
	}).(EndpointConfigurationOauthProviderGithubArrayOutput)
}

func (o EndpointConfigurationOauthProviderOutput) Googles() EndpointConfigurationOauthProviderGoogleArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProvider) []EndpointConfigurationOauthProviderGoogle {
		return v.Googles
	}).(EndpointConfigurationOauthProviderGoogleArrayOutput)
}

func (o EndpointConfigurationOauthProviderOutput) Microsofts() EndpointConfigurationOauthProviderMicrosoftArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProvider) []EndpointConfigurationOauthProviderMicrosoft {
		return v.Microsofts
	}).(EndpointConfigurationOauthProviderMicrosoftArrayOutput)
}

type EndpointConfigurationOauthProviderArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationOauthProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationOauthProvider)(nil)).Elem()
}

func (o EndpointConfigurationOauthProviderArrayOutput) ToEndpointConfigurationOauthProviderArrayOutput() EndpointConfigurationOauthProviderArrayOutput {
	return o
}

func (o EndpointConfigurationOauthProviderArrayOutput) ToEndpointConfigurationOauthProviderArrayOutputWithContext(ctx context.Context) EndpointConfigurationOauthProviderArrayOutput {
	return o
}

func (o EndpointConfigurationOauthProviderArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationOauthProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationOauthProvider {
		return vs[0].([]EndpointConfigurationOauthProvider)[vs[1].(int)]
	}).(EndpointConfigurationOauthProviderOutput)
}

type EndpointConfigurationOauthProviderFacebook struct {
	ClientId       *string  `pulumi:"clientId"`
	ClientSecret   *string  `pulumi:"clientSecret"`
	EmailAddresses []string `pulumi:"emailAddresses"`
	EmailDomains   []string `pulumi:"emailDomains"`
	Scopes         []string `pulumi:"scopes"`
}

// EndpointConfigurationOauthProviderFacebookInput is an input type that accepts EndpointConfigurationOauthProviderFacebookArgs and EndpointConfigurationOauthProviderFacebookOutput values.
// You can construct a concrete instance of `EndpointConfigurationOauthProviderFacebookInput` via:
//
//	EndpointConfigurationOauthProviderFacebookArgs{...}
type EndpointConfigurationOauthProviderFacebookInput interface {
	pulumi.Input

	ToEndpointConfigurationOauthProviderFacebookOutput() EndpointConfigurationOauthProviderFacebookOutput
	ToEndpointConfigurationOauthProviderFacebookOutputWithContext(context.Context) EndpointConfigurationOauthProviderFacebookOutput
}

type EndpointConfigurationOauthProviderFacebookArgs struct {
	ClientId       pulumi.StringPtrInput   `pulumi:"clientId"`
	ClientSecret   pulumi.StringPtrInput   `pulumi:"clientSecret"`
	EmailAddresses pulumi.StringArrayInput `pulumi:"emailAddresses"`
	EmailDomains   pulumi.StringArrayInput `pulumi:"emailDomains"`
	Scopes         pulumi.StringArrayInput `pulumi:"scopes"`
}

func (EndpointConfigurationOauthProviderFacebookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationOauthProviderFacebook)(nil)).Elem()
}

func (i EndpointConfigurationOauthProviderFacebookArgs) ToEndpointConfigurationOauthProviderFacebookOutput() EndpointConfigurationOauthProviderFacebookOutput {
	return i.ToEndpointConfigurationOauthProviderFacebookOutputWithContext(context.Background())
}

func (i EndpointConfigurationOauthProviderFacebookArgs) ToEndpointConfigurationOauthProviderFacebookOutputWithContext(ctx context.Context) EndpointConfigurationOauthProviderFacebookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationOauthProviderFacebookOutput)
}

// EndpointConfigurationOauthProviderFacebookArrayInput is an input type that accepts EndpointConfigurationOauthProviderFacebookArray and EndpointConfigurationOauthProviderFacebookArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationOauthProviderFacebookArrayInput` via:
//
//	EndpointConfigurationOauthProviderFacebookArray{ EndpointConfigurationOauthProviderFacebookArgs{...} }
type EndpointConfigurationOauthProviderFacebookArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationOauthProviderFacebookArrayOutput() EndpointConfigurationOauthProviderFacebookArrayOutput
	ToEndpointConfigurationOauthProviderFacebookArrayOutputWithContext(context.Context) EndpointConfigurationOauthProviderFacebookArrayOutput
}

type EndpointConfigurationOauthProviderFacebookArray []EndpointConfigurationOauthProviderFacebookInput

func (EndpointConfigurationOauthProviderFacebookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationOauthProviderFacebook)(nil)).Elem()
}

func (i EndpointConfigurationOauthProviderFacebookArray) ToEndpointConfigurationOauthProviderFacebookArrayOutput() EndpointConfigurationOauthProviderFacebookArrayOutput {
	return i.ToEndpointConfigurationOauthProviderFacebookArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationOauthProviderFacebookArray) ToEndpointConfigurationOauthProviderFacebookArrayOutputWithContext(ctx context.Context) EndpointConfigurationOauthProviderFacebookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationOauthProviderFacebookArrayOutput)
}

type EndpointConfigurationOauthProviderFacebookOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationOauthProviderFacebookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationOauthProviderFacebook)(nil)).Elem()
}

func (o EndpointConfigurationOauthProviderFacebookOutput) ToEndpointConfigurationOauthProviderFacebookOutput() EndpointConfigurationOauthProviderFacebookOutput {
	return o
}

func (o EndpointConfigurationOauthProviderFacebookOutput) ToEndpointConfigurationOauthProviderFacebookOutputWithContext(ctx context.Context) EndpointConfigurationOauthProviderFacebookOutput {
	return o
}

func (o EndpointConfigurationOauthProviderFacebookOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderFacebook) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigurationOauthProviderFacebookOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderFacebook) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigurationOauthProviderFacebookOutput) EmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderFacebook) []string { return v.EmailAddresses }).(pulumi.StringArrayOutput)
}

func (o EndpointConfigurationOauthProviderFacebookOutput) EmailDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderFacebook) []string { return v.EmailDomains }).(pulumi.StringArrayOutput)
}

func (o EndpointConfigurationOauthProviderFacebookOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderFacebook) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type EndpointConfigurationOauthProviderFacebookArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationOauthProviderFacebookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationOauthProviderFacebook)(nil)).Elem()
}

func (o EndpointConfigurationOauthProviderFacebookArrayOutput) ToEndpointConfigurationOauthProviderFacebookArrayOutput() EndpointConfigurationOauthProviderFacebookArrayOutput {
	return o
}

func (o EndpointConfigurationOauthProviderFacebookArrayOutput) ToEndpointConfigurationOauthProviderFacebookArrayOutputWithContext(ctx context.Context) EndpointConfigurationOauthProviderFacebookArrayOutput {
	return o
}

func (o EndpointConfigurationOauthProviderFacebookArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationOauthProviderFacebookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationOauthProviderFacebook {
		return vs[0].([]EndpointConfigurationOauthProviderFacebook)[vs[1].(int)]
	}).(EndpointConfigurationOauthProviderFacebookOutput)
}

type EndpointConfigurationOauthProviderGithub struct {
	ClientId       *string  `pulumi:"clientId"`
	ClientSecret   *string  `pulumi:"clientSecret"`
	EmailAddresses []string `pulumi:"emailAddresses"`
	EmailDomains   []string `pulumi:"emailDomains"`
	Organizations  []string `pulumi:"organizations"`
	Scopes         []string `pulumi:"scopes"`
	Teams          []string `pulumi:"teams"`
}

// EndpointConfigurationOauthProviderGithubInput is an input type that accepts EndpointConfigurationOauthProviderGithubArgs and EndpointConfigurationOauthProviderGithubOutput values.
// You can construct a concrete instance of `EndpointConfigurationOauthProviderGithubInput` via:
//
//	EndpointConfigurationOauthProviderGithubArgs{...}
type EndpointConfigurationOauthProviderGithubInput interface {
	pulumi.Input

	ToEndpointConfigurationOauthProviderGithubOutput() EndpointConfigurationOauthProviderGithubOutput
	ToEndpointConfigurationOauthProviderGithubOutputWithContext(context.Context) EndpointConfigurationOauthProviderGithubOutput
}

type EndpointConfigurationOauthProviderGithubArgs struct {
	ClientId       pulumi.StringPtrInput   `pulumi:"clientId"`
	ClientSecret   pulumi.StringPtrInput   `pulumi:"clientSecret"`
	EmailAddresses pulumi.StringArrayInput `pulumi:"emailAddresses"`
	EmailDomains   pulumi.StringArrayInput `pulumi:"emailDomains"`
	Organizations  pulumi.StringArrayInput `pulumi:"organizations"`
	Scopes         pulumi.StringArrayInput `pulumi:"scopes"`
	Teams          pulumi.StringArrayInput `pulumi:"teams"`
}

func (EndpointConfigurationOauthProviderGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationOauthProviderGithub)(nil)).Elem()
}

func (i EndpointConfigurationOauthProviderGithubArgs) ToEndpointConfigurationOauthProviderGithubOutput() EndpointConfigurationOauthProviderGithubOutput {
	return i.ToEndpointConfigurationOauthProviderGithubOutputWithContext(context.Background())
}

func (i EndpointConfigurationOauthProviderGithubArgs) ToEndpointConfigurationOauthProviderGithubOutputWithContext(ctx context.Context) EndpointConfigurationOauthProviderGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationOauthProviderGithubOutput)
}

// EndpointConfigurationOauthProviderGithubArrayInput is an input type that accepts EndpointConfigurationOauthProviderGithubArray and EndpointConfigurationOauthProviderGithubArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationOauthProviderGithubArrayInput` via:
//
//	EndpointConfigurationOauthProviderGithubArray{ EndpointConfigurationOauthProviderGithubArgs{...} }
type EndpointConfigurationOauthProviderGithubArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationOauthProviderGithubArrayOutput() EndpointConfigurationOauthProviderGithubArrayOutput
	ToEndpointConfigurationOauthProviderGithubArrayOutputWithContext(context.Context) EndpointConfigurationOauthProviderGithubArrayOutput
}

type EndpointConfigurationOauthProviderGithubArray []EndpointConfigurationOauthProviderGithubInput

func (EndpointConfigurationOauthProviderGithubArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationOauthProviderGithub)(nil)).Elem()
}

func (i EndpointConfigurationOauthProviderGithubArray) ToEndpointConfigurationOauthProviderGithubArrayOutput() EndpointConfigurationOauthProviderGithubArrayOutput {
	return i.ToEndpointConfigurationOauthProviderGithubArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationOauthProviderGithubArray) ToEndpointConfigurationOauthProviderGithubArrayOutputWithContext(ctx context.Context) EndpointConfigurationOauthProviderGithubArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationOauthProviderGithubArrayOutput)
}

type EndpointConfigurationOauthProviderGithubOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationOauthProviderGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationOauthProviderGithub)(nil)).Elem()
}

func (o EndpointConfigurationOauthProviderGithubOutput) ToEndpointConfigurationOauthProviderGithubOutput() EndpointConfigurationOauthProviderGithubOutput {
	return o
}

func (o EndpointConfigurationOauthProviderGithubOutput) ToEndpointConfigurationOauthProviderGithubOutputWithContext(ctx context.Context) EndpointConfigurationOauthProviderGithubOutput {
	return o
}

func (o EndpointConfigurationOauthProviderGithubOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderGithub) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigurationOauthProviderGithubOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderGithub) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigurationOauthProviderGithubOutput) EmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderGithub) []string { return v.EmailAddresses }).(pulumi.StringArrayOutput)
}

func (o EndpointConfigurationOauthProviderGithubOutput) EmailDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderGithub) []string { return v.EmailDomains }).(pulumi.StringArrayOutput)
}

func (o EndpointConfigurationOauthProviderGithubOutput) Organizations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderGithub) []string { return v.Organizations }).(pulumi.StringArrayOutput)
}

func (o EndpointConfigurationOauthProviderGithubOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderGithub) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

func (o EndpointConfigurationOauthProviderGithubOutput) Teams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderGithub) []string { return v.Teams }).(pulumi.StringArrayOutput)
}

type EndpointConfigurationOauthProviderGithubArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationOauthProviderGithubArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationOauthProviderGithub)(nil)).Elem()
}

func (o EndpointConfigurationOauthProviderGithubArrayOutput) ToEndpointConfigurationOauthProviderGithubArrayOutput() EndpointConfigurationOauthProviderGithubArrayOutput {
	return o
}

func (o EndpointConfigurationOauthProviderGithubArrayOutput) ToEndpointConfigurationOauthProviderGithubArrayOutputWithContext(ctx context.Context) EndpointConfigurationOauthProviderGithubArrayOutput {
	return o
}

func (o EndpointConfigurationOauthProviderGithubArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationOauthProviderGithubOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationOauthProviderGithub {
		return vs[0].([]EndpointConfigurationOauthProviderGithub)[vs[1].(int)]
	}).(EndpointConfigurationOauthProviderGithubOutput)
}

type EndpointConfigurationOauthProviderGoogle struct {
	ClientId       *string  `pulumi:"clientId"`
	ClientSecret   *string  `pulumi:"clientSecret"`
	EmailAddresses []string `pulumi:"emailAddresses"`
	EmailDomains   []string `pulumi:"emailDomains"`
	Scopes         []string `pulumi:"scopes"`
}

// EndpointConfigurationOauthProviderGoogleInput is an input type that accepts EndpointConfigurationOauthProviderGoogleArgs and EndpointConfigurationOauthProviderGoogleOutput values.
// You can construct a concrete instance of `EndpointConfigurationOauthProviderGoogleInput` via:
//
//	EndpointConfigurationOauthProviderGoogleArgs{...}
type EndpointConfigurationOauthProviderGoogleInput interface {
	pulumi.Input

	ToEndpointConfigurationOauthProviderGoogleOutput() EndpointConfigurationOauthProviderGoogleOutput
	ToEndpointConfigurationOauthProviderGoogleOutputWithContext(context.Context) EndpointConfigurationOauthProviderGoogleOutput
}

type EndpointConfigurationOauthProviderGoogleArgs struct {
	ClientId       pulumi.StringPtrInput   `pulumi:"clientId"`
	ClientSecret   pulumi.StringPtrInput   `pulumi:"clientSecret"`
	EmailAddresses pulumi.StringArrayInput `pulumi:"emailAddresses"`
	EmailDomains   pulumi.StringArrayInput `pulumi:"emailDomains"`
	Scopes         pulumi.StringArrayInput `pulumi:"scopes"`
}

func (EndpointConfigurationOauthProviderGoogleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationOauthProviderGoogle)(nil)).Elem()
}

func (i EndpointConfigurationOauthProviderGoogleArgs) ToEndpointConfigurationOauthProviderGoogleOutput() EndpointConfigurationOauthProviderGoogleOutput {
	return i.ToEndpointConfigurationOauthProviderGoogleOutputWithContext(context.Background())
}

func (i EndpointConfigurationOauthProviderGoogleArgs) ToEndpointConfigurationOauthProviderGoogleOutputWithContext(ctx context.Context) EndpointConfigurationOauthProviderGoogleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationOauthProviderGoogleOutput)
}

// EndpointConfigurationOauthProviderGoogleArrayInput is an input type that accepts EndpointConfigurationOauthProviderGoogleArray and EndpointConfigurationOauthProviderGoogleArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationOauthProviderGoogleArrayInput` via:
//
//	EndpointConfigurationOauthProviderGoogleArray{ EndpointConfigurationOauthProviderGoogleArgs{...} }
type EndpointConfigurationOauthProviderGoogleArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationOauthProviderGoogleArrayOutput() EndpointConfigurationOauthProviderGoogleArrayOutput
	ToEndpointConfigurationOauthProviderGoogleArrayOutputWithContext(context.Context) EndpointConfigurationOauthProviderGoogleArrayOutput
}

type EndpointConfigurationOauthProviderGoogleArray []EndpointConfigurationOauthProviderGoogleInput

func (EndpointConfigurationOauthProviderGoogleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationOauthProviderGoogle)(nil)).Elem()
}

func (i EndpointConfigurationOauthProviderGoogleArray) ToEndpointConfigurationOauthProviderGoogleArrayOutput() EndpointConfigurationOauthProviderGoogleArrayOutput {
	return i.ToEndpointConfigurationOauthProviderGoogleArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationOauthProviderGoogleArray) ToEndpointConfigurationOauthProviderGoogleArrayOutputWithContext(ctx context.Context) EndpointConfigurationOauthProviderGoogleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationOauthProviderGoogleArrayOutput)
}

type EndpointConfigurationOauthProviderGoogleOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationOauthProviderGoogleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationOauthProviderGoogle)(nil)).Elem()
}

func (o EndpointConfigurationOauthProviderGoogleOutput) ToEndpointConfigurationOauthProviderGoogleOutput() EndpointConfigurationOauthProviderGoogleOutput {
	return o
}

func (o EndpointConfigurationOauthProviderGoogleOutput) ToEndpointConfigurationOauthProviderGoogleOutputWithContext(ctx context.Context) EndpointConfigurationOauthProviderGoogleOutput {
	return o
}

func (o EndpointConfigurationOauthProviderGoogleOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderGoogle) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigurationOauthProviderGoogleOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderGoogle) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigurationOauthProviderGoogleOutput) EmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderGoogle) []string { return v.EmailAddresses }).(pulumi.StringArrayOutput)
}

func (o EndpointConfigurationOauthProviderGoogleOutput) EmailDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderGoogle) []string { return v.EmailDomains }).(pulumi.StringArrayOutput)
}

func (o EndpointConfigurationOauthProviderGoogleOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderGoogle) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type EndpointConfigurationOauthProviderGoogleArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationOauthProviderGoogleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationOauthProviderGoogle)(nil)).Elem()
}

func (o EndpointConfigurationOauthProviderGoogleArrayOutput) ToEndpointConfigurationOauthProviderGoogleArrayOutput() EndpointConfigurationOauthProviderGoogleArrayOutput {
	return o
}

func (o EndpointConfigurationOauthProviderGoogleArrayOutput) ToEndpointConfigurationOauthProviderGoogleArrayOutputWithContext(ctx context.Context) EndpointConfigurationOauthProviderGoogleArrayOutput {
	return o
}

func (o EndpointConfigurationOauthProviderGoogleArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationOauthProviderGoogleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationOauthProviderGoogle {
		return vs[0].([]EndpointConfigurationOauthProviderGoogle)[vs[1].(int)]
	}).(EndpointConfigurationOauthProviderGoogleOutput)
}

type EndpointConfigurationOauthProviderMicrosoft struct {
	ClientId       *string  `pulumi:"clientId"`
	ClientSecret   *string  `pulumi:"clientSecret"`
	EmailAddresses []string `pulumi:"emailAddresses"`
	EmailDomains   []string `pulumi:"emailDomains"`
	Scopes         []string `pulumi:"scopes"`
}

// EndpointConfigurationOauthProviderMicrosoftInput is an input type that accepts EndpointConfigurationOauthProviderMicrosoftArgs and EndpointConfigurationOauthProviderMicrosoftOutput values.
// You can construct a concrete instance of `EndpointConfigurationOauthProviderMicrosoftInput` via:
//
//	EndpointConfigurationOauthProviderMicrosoftArgs{...}
type EndpointConfigurationOauthProviderMicrosoftInput interface {
	pulumi.Input

	ToEndpointConfigurationOauthProviderMicrosoftOutput() EndpointConfigurationOauthProviderMicrosoftOutput
	ToEndpointConfigurationOauthProviderMicrosoftOutputWithContext(context.Context) EndpointConfigurationOauthProviderMicrosoftOutput
}

type EndpointConfigurationOauthProviderMicrosoftArgs struct {
	ClientId       pulumi.StringPtrInput   `pulumi:"clientId"`
	ClientSecret   pulumi.StringPtrInput   `pulumi:"clientSecret"`
	EmailAddresses pulumi.StringArrayInput `pulumi:"emailAddresses"`
	EmailDomains   pulumi.StringArrayInput `pulumi:"emailDomains"`
	Scopes         pulumi.StringArrayInput `pulumi:"scopes"`
}

func (EndpointConfigurationOauthProviderMicrosoftArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationOauthProviderMicrosoft)(nil)).Elem()
}

func (i EndpointConfigurationOauthProviderMicrosoftArgs) ToEndpointConfigurationOauthProviderMicrosoftOutput() EndpointConfigurationOauthProviderMicrosoftOutput {
	return i.ToEndpointConfigurationOauthProviderMicrosoftOutputWithContext(context.Background())
}

func (i EndpointConfigurationOauthProviderMicrosoftArgs) ToEndpointConfigurationOauthProviderMicrosoftOutputWithContext(ctx context.Context) EndpointConfigurationOauthProviderMicrosoftOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationOauthProviderMicrosoftOutput)
}

// EndpointConfigurationOauthProviderMicrosoftArrayInput is an input type that accepts EndpointConfigurationOauthProviderMicrosoftArray and EndpointConfigurationOauthProviderMicrosoftArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationOauthProviderMicrosoftArrayInput` via:
//
//	EndpointConfigurationOauthProviderMicrosoftArray{ EndpointConfigurationOauthProviderMicrosoftArgs{...} }
type EndpointConfigurationOauthProviderMicrosoftArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationOauthProviderMicrosoftArrayOutput() EndpointConfigurationOauthProviderMicrosoftArrayOutput
	ToEndpointConfigurationOauthProviderMicrosoftArrayOutputWithContext(context.Context) EndpointConfigurationOauthProviderMicrosoftArrayOutput
}

type EndpointConfigurationOauthProviderMicrosoftArray []EndpointConfigurationOauthProviderMicrosoftInput

func (EndpointConfigurationOauthProviderMicrosoftArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationOauthProviderMicrosoft)(nil)).Elem()
}

func (i EndpointConfigurationOauthProviderMicrosoftArray) ToEndpointConfigurationOauthProviderMicrosoftArrayOutput() EndpointConfigurationOauthProviderMicrosoftArrayOutput {
	return i.ToEndpointConfigurationOauthProviderMicrosoftArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationOauthProviderMicrosoftArray) ToEndpointConfigurationOauthProviderMicrosoftArrayOutputWithContext(ctx context.Context) EndpointConfigurationOauthProviderMicrosoftArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationOauthProviderMicrosoftArrayOutput)
}

type EndpointConfigurationOauthProviderMicrosoftOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationOauthProviderMicrosoftOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationOauthProviderMicrosoft)(nil)).Elem()
}

func (o EndpointConfigurationOauthProviderMicrosoftOutput) ToEndpointConfigurationOauthProviderMicrosoftOutput() EndpointConfigurationOauthProviderMicrosoftOutput {
	return o
}

func (o EndpointConfigurationOauthProviderMicrosoftOutput) ToEndpointConfigurationOauthProviderMicrosoftOutputWithContext(ctx context.Context) EndpointConfigurationOauthProviderMicrosoftOutput {
	return o
}

func (o EndpointConfigurationOauthProviderMicrosoftOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderMicrosoft) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigurationOauthProviderMicrosoftOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderMicrosoft) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o EndpointConfigurationOauthProviderMicrosoftOutput) EmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderMicrosoft) []string { return v.EmailAddresses }).(pulumi.StringArrayOutput)
}

func (o EndpointConfigurationOauthProviderMicrosoftOutput) EmailDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderMicrosoft) []string { return v.EmailDomains }).(pulumi.StringArrayOutput)
}

func (o EndpointConfigurationOauthProviderMicrosoftOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationOauthProviderMicrosoft) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type EndpointConfigurationOauthProviderMicrosoftArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationOauthProviderMicrosoftArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationOauthProviderMicrosoft)(nil)).Elem()
}

func (o EndpointConfigurationOauthProviderMicrosoftArrayOutput) ToEndpointConfigurationOauthProviderMicrosoftArrayOutput() EndpointConfigurationOauthProviderMicrosoftArrayOutput {
	return o
}

func (o EndpointConfigurationOauthProviderMicrosoftArrayOutput) ToEndpointConfigurationOauthProviderMicrosoftArrayOutputWithContext(ctx context.Context) EndpointConfigurationOauthProviderMicrosoftArrayOutput {
	return o
}

func (o EndpointConfigurationOauthProviderMicrosoftArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationOauthProviderMicrosoftOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationOauthProviderMicrosoft {
		return vs[0].([]EndpointConfigurationOauthProviderMicrosoft)[vs[1].(int)]
	}).(EndpointConfigurationOauthProviderMicrosoftOutput)
}

type EndpointConfigurationOidc struct {
	// The OIDC app's client ID and OIDC audience.
	ClientId *string `pulumi:"clientId"`
	// The OIDC app's client secret.
	ClientSecret *string `pulumi:"clientSecret"`
	// the prefix of the session cookie that ngrok sets on the http client to cache authentication. default is 'ngrok.'
	CookiePrefix *string `pulumi:"cookiePrefix"`
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled *bool `pulumi:"enabled"`
	// Integer number of seconds of inactivity after which if the user has not accessed the endpoint, their session will time out and they will be forced to reauthenticate.
	InactivityTimeout *int `pulumi:"inactivityTimeout"`
	// URL of the OIDC "OpenID provider". This is the base URL used for discovery.
	Issuer *string `pulumi:"issuer"`
	// Integer number of seconds of the maximum duration of an authenticated session. After this period is exceeded, a user must reauthenticate.
	MaximumDuration *int `pulumi:"maximumDuration"`
	// Do not enforce authentication on HTTP OPTIONS requests. necessary if you are supporting CORS.
	OptionsPassthrough *bool `pulumi:"optionsPassthrough"`
	// The set of scopes to request from the OIDC identity provider.
	Scopes []string `pulumi:"scopes"`
}

// EndpointConfigurationOidcInput is an input type that accepts EndpointConfigurationOidcArgs and EndpointConfigurationOidcOutput values.
// You can construct a concrete instance of `EndpointConfigurationOidcInput` via:
//
//	EndpointConfigurationOidcArgs{...}
type EndpointConfigurationOidcInput interface {
	pulumi.Input

	ToEndpointConfigurationOidcOutput() EndpointConfigurationOidcOutput
	ToEndpointConfigurationOidcOutputWithContext(context.Context) EndpointConfigurationOidcOutput
}

type EndpointConfigurationOidcArgs struct {
	// The OIDC app's client ID and OIDC audience.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The OIDC app's client secret.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// the prefix of the session cookie that ngrok sets on the http client to cache authentication. default is 'ngrok.'
	CookiePrefix pulumi.StringPtrInput `pulumi:"cookiePrefix"`
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Integer number of seconds of inactivity after which if the user has not accessed the endpoint, their session will time out and they will be forced to reauthenticate.
	InactivityTimeout pulumi.IntPtrInput `pulumi:"inactivityTimeout"`
	// URL of the OIDC "OpenID provider". This is the base URL used for discovery.
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// Integer number of seconds of the maximum duration of an authenticated session. After this period is exceeded, a user must reauthenticate.
	MaximumDuration pulumi.IntPtrInput `pulumi:"maximumDuration"`
	// Do not enforce authentication on HTTP OPTIONS requests. necessary if you are supporting CORS.
	OptionsPassthrough pulumi.BoolPtrInput `pulumi:"optionsPassthrough"`
	// The set of scopes to request from the OIDC identity provider.
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
}

func (EndpointConfigurationOidcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationOidc)(nil)).Elem()
}

func (i EndpointConfigurationOidcArgs) ToEndpointConfigurationOidcOutput() EndpointConfigurationOidcOutput {
	return i.ToEndpointConfigurationOidcOutputWithContext(context.Background())
}

func (i EndpointConfigurationOidcArgs) ToEndpointConfigurationOidcOutputWithContext(ctx context.Context) EndpointConfigurationOidcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationOidcOutput)
}

// EndpointConfigurationOidcArrayInput is an input type that accepts EndpointConfigurationOidcArray and EndpointConfigurationOidcArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationOidcArrayInput` via:
//
//	EndpointConfigurationOidcArray{ EndpointConfigurationOidcArgs{...} }
type EndpointConfigurationOidcArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationOidcArrayOutput() EndpointConfigurationOidcArrayOutput
	ToEndpointConfigurationOidcArrayOutputWithContext(context.Context) EndpointConfigurationOidcArrayOutput
}

type EndpointConfigurationOidcArray []EndpointConfigurationOidcInput

func (EndpointConfigurationOidcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationOidc)(nil)).Elem()
}

func (i EndpointConfigurationOidcArray) ToEndpointConfigurationOidcArrayOutput() EndpointConfigurationOidcArrayOutput {
	return i.ToEndpointConfigurationOidcArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationOidcArray) ToEndpointConfigurationOidcArrayOutputWithContext(ctx context.Context) EndpointConfigurationOidcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationOidcArrayOutput)
}

type EndpointConfigurationOidcOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationOidcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationOidc)(nil)).Elem()
}

func (o EndpointConfigurationOidcOutput) ToEndpointConfigurationOidcOutput() EndpointConfigurationOidcOutput {
	return o
}

func (o EndpointConfigurationOidcOutput) ToEndpointConfigurationOidcOutputWithContext(ctx context.Context) EndpointConfigurationOidcOutput {
	return o
}

// The OIDC app's client ID and OIDC audience.
func (o EndpointConfigurationOidcOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOidc) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The OIDC app's client secret.
func (o EndpointConfigurationOidcOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOidc) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// the prefix of the session cookie that ngrok sets on the http client to cache authentication. default is 'ngrok.'
func (o EndpointConfigurationOidcOutput) CookiePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOidc) *string { return v.CookiePrefix }).(pulumi.StringPtrOutput)
}

// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
func (o EndpointConfigurationOidcOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOidc) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Integer number of seconds of inactivity after which if the user has not accessed the endpoint, their session will time out and they will be forced to reauthenticate.
func (o EndpointConfigurationOidcOutput) InactivityTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOidc) *int { return v.InactivityTimeout }).(pulumi.IntPtrOutput)
}

// URL of the OIDC "OpenID provider". This is the base URL used for discovery.
func (o EndpointConfigurationOidcOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOidc) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// Integer number of seconds of the maximum duration of an authenticated session. After this period is exceeded, a user must reauthenticate.
func (o EndpointConfigurationOidcOutput) MaximumDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOidc) *int { return v.MaximumDuration }).(pulumi.IntPtrOutput)
}

// Do not enforce authentication on HTTP OPTIONS requests. necessary if you are supporting CORS.
func (o EndpointConfigurationOidcOutput) OptionsPassthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationOidc) *bool { return v.OptionsPassthrough }).(pulumi.BoolPtrOutput)
}

// The set of scopes to request from the OIDC identity provider.
func (o EndpointConfigurationOidcOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationOidc) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

type EndpointConfigurationOidcArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationOidcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationOidc)(nil)).Elem()
}

func (o EndpointConfigurationOidcArrayOutput) ToEndpointConfigurationOidcArrayOutput() EndpointConfigurationOidcArrayOutput {
	return o
}

func (o EndpointConfigurationOidcArrayOutput) ToEndpointConfigurationOidcArrayOutputWithContext(ctx context.Context) EndpointConfigurationOidcArrayOutput {
	return o
}

func (o EndpointConfigurationOidcArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationOidcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationOidc {
		return vs[0].([]EndpointConfigurationOidc)[vs[1].(int)]
	}).(EndpointConfigurationOidcOutput)
}

type EndpointConfigurationRequestHeader struct {
	// a map of header key to header value that will be injected into the HTTP Request before being sent to the upstream application server
	Add map[string]string `pulumi:"add"`
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled *bool `pulumi:"enabled"`
	// a list of header names that will be removed from the HTTP Request before being sent to the upstream application server
	Removes []string `pulumi:"removes"`
}

// EndpointConfigurationRequestHeaderInput is an input type that accepts EndpointConfigurationRequestHeaderArgs and EndpointConfigurationRequestHeaderOutput values.
// You can construct a concrete instance of `EndpointConfigurationRequestHeaderInput` via:
//
//	EndpointConfigurationRequestHeaderArgs{...}
type EndpointConfigurationRequestHeaderInput interface {
	pulumi.Input

	ToEndpointConfigurationRequestHeaderOutput() EndpointConfigurationRequestHeaderOutput
	ToEndpointConfigurationRequestHeaderOutputWithContext(context.Context) EndpointConfigurationRequestHeaderOutput
}

type EndpointConfigurationRequestHeaderArgs struct {
	// a map of header key to header value that will be injected into the HTTP Request before being sent to the upstream application server
	Add pulumi.StringMapInput `pulumi:"add"`
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// a list of header names that will be removed from the HTTP Request before being sent to the upstream application server
	Removes pulumi.StringArrayInput `pulumi:"removes"`
}

func (EndpointConfigurationRequestHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationRequestHeader)(nil)).Elem()
}

func (i EndpointConfigurationRequestHeaderArgs) ToEndpointConfigurationRequestHeaderOutput() EndpointConfigurationRequestHeaderOutput {
	return i.ToEndpointConfigurationRequestHeaderOutputWithContext(context.Background())
}

func (i EndpointConfigurationRequestHeaderArgs) ToEndpointConfigurationRequestHeaderOutputWithContext(ctx context.Context) EndpointConfigurationRequestHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationRequestHeaderOutput)
}

// EndpointConfigurationRequestHeaderArrayInput is an input type that accepts EndpointConfigurationRequestHeaderArray and EndpointConfigurationRequestHeaderArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationRequestHeaderArrayInput` via:
//
//	EndpointConfigurationRequestHeaderArray{ EndpointConfigurationRequestHeaderArgs{...} }
type EndpointConfigurationRequestHeaderArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationRequestHeaderArrayOutput() EndpointConfigurationRequestHeaderArrayOutput
	ToEndpointConfigurationRequestHeaderArrayOutputWithContext(context.Context) EndpointConfigurationRequestHeaderArrayOutput
}

type EndpointConfigurationRequestHeaderArray []EndpointConfigurationRequestHeaderInput

func (EndpointConfigurationRequestHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationRequestHeader)(nil)).Elem()
}

func (i EndpointConfigurationRequestHeaderArray) ToEndpointConfigurationRequestHeaderArrayOutput() EndpointConfigurationRequestHeaderArrayOutput {
	return i.ToEndpointConfigurationRequestHeaderArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationRequestHeaderArray) ToEndpointConfigurationRequestHeaderArrayOutputWithContext(ctx context.Context) EndpointConfigurationRequestHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationRequestHeaderArrayOutput)
}

type EndpointConfigurationRequestHeaderOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationRequestHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationRequestHeader)(nil)).Elem()
}

func (o EndpointConfigurationRequestHeaderOutput) ToEndpointConfigurationRequestHeaderOutput() EndpointConfigurationRequestHeaderOutput {
	return o
}

func (o EndpointConfigurationRequestHeaderOutput) ToEndpointConfigurationRequestHeaderOutputWithContext(ctx context.Context) EndpointConfigurationRequestHeaderOutput {
	return o
}

// a map of header key to header value that will be injected into the HTTP Request before being sent to the upstream application server
func (o EndpointConfigurationRequestHeaderOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v EndpointConfigurationRequestHeader) map[string]string { return v.Add }).(pulumi.StringMapOutput)
}

// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
func (o EndpointConfigurationRequestHeaderOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationRequestHeader) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// a list of header names that will be removed from the HTTP Request before being sent to the upstream application server
func (o EndpointConfigurationRequestHeaderOutput) Removes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationRequestHeader) []string { return v.Removes }).(pulumi.StringArrayOutput)
}

type EndpointConfigurationRequestHeaderArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationRequestHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationRequestHeader)(nil)).Elem()
}

func (o EndpointConfigurationRequestHeaderArrayOutput) ToEndpointConfigurationRequestHeaderArrayOutput() EndpointConfigurationRequestHeaderArrayOutput {
	return o
}

func (o EndpointConfigurationRequestHeaderArrayOutput) ToEndpointConfigurationRequestHeaderArrayOutputWithContext(ctx context.Context) EndpointConfigurationRequestHeaderArrayOutput {
	return o
}

func (o EndpointConfigurationRequestHeaderArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationRequestHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationRequestHeader {
		return vs[0].([]EndpointConfigurationRequestHeader)[vs[1].(int)]
	}).(EndpointConfigurationRequestHeaderOutput)
}

type EndpointConfigurationResponseHeader struct {
	// a map of header key to header value that will be injected into the HTTP Response returned to the HTTP client
	Add map[string]string `pulumi:"add"`
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled *bool `pulumi:"enabled"`
	// a list of header names that will be removed from the HTTP Response returned to the HTTP client
	Removes []string `pulumi:"removes"`
}

// EndpointConfigurationResponseHeaderInput is an input type that accepts EndpointConfigurationResponseHeaderArgs and EndpointConfigurationResponseHeaderOutput values.
// You can construct a concrete instance of `EndpointConfigurationResponseHeaderInput` via:
//
//	EndpointConfigurationResponseHeaderArgs{...}
type EndpointConfigurationResponseHeaderInput interface {
	pulumi.Input

	ToEndpointConfigurationResponseHeaderOutput() EndpointConfigurationResponseHeaderOutput
	ToEndpointConfigurationResponseHeaderOutputWithContext(context.Context) EndpointConfigurationResponseHeaderOutput
}

type EndpointConfigurationResponseHeaderArgs struct {
	// a map of header key to header value that will be injected into the HTTP Response returned to the HTTP client
	Add pulumi.StringMapInput `pulumi:"add"`
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// a list of header names that will be removed from the HTTP Response returned to the HTTP client
	Removes pulumi.StringArrayInput `pulumi:"removes"`
}

func (EndpointConfigurationResponseHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationResponseHeader)(nil)).Elem()
}

func (i EndpointConfigurationResponseHeaderArgs) ToEndpointConfigurationResponseHeaderOutput() EndpointConfigurationResponseHeaderOutput {
	return i.ToEndpointConfigurationResponseHeaderOutputWithContext(context.Background())
}

func (i EndpointConfigurationResponseHeaderArgs) ToEndpointConfigurationResponseHeaderOutputWithContext(ctx context.Context) EndpointConfigurationResponseHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationResponseHeaderOutput)
}

// EndpointConfigurationResponseHeaderArrayInput is an input type that accepts EndpointConfigurationResponseHeaderArray and EndpointConfigurationResponseHeaderArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationResponseHeaderArrayInput` via:
//
//	EndpointConfigurationResponseHeaderArray{ EndpointConfigurationResponseHeaderArgs{...} }
type EndpointConfigurationResponseHeaderArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationResponseHeaderArrayOutput() EndpointConfigurationResponseHeaderArrayOutput
	ToEndpointConfigurationResponseHeaderArrayOutputWithContext(context.Context) EndpointConfigurationResponseHeaderArrayOutput
}

type EndpointConfigurationResponseHeaderArray []EndpointConfigurationResponseHeaderInput

func (EndpointConfigurationResponseHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationResponseHeader)(nil)).Elem()
}

func (i EndpointConfigurationResponseHeaderArray) ToEndpointConfigurationResponseHeaderArrayOutput() EndpointConfigurationResponseHeaderArrayOutput {
	return i.ToEndpointConfigurationResponseHeaderArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationResponseHeaderArray) ToEndpointConfigurationResponseHeaderArrayOutputWithContext(ctx context.Context) EndpointConfigurationResponseHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationResponseHeaderArrayOutput)
}

type EndpointConfigurationResponseHeaderOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationResponseHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationResponseHeader)(nil)).Elem()
}

func (o EndpointConfigurationResponseHeaderOutput) ToEndpointConfigurationResponseHeaderOutput() EndpointConfigurationResponseHeaderOutput {
	return o
}

func (o EndpointConfigurationResponseHeaderOutput) ToEndpointConfigurationResponseHeaderOutputWithContext(ctx context.Context) EndpointConfigurationResponseHeaderOutput {
	return o
}

// a map of header key to header value that will be injected into the HTTP Response returned to the HTTP client
func (o EndpointConfigurationResponseHeaderOutput) Add() pulumi.StringMapOutput {
	return o.ApplyT(func(v EndpointConfigurationResponseHeader) map[string]string { return v.Add }).(pulumi.StringMapOutput)
}

// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
func (o EndpointConfigurationResponseHeaderOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationResponseHeader) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// a list of header names that will be removed from the HTTP Response returned to the HTTP client
func (o EndpointConfigurationResponseHeaderOutput) Removes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationResponseHeader) []string { return v.Removes }).(pulumi.StringArrayOutput)
}

type EndpointConfigurationResponseHeaderArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationResponseHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationResponseHeader)(nil)).Elem()
}

func (o EndpointConfigurationResponseHeaderArrayOutput) ToEndpointConfigurationResponseHeaderArrayOutput() EndpointConfigurationResponseHeaderArrayOutput {
	return o
}

func (o EndpointConfigurationResponseHeaderArrayOutput) ToEndpointConfigurationResponseHeaderArrayOutputWithContext(ctx context.Context) EndpointConfigurationResponseHeaderArrayOutput {
	return o
}

func (o EndpointConfigurationResponseHeaderArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationResponseHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationResponseHeader {
		return vs[0].([]EndpointConfigurationResponseHeader)[vs[1].(int)]
	}).(EndpointConfigurationResponseHeaderOutput)
}

type EndpointConfigurationSaml struct {
	// If true, the IdP may initiate a login directly (e.g. the user does not need to visit the endpoint first and then be redirected). The IdP should set the `RelayState` parameter to the target URL of the resource they want the user to be redirected to after the SAML login assertion has been processed.
	AllowIdpInitiated *bool `pulumi:"allowIdpInitiated"`
	// The public URL of the SP's Assertion Consumer Service. This is where the IdP will redirect to during an authentication flow. This will need to be specified to the IdP as configuration.
	AssertionConsumerServiceUrl *string `pulumi:"assertionConsumerServiceUrl"`
	// If present, only users who are a member of one of the listed groups may access the target endpoint.
	AuthorizedGroups []string `pulumi:"authorizedGroups"`
	// the prefix of the session cookie that ngrok sets on the http client to cache authentication. default is 'ngrok.'
	CookiePrefix *string `pulumi:"cookiePrefix"`
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled *bool `pulumi:"enabled"`
	// The SP Entity's unique ID. This always takes the form of a URL. In ngrok's implementation, this URL is the same as the metadata URL. This will need to be specified to the IdP as configuration.
	EntityId *string `pulumi:"entityId"`
	// If true, indicates that whenever we redirect a user to the IdP for authentication that the IdP must prompt the user for authentication credentials even if the user already has a valid session with the IdP.
	ForceAuthn *bool `pulumi:"forceAuthn"`
	// The full XML IdP EntityDescriptor. Your IdP may provide this to you as a a file to download or as a URL.
	IdpMetadata *string `pulumi:"idpMetadata"`
	// The IdP's metadata URL which returns the XML IdP EntityDescriptor. The IdP's metadata URL specifies how to connect to the IdP as well as its public key which is then used to validate the signature on incoming SAML assertions to the ACS endpoint.
	IdpMetadataUrl *string `pulumi:"idpMetadataUrl"`
	// Integer number of seconds of inactivity after which if the user has not accessed the endpoint, their session will time out and they will be forced to reauthenticate.
	InactivityTimeout *int `pulumi:"inactivityTimeout"`
	// Integer number of seconds of the maximum duration of an authenticated session. After this period is exceeded, a user must reauthenticate.
	MaximumDuration *int `pulumi:"maximumDuration"`
	// A public URL where the SP's metadata is hosted. If an IdP supports dynamic configuration, this is the URL it can use to retrieve the SP metadata.
	MetadataUrl *string `pulumi:"metadataUrl"`
	// Defines the name identifier format the SP expects the IdP to use in its assertions to identify subjects. If unspecified, a default value of `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent` will be used. A subset of the allowed values enumerated by the SAML specification are supported.
	NameidFormat *string `pulumi:"nameidFormat"`
	// Do not enforce authentication on HTTP OPTIONS requests. necessary if you are supporting CORS.
	OptionsPassthrough *bool `pulumi:"optionsPassthrough"`
	// PEM-encoded x.509 certificate of the key pair that is used to sign all SAML requests that the ngrok SP makes to the IdP. Many IdPs do not support request signing verification, but we highly recommend specifying this in the IdP's configuration if it is supported.
	RequestSigningCertificatePem *string `pulumi:"requestSigningCertificatePem"`
	// The public URL of the SP's Single Logout Service. This is where the IdP will redirect to during a single logout flow. This will optionally need to be specified to the IdP as configuration.
	SingleLogoutUrl *string `pulumi:"singleLogoutUrl"`
}

// EndpointConfigurationSamlInput is an input type that accepts EndpointConfigurationSamlArgs and EndpointConfigurationSamlOutput values.
// You can construct a concrete instance of `EndpointConfigurationSamlInput` via:
//
//	EndpointConfigurationSamlArgs{...}
type EndpointConfigurationSamlInput interface {
	pulumi.Input

	ToEndpointConfigurationSamlOutput() EndpointConfigurationSamlOutput
	ToEndpointConfigurationSamlOutputWithContext(context.Context) EndpointConfigurationSamlOutput
}

type EndpointConfigurationSamlArgs struct {
	// If true, the IdP may initiate a login directly (e.g. the user does not need to visit the endpoint first and then be redirected). The IdP should set the `RelayState` parameter to the target URL of the resource they want the user to be redirected to after the SAML login assertion has been processed.
	AllowIdpInitiated pulumi.BoolPtrInput `pulumi:"allowIdpInitiated"`
	// The public URL of the SP's Assertion Consumer Service. This is where the IdP will redirect to during an authentication flow. This will need to be specified to the IdP as configuration.
	AssertionConsumerServiceUrl pulumi.StringPtrInput `pulumi:"assertionConsumerServiceUrl"`
	// If present, only users who are a member of one of the listed groups may access the target endpoint.
	AuthorizedGroups pulumi.StringArrayInput `pulumi:"authorizedGroups"`
	// the prefix of the session cookie that ngrok sets on the http client to cache authentication. default is 'ngrok.'
	CookiePrefix pulumi.StringPtrInput `pulumi:"cookiePrefix"`
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The SP Entity's unique ID. This always takes the form of a URL. In ngrok's implementation, this URL is the same as the metadata URL. This will need to be specified to the IdP as configuration.
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
	// If true, indicates that whenever we redirect a user to the IdP for authentication that the IdP must prompt the user for authentication credentials even if the user already has a valid session with the IdP.
	ForceAuthn pulumi.BoolPtrInput `pulumi:"forceAuthn"`
	// The full XML IdP EntityDescriptor. Your IdP may provide this to you as a a file to download or as a URL.
	IdpMetadata pulumi.StringPtrInput `pulumi:"idpMetadata"`
	// The IdP's metadata URL which returns the XML IdP EntityDescriptor. The IdP's metadata URL specifies how to connect to the IdP as well as its public key which is then used to validate the signature on incoming SAML assertions to the ACS endpoint.
	IdpMetadataUrl pulumi.StringPtrInput `pulumi:"idpMetadataUrl"`
	// Integer number of seconds of inactivity after which if the user has not accessed the endpoint, their session will time out and they will be forced to reauthenticate.
	InactivityTimeout pulumi.IntPtrInput `pulumi:"inactivityTimeout"`
	// Integer number of seconds of the maximum duration of an authenticated session. After this period is exceeded, a user must reauthenticate.
	MaximumDuration pulumi.IntPtrInput `pulumi:"maximumDuration"`
	// A public URL where the SP's metadata is hosted. If an IdP supports dynamic configuration, this is the URL it can use to retrieve the SP metadata.
	MetadataUrl pulumi.StringPtrInput `pulumi:"metadataUrl"`
	// Defines the name identifier format the SP expects the IdP to use in its assertions to identify subjects. If unspecified, a default value of `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent` will be used. A subset of the allowed values enumerated by the SAML specification are supported.
	NameidFormat pulumi.StringPtrInput `pulumi:"nameidFormat"`
	// Do not enforce authentication on HTTP OPTIONS requests. necessary if you are supporting CORS.
	OptionsPassthrough pulumi.BoolPtrInput `pulumi:"optionsPassthrough"`
	// PEM-encoded x.509 certificate of the key pair that is used to sign all SAML requests that the ngrok SP makes to the IdP. Many IdPs do not support request signing verification, but we highly recommend specifying this in the IdP's configuration if it is supported.
	RequestSigningCertificatePem pulumi.StringPtrInput `pulumi:"requestSigningCertificatePem"`
	// The public URL of the SP's Single Logout Service. This is where the IdP will redirect to during a single logout flow. This will optionally need to be specified to the IdP as configuration.
	SingleLogoutUrl pulumi.StringPtrInput `pulumi:"singleLogoutUrl"`
}

func (EndpointConfigurationSamlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationSaml)(nil)).Elem()
}

func (i EndpointConfigurationSamlArgs) ToEndpointConfigurationSamlOutput() EndpointConfigurationSamlOutput {
	return i.ToEndpointConfigurationSamlOutputWithContext(context.Background())
}

func (i EndpointConfigurationSamlArgs) ToEndpointConfigurationSamlOutputWithContext(ctx context.Context) EndpointConfigurationSamlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationSamlOutput)
}

// EndpointConfigurationSamlArrayInput is an input type that accepts EndpointConfigurationSamlArray and EndpointConfigurationSamlArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationSamlArrayInput` via:
//
//	EndpointConfigurationSamlArray{ EndpointConfigurationSamlArgs{...} }
type EndpointConfigurationSamlArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationSamlArrayOutput() EndpointConfigurationSamlArrayOutput
	ToEndpointConfigurationSamlArrayOutputWithContext(context.Context) EndpointConfigurationSamlArrayOutput
}

type EndpointConfigurationSamlArray []EndpointConfigurationSamlInput

func (EndpointConfigurationSamlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationSaml)(nil)).Elem()
}

func (i EndpointConfigurationSamlArray) ToEndpointConfigurationSamlArrayOutput() EndpointConfigurationSamlArrayOutput {
	return i.ToEndpointConfigurationSamlArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationSamlArray) ToEndpointConfigurationSamlArrayOutputWithContext(ctx context.Context) EndpointConfigurationSamlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationSamlArrayOutput)
}

type EndpointConfigurationSamlOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationSamlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationSaml)(nil)).Elem()
}

func (o EndpointConfigurationSamlOutput) ToEndpointConfigurationSamlOutput() EndpointConfigurationSamlOutput {
	return o
}

func (o EndpointConfigurationSamlOutput) ToEndpointConfigurationSamlOutputWithContext(ctx context.Context) EndpointConfigurationSamlOutput {
	return o
}

// If true, the IdP may initiate a login directly (e.g. the user does not need to visit the endpoint first and then be redirected). The IdP should set the `RelayState` parameter to the target URL of the resource they want the user to be redirected to after the SAML login assertion has been processed.
func (o EndpointConfigurationSamlOutput) AllowIdpInitiated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationSaml) *bool { return v.AllowIdpInitiated }).(pulumi.BoolPtrOutput)
}

// The public URL of the SP's Assertion Consumer Service. This is where the IdP will redirect to during an authentication flow. This will need to be specified to the IdP as configuration.
func (o EndpointConfigurationSamlOutput) AssertionConsumerServiceUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationSaml) *string { return v.AssertionConsumerServiceUrl }).(pulumi.StringPtrOutput)
}

// If present, only users who are a member of one of the listed groups may access the target endpoint.
func (o EndpointConfigurationSamlOutput) AuthorizedGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointConfigurationSaml) []string { return v.AuthorizedGroups }).(pulumi.StringArrayOutput)
}

// the prefix of the session cookie that ngrok sets on the http client to cache authentication. default is 'ngrok.'
func (o EndpointConfigurationSamlOutput) CookiePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationSaml) *string { return v.CookiePrefix }).(pulumi.StringPtrOutput)
}

// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
func (o EndpointConfigurationSamlOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationSaml) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The SP Entity's unique ID. This always takes the form of a URL. In ngrok's implementation, this URL is the same as the metadata URL. This will need to be specified to the IdP as configuration.
func (o EndpointConfigurationSamlOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationSaml) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// If true, indicates that whenever we redirect a user to the IdP for authentication that the IdP must prompt the user for authentication credentials even if the user already has a valid session with the IdP.
func (o EndpointConfigurationSamlOutput) ForceAuthn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationSaml) *bool { return v.ForceAuthn }).(pulumi.BoolPtrOutput)
}

// The full XML IdP EntityDescriptor. Your IdP may provide this to you as a a file to download or as a URL.
func (o EndpointConfigurationSamlOutput) IdpMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationSaml) *string { return v.IdpMetadata }).(pulumi.StringPtrOutput)
}

// The IdP's metadata URL which returns the XML IdP EntityDescriptor. The IdP's metadata URL specifies how to connect to the IdP as well as its public key which is then used to validate the signature on incoming SAML assertions to the ACS endpoint.
func (o EndpointConfigurationSamlOutput) IdpMetadataUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationSaml) *string { return v.IdpMetadataUrl }).(pulumi.StringPtrOutput)
}

// Integer number of seconds of inactivity after which if the user has not accessed the endpoint, their session will time out and they will be forced to reauthenticate.
func (o EndpointConfigurationSamlOutput) InactivityTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationSaml) *int { return v.InactivityTimeout }).(pulumi.IntPtrOutput)
}

// Integer number of seconds of the maximum duration of an authenticated session. After this period is exceeded, a user must reauthenticate.
func (o EndpointConfigurationSamlOutput) MaximumDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationSaml) *int { return v.MaximumDuration }).(pulumi.IntPtrOutput)
}

// A public URL where the SP's metadata is hosted. If an IdP supports dynamic configuration, this is the URL it can use to retrieve the SP metadata.
func (o EndpointConfigurationSamlOutput) MetadataUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationSaml) *string { return v.MetadataUrl }).(pulumi.StringPtrOutput)
}

// Defines the name identifier format the SP expects the IdP to use in its assertions to identify subjects. If unspecified, a default value of `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent` will be used. A subset of the allowed values enumerated by the SAML specification are supported.
func (o EndpointConfigurationSamlOutput) NameidFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationSaml) *string { return v.NameidFormat }).(pulumi.StringPtrOutput)
}

// Do not enforce authentication on HTTP OPTIONS requests. necessary if you are supporting CORS.
func (o EndpointConfigurationSamlOutput) OptionsPassthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationSaml) *bool { return v.OptionsPassthrough }).(pulumi.BoolPtrOutput)
}

// PEM-encoded x.509 certificate of the key pair that is used to sign all SAML requests that the ngrok SP makes to the IdP. Many IdPs do not support request signing verification, but we highly recommend specifying this in the IdP's configuration if it is supported.
func (o EndpointConfigurationSamlOutput) RequestSigningCertificatePem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationSaml) *string { return v.RequestSigningCertificatePem }).(pulumi.StringPtrOutput)
}

// The public URL of the SP's Single Logout Service. This is where the IdP will redirect to during a single logout flow. This will optionally need to be specified to the IdP as configuration.
func (o EndpointConfigurationSamlOutput) SingleLogoutUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationSaml) *string { return v.SingleLogoutUrl }).(pulumi.StringPtrOutput)
}

type EndpointConfigurationSamlArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationSamlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationSaml)(nil)).Elem()
}

func (o EndpointConfigurationSamlArrayOutput) ToEndpointConfigurationSamlArrayOutput() EndpointConfigurationSamlArrayOutput {
	return o
}

func (o EndpointConfigurationSamlArrayOutput) ToEndpointConfigurationSamlArrayOutputWithContext(ctx context.Context) EndpointConfigurationSamlArrayOutput {
	return o
}

func (o EndpointConfigurationSamlArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationSamlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationSaml {
		return vs[0].([]EndpointConfigurationSaml)[vs[1].(int)]
	}).(EndpointConfigurationSamlOutput)
}

type EndpointConfigurationTlsTermination struct {
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled *bool `pulumi:"enabled"`
	// The minimum TLS version used for termination and advertised to the client during the TLS handshake. if unspecified, ngrok will choose an industry-safe default. This value must be null if `terminateAt` is set to `upstream`.
	MinVersion *string `pulumi:"minVersion"`
	// `edge` if the ngrok edge should terminate TLS traffic, `upstream` if TLS traffic should be passed through to the upstream ngrok agent / application server for termination. if `upstream` is chosen, most other modules will be disallowed because they rely on the ngrok edge being able to access the underlying traffic.
	TerminateAt *string `pulumi:"terminateAt"`
}

// EndpointConfigurationTlsTerminationInput is an input type that accepts EndpointConfigurationTlsTerminationArgs and EndpointConfigurationTlsTerminationOutput values.
// You can construct a concrete instance of `EndpointConfigurationTlsTerminationInput` via:
//
//	EndpointConfigurationTlsTerminationArgs{...}
type EndpointConfigurationTlsTerminationInput interface {
	pulumi.Input

	ToEndpointConfigurationTlsTerminationOutput() EndpointConfigurationTlsTerminationOutput
	ToEndpointConfigurationTlsTerminationOutputWithContext(context.Context) EndpointConfigurationTlsTerminationOutput
}

type EndpointConfigurationTlsTerminationArgs struct {
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The minimum TLS version used for termination and advertised to the client during the TLS handshake. if unspecified, ngrok will choose an industry-safe default. This value must be null if `terminateAt` is set to `upstream`.
	MinVersion pulumi.StringPtrInput `pulumi:"minVersion"`
	// `edge` if the ngrok edge should terminate TLS traffic, `upstream` if TLS traffic should be passed through to the upstream ngrok agent / application server for termination. if `upstream` is chosen, most other modules will be disallowed because they rely on the ngrok edge being able to access the underlying traffic.
	TerminateAt pulumi.StringPtrInput `pulumi:"terminateAt"`
}

func (EndpointConfigurationTlsTerminationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationTlsTermination)(nil)).Elem()
}

func (i EndpointConfigurationTlsTerminationArgs) ToEndpointConfigurationTlsTerminationOutput() EndpointConfigurationTlsTerminationOutput {
	return i.ToEndpointConfigurationTlsTerminationOutputWithContext(context.Background())
}

func (i EndpointConfigurationTlsTerminationArgs) ToEndpointConfigurationTlsTerminationOutputWithContext(ctx context.Context) EndpointConfigurationTlsTerminationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationTlsTerminationOutput)
}

// EndpointConfigurationTlsTerminationArrayInput is an input type that accepts EndpointConfigurationTlsTerminationArray and EndpointConfigurationTlsTerminationArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationTlsTerminationArrayInput` via:
//
//	EndpointConfigurationTlsTerminationArray{ EndpointConfigurationTlsTerminationArgs{...} }
type EndpointConfigurationTlsTerminationArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationTlsTerminationArrayOutput() EndpointConfigurationTlsTerminationArrayOutput
	ToEndpointConfigurationTlsTerminationArrayOutputWithContext(context.Context) EndpointConfigurationTlsTerminationArrayOutput
}

type EndpointConfigurationTlsTerminationArray []EndpointConfigurationTlsTerminationInput

func (EndpointConfigurationTlsTerminationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationTlsTermination)(nil)).Elem()
}

func (i EndpointConfigurationTlsTerminationArray) ToEndpointConfigurationTlsTerminationArrayOutput() EndpointConfigurationTlsTerminationArrayOutput {
	return i.ToEndpointConfigurationTlsTerminationArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationTlsTerminationArray) ToEndpointConfigurationTlsTerminationArrayOutputWithContext(ctx context.Context) EndpointConfigurationTlsTerminationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationTlsTerminationArrayOutput)
}

type EndpointConfigurationTlsTerminationOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationTlsTerminationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationTlsTermination)(nil)).Elem()
}

func (o EndpointConfigurationTlsTerminationOutput) ToEndpointConfigurationTlsTerminationOutput() EndpointConfigurationTlsTerminationOutput {
	return o
}

func (o EndpointConfigurationTlsTerminationOutput) ToEndpointConfigurationTlsTerminationOutputWithContext(ctx context.Context) EndpointConfigurationTlsTerminationOutput {
	return o
}

// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
func (o EndpointConfigurationTlsTerminationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationTlsTermination) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The minimum TLS version used for termination and advertised to the client during the TLS handshake. if unspecified, ngrok will choose an industry-safe default. This value must be null if `terminateAt` is set to `upstream`.
func (o EndpointConfigurationTlsTerminationOutput) MinVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationTlsTermination) *string { return v.MinVersion }).(pulumi.StringPtrOutput)
}

// `edge` if the ngrok edge should terminate TLS traffic, `upstream` if TLS traffic should be passed through to the upstream ngrok agent / application server for termination. if `upstream` is chosen, most other modules will be disallowed because they rely on the ngrok edge being able to access the underlying traffic.
func (o EndpointConfigurationTlsTerminationOutput) TerminateAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationTlsTermination) *string { return v.TerminateAt }).(pulumi.StringPtrOutput)
}

type EndpointConfigurationTlsTerminationArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationTlsTerminationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationTlsTermination)(nil)).Elem()
}

func (o EndpointConfigurationTlsTerminationArrayOutput) ToEndpointConfigurationTlsTerminationArrayOutput() EndpointConfigurationTlsTerminationArrayOutput {
	return o
}

func (o EndpointConfigurationTlsTerminationArrayOutput) ToEndpointConfigurationTlsTerminationArrayOutputWithContext(ctx context.Context) EndpointConfigurationTlsTerminationArrayOutput {
	return o
}

func (o EndpointConfigurationTlsTerminationArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationTlsTerminationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationTlsTermination {
		return vs[0].([]EndpointConfigurationTlsTermination)[vs[1].(int)]
	}).(EndpointConfigurationTlsTerminationOutput)
}

type EndpointConfigurationWebhookValidation struct {
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled *bool `pulumi:"enabled"`
	// a string indicating which webhook provider will be sending webhooks to this endpoint. Value must be one of the supported providers: `SLACK`, `SNS`, `STRIPE`, `GITHUB`, `TWILIO`, `SHOPIFY`, `GITLAB`, `INTERCOM`, `SENDGRID`, `XERO`, `PAGERDUTY`.
	Provider *string `pulumi:"provider"`
	// a string secret used to validate requests from the given provider. All providers except AWS SNS require a secret
	Secret *string `pulumi:"secret"`
}

// EndpointConfigurationWebhookValidationInput is an input type that accepts EndpointConfigurationWebhookValidationArgs and EndpointConfigurationWebhookValidationOutput values.
// You can construct a concrete instance of `EndpointConfigurationWebhookValidationInput` via:
//
//	EndpointConfigurationWebhookValidationArgs{...}
type EndpointConfigurationWebhookValidationInput interface {
	pulumi.Input

	ToEndpointConfigurationWebhookValidationOutput() EndpointConfigurationWebhookValidationOutput
	ToEndpointConfigurationWebhookValidationOutputWithContext(context.Context) EndpointConfigurationWebhookValidationOutput
}

type EndpointConfigurationWebhookValidationArgs struct {
	// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// a string indicating which webhook provider will be sending webhooks to this endpoint. Value must be one of the supported providers: `SLACK`, `SNS`, `STRIPE`, `GITHUB`, `TWILIO`, `SHOPIFY`, `GITLAB`, `INTERCOM`, `SENDGRID`, `XERO`, `PAGERDUTY`.
	Provider pulumi.StringPtrInput `pulumi:"provider"`
	// a string secret used to validate requests from the given provider. All providers except AWS SNS require a secret
	Secret pulumi.StringPtrInput `pulumi:"secret"`
}

func (EndpointConfigurationWebhookValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationWebhookValidation)(nil)).Elem()
}

func (i EndpointConfigurationWebhookValidationArgs) ToEndpointConfigurationWebhookValidationOutput() EndpointConfigurationWebhookValidationOutput {
	return i.ToEndpointConfigurationWebhookValidationOutputWithContext(context.Background())
}

func (i EndpointConfigurationWebhookValidationArgs) ToEndpointConfigurationWebhookValidationOutputWithContext(ctx context.Context) EndpointConfigurationWebhookValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationWebhookValidationOutput)
}

// EndpointConfigurationWebhookValidationArrayInput is an input type that accepts EndpointConfigurationWebhookValidationArray and EndpointConfigurationWebhookValidationArrayOutput values.
// You can construct a concrete instance of `EndpointConfigurationWebhookValidationArrayInput` via:
//
//	EndpointConfigurationWebhookValidationArray{ EndpointConfigurationWebhookValidationArgs{...} }
type EndpointConfigurationWebhookValidationArrayInput interface {
	pulumi.Input

	ToEndpointConfigurationWebhookValidationArrayOutput() EndpointConfigurationWebhookValidationArrayOutput
	ToEndpointConfigurationWebhookValidationArrayOutputWithContext(context.Context) EndpointConfigurationWebhookValidationArrayOutput
}

type EndpointConfigurationWebhookValidationArray []EndpointConfigurationWebhookValidationInput

func (EndpointConfigurationWebhookValidationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationWebhookValidation)(nil)).Elem()
}

func (i EndpointConfigurationWebhookValidationArray) ToEndpointConfigurationWebhookValidationArrayOutput() EndpointConfigurationWebhookValidationArrayOutput {
	return i.ToEndpointConfigurationWebhookValidationArrayOutputWithContext(context.Background())
}

func (i EndpointConfigurationWebhookValidationArray) ToEndpointConfigurationWebhookValidationArrayOutputWithContext(ctx context.Context) EndpointConfigurationWebhookValidationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConfigurationWebhookValidationArrayOutput)
}

type EndpointConfigurationWebhookValidationOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationWebhookValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConfigurationWebhookValidation)(nil)).Elem()
}

func (o EndpointConfigurationWebhookValidationOutput) ToEndpointConfigurationWebhookValidationOutput() EndpointConfigurationWebhookValidationOutput {
	return o
}

func (o EndpointConfigurationWebhookValidationOutput) ToEndpointConfigurationWebhookValidationOutputWithContext(ctx context.Context) EndpointConfigurationWebhookValidationOutput {
	return o
}

// `true` if the module will be applied to traffic, `false` to disable. default `true` if unspecified
func (o EndpointConfigurationWebhookValidationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationWebhookValidation) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// a string indicating which webhook provider will be sending webhooks to this endpoint. Value must be one of the supported providers: `SLACK`, `SNS`, `STRIPE`, `GITHUB`, `TWILIO`, `SHOPIFY`, `GITLAB`, `INTERCOM`, `SENDGRID`, `XERO`, `PAGERDUTY`.
func (o EndpointConfigurationWebhookValidationOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationWebhookValidation) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

// a string secret used to validate requests from the given provider. All providers except AWS SNS require a secret
func (o EndpointConfigurationWebhookValidationOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConfigurationWebhookValidation) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type EndpointConfigurationWebhookValidationArrayOutput struct{ *pulumi.OutputState }

func (EndpointConfigurationWebhookValidationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointConfigurationWebhookValidation)(nil)).Elem()
}

func (o EndpointConfigurationWebhookValidationArrayOutput) ToEndpointConfigurationWebhookValidationArrayOutput() EndpointConfigurationWebhookValidationArrayOutput {
	return o
}

func (o EndpointConfigurationWebhookValidationArrayOutput) ToEndpointConfigurationWebhookValidationArrayOutputWithContext(ctx context.Context) EndpointConfigurationWebhookValidationArrayOutput {
	return o
}

func (o EndpointConfigurationWebhookValidationArrayOutput) Index(i pulumi.IntInput) EndpointConfigurationWebhookValidationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointConfigurationWebhookValidation {
		return vs[0].([]EndpointConfigurationWebhookValidation)[vs[1].(int)]
	}).(EndpointConfigurationWebhookValidationOutput)
}

type EventDestinationTarget struct {
	// Configuration used to send events to Amazon CloudWatch Logs.
	CloudwatchLogs []EventDestinationTargetCloudwatchLog `pulumi:"cloudwatchLogs"`
	// Configuration used for internal debugging.
	Debugs []EventDestinationTargetDebug `pulumi:"debugs"`
	// Configuration used to send events to Amazon Kinesis Data Firehose.
	Firehoses []EventDestinationTargetFirehose `pulumi:"firehoses"`
	// Configuration used to send events to Amazon Kinesis.
	Kineses []EventDestinationTargetKinese `pulumi:"kineses"`
}

// EventDestinationTargetInput is an input type that accepts EventDestinationTargetArgs and EventDestinationTargetOutput values.
// You can construct a concrete instance of `EventDestinationTargetInput` via:
//
//	EventDestinationTargetArgs{...}
type EventDestinationTargetInput interface {
	pulumi.Input

	ToEventDestinationTargetOutput() EventDestinationTargetOutput
	ToEventDestinationTargetOutputWithContext(context.Context) EventDestinationTargetOutput
}

type EventDestinationTargetArgs struct {
	// Configuration used to send events to Amazon CloudWatch Logs.
	CloudwatchLogs EventDestinationTargetCloudwatchLogArrayInput `pulumi:"cloudwatchLogs"`
	// Configuration used for internal debugging.
	Debugs EventDestinationTargetDebugArrayInput `pulumi:"debugs"`
	// Configuration used to send events to Amazon Kinesis Data Firehose.
	Firehoses EventDestinationTargetFirehoseArrayInput `pulumi:"firehoses"`
	// Configuration used to send events to Amazon Kinesis.
	Kineses EventDestinationTargetKineseArrayInput `pulumi:"kineses"`
}

func (EventDestinationTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTarget)(nil)).Elem()
}

func (i EventDestinationTargetArgs) ToEventDestinationTargetOutput() EventDestinationTargetOutput {
	return i.ToEventDestinationTargetOutputWithContext(context.Background())
}

func (i EventDestinationTargetArgs) ToEventDestinationTargetOutputWithContext(ctx context.Context) EventDestinationTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetOutput)
}

// EventDestinationTargetArrayInput is an input type that accepts EventDestinationTargetArray and EventDestinationTargetArrayOutput values.
// You can construct a concrete instance of `EventDestinationTargetArrayInput` via:
//
//	EventDestinationTargetArray{ EventDestinationTargetArgs{...} }
type EventDestinationTargetArrayInput interface {
	pulumi.Input

	ToEventDestinationTargetArrayOutput() EventDestinationTargetArrayOutput
	ToEventDestinationTargetArrayOutputWithContext(context.Context) EventDestinationTargetArrayOutput
}

type EventDestinationTargetArray []EventDestinationTargetInput

func (EventDestinationTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTarget)(nil)).Elem()
}

func (i EventDestinationTargetArray) ToEventDestinationTargetArrayOutput() EventDestinationTargetArrayOutput {
	return i.ToEventDestinationTargetArrayOutputWithContext(context.Background())
}

func (i EventDestinationTargetArray) ToEventDestinationTargetArrayOutputWithContext(ctx context.Context) EventDestinationTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetArrayOutput)
}

type EventDestinationTargetOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTarget)(nil)).Elem()
}

func (o EventDestinationTargetOutput) ToEventDestinationTargetOutput() EventDestinationTargetOutput {
	return o
}

func (o EventDestinationTargetOutput) ToEventDestinationTargetOutputWithContext(ctx context.Context) EventDestinationTargetOutput {
	return o
}

// Configuration used to send events to Amazon CloudWatch Logs.
func (o EventDestinationTargetOutput) CloudwatchLogs() EventDestinationTargetCloudwatchLogArrayOutput {
	return o.ApplyT(func(v EventDestinationTarget) []EventDestinationTargetCloudwatchLog { return v.CloudwatchLogs }).(EventDestinationTargetCloudwatchLogArrayOutput)
}

// Configuration used for internal debugging.
func (o EventDestinationTargetOutput) Debugs() EventDestinationTargetDebugArrayOutput {
	return o.ApplyT(func(v EventDestinationTarget) []EventDestinationTargetDebug { return v.Debugs }).(EventDestinationTargetDebugArrayOutput)
}

// Configuration used to send events to Amazon Kinesis Data Firehose.
func (o EventDestinationTargetOutput) Firehoses() EventDestinationTargetFirehoseArrayOutput {
	return o.ApplyT(func(v EventDestinationTarget) []EventDestinationTargetFirehose { return v.Firehoses }).(EventDestinationTargetFirehoseArrayOutput)
}

// Configuration used to send events to Amazon Kinesis.
func (o EventDestinationTargetOutput) Kineses() EventDestinationTargetKineseArrayOutput {
	return o.ApplyT(func(v EventDestinationTarget) []EventDestinationTargetKinese { return v.Kineses }).(EventDestinationTargetKineseArrayOutput)
}

type EventDestinationTargetArrayOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTarget)(nil)).Elem()
}

func (o EventDestinationTargetArrayOutput) ToEventDestinationTargetArrayOutput() EventDestinationTargetArrayOutput {
	return o
}

func (o EventDestinationTargetArrayOutput) ToEventDestinationTargetArrayOutputWithContext(ctx context.Context) EventDestinationTargetArrayOutput {
	return o
}

func (o EventDestinationTargetArrayOutput) Index(i pulumi.IntInput) EventDestinationTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventDestinationTarget {
		return vs[0].([]EventDestinationTarget)[vs[1].(int)]
	}).(EventDestinationTargetOutput)
}

type EventDestinationTargetCloudwatchLog struct {
	Auths       []EventDestinationTargetCloudwatchLogAuth `pulumi:"auths"`
	LogGroupArn *string                                   `pulumi:"logGroupArn"`
}

// EventDestinationTargetCloudwatchLogInput is an input type that accepts EventDestinationTargetCloudwatchLogArgs and EventDestinationTargetCloudwatchLogOutput values.
// You can construct a concrete instance of `EventDestinationTargetCloudwatchLogInput` via:
//
//	EventDestinationTargetCloudwatchLogArgs{...}
type EventDestinationTargetCloudwatchLogInput interface {
	pulumi.Input

	ToEventDestinationTargetCloudwatchLogOutput() EventDestinationTargetCloudwatchLogOutput
	ToEventDestinationTargetCloudwatchLogOutputWithContext(context.Context) EventDestinationTargetCloudwatchLogOutput
}

type EventDestinationTargetCloudwatchLogArgs struct {
	Auths       EventDestinationTargetCloudwatchLogAuthArrayInput `pulumi:"auths"`
	LogGroupArn pulumi.StringPtrInput                             `pulumi:"logGroupArn"`
}

func (EventDestinationTargetCloudwatchLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetCloudwatchLog)(nil)).Elem()
}

func (i EventDestinationTargetCloudwatchLogArgs) ToEventDestinationTargetCloudwatchLogOutput() EventDestinationTargetCloudwatchLogOutput {
	return i.ToEventDestinationTargetCloudwatchLogOutputWithContext(context.Background())
}

func (i EventDestinationTargetCloudwatchLogArgs) ToEventDestinationTargetCloudwatchLogOutputWithContext(ctx context.Context) EventDestinationTargetCloudwatchLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetCloudwatchLogOutput)
}

// EventDestinationTargetCloudwatchLogArrayInput is an input type that accepts EventDestinationTargetCloudwatchLogArray and EventDestinationTargetCloudwatchLogArrayOutput values.
// You can construct a concrete instance of `EventDestinationTargetCloudwatchLogArrayInput` via:
//
//	EventDestinationTargetCloudwatchLogArray{ EventDestinationTargetCloudwatchLogArgs{...} }
type EventDestinationTargetCloudwatchLogArrayInput interface {
	pulumi.Input

	ToEventDestinationTargetCloudwatchLogArrayOutput() EventDestinationTargetCloudwatchLogArrayOutput
	ToEventDestinationTargetCloudwatchLogArrayOutputWithContext(context.Context) EventDestinationTargetCloudwatchLogArrayOutput
}

type EventDestinationTargetCloudwatchLogArray []EventDestinationTargetCloudwatchLogInput

func (EventDestinationTargetCloudwatchLogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetCloudwatchLog)(nil)).Elem()
}

func (i EventDestinationTargetCloudwatchLogArray) ToEventDestinationTargetCloudwatchLogArrayOutput() EventDestinationTargetCloudwatchLogArrayOutput {
	return i.ToEventDestinationTargetCloudwatchLogArrayOutputWithContext(context.Background())
}

func (i EventDestinationTargetCloudwatchLogArray) ToEventDestinationTargetCloudwatchLogArrayOutputWithContext(ctx context.Context) EventDestinationTargetCloudwatchLogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetCloudwatchLogArrayOutput)
}

type EventDestinationTargetCloudwatchLogOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetCloudwatchLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetCloudwatchLog)(nil)).Elem()
}

func (o EventDestinationTargetCloudwatchLogOutput) ToEventDestinationTargetCloudwatchLogOutput() EventDestinationTargetCloudwatchLogOutput {
	return o
}

func (o EventDestinationTargetCloudwatchLogOutput) ToEventDestinationTargetCloudwatchLogOutputWithContext(ctx context.Context) EventDestinationTargetCloudwatchLogOutput {
	return o
}

func (o EventDestinationTargetCloudwatchLogOutput) Auths() EventDestinationTargetCloudwatchLogAuthArrayOutput {
	return o.ApplyT(func(v EventDestinationTargetCloudwatchLog) []EventDestinationTargetCloudwatchLogAuth { return v.Auths }).(EventDestinationTargetCloudwatchLogAuthArrayOutput)
}

func (o EventDestinationTargetCloudwatchLogOutput) LogGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventDestinationTargetCloudwatchLog) *string { return v.LogGroupArn }).(pulumi.StringPtrOutput)
}

type EventDestinationTargetCloudwatchLogArrayOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetCloudwatchLogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetCloudwatchLog)(nil)).Elem()
}

func (o EventDestinationTargetCloudwatchLogArrayOutput) ToEventDestinationTargetCloudwatchLogArrayOutput() EventDestinationTargetCloudwatchLogArrayOutput {
	return o
}

func (o EventDestinationTargetCloudwatchLogArrayOutput) ToEventDestinationTargetCloudwatchLogArrayOutputWithContext(ctx context.Context) EventDestinationTargetCloudwatchLogArrayOutput {
	return o
}

func (o EventDestinationTargetCloudwatchLogArrayOutput) Index(i pulumi.IntInput) EventDestinationTargetCloudwatchLogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventDestinationTargetCloudwatchLog {
		return vs[0].([]EventDestinationTargetCloudwatchLog)[vs[1].(int)]
	}).(EventDestinationTargetCloudwatchLogOutput)
}

type EventDestinationTargetCloudwatchLogAuth struct {
	Creds []EventDestinationTargetCloudwatchLogAuthCred `pulumi:"creds"`
	Roles []EventDestinationTargetCloudwatchLogAuthRole `pulumi:"roles"`
}

// EventDestinationTargetCloudwatchLogAuthInput is an input type that accepts EventDestinationTargetCloudwatchLogAuthArgs and EventDestinationTargetCloudwatchLogAuthOutput values.
// You can construct a concrete instance of `EventDestinationTargetCloudwatchLogAuthInput` via:
//
//	EventDestinationTargetCloudwatchLogAuthArgs{...}
type EventDestinationTargetCloudwatchLogAuthInput interface {
	pulumi.Input

	ToEventDestinationTargetCloudwatchLogAuthOutput() EventDestinationTargetCloudwatchLogAuthOutput
	ToEventDestinationTargetCloudwatchLogAuthOutputWithContext(context.Context) EventDestinationTargetCloudwatchLogAuthOutput
}

type EventDestinationTargetCloudwatchLogAuthArgs struct {
	Creds EventDestinationTargetCloudwatchLogAuthCredArrayInput `pulumi:"creds"`
	Roles EventDestinationTargetCloudwatchLogAuthRoleArrayInput `pulumi:"roles"`
}

func (EventDestinationTargetCloudwatchLogAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetCloudwatchLogAuth)(nil)).Elem()
}

func (i EventDestinationTargetCloudwatchLogAuthArgs) ToEventDestinationTargetCloudwatchLogAuthOutput() EventDestinationTargetCloudwatchLogAuthOutput {
	return i.ToEventDestinationTargetCloudwatchLogAuthOutputWithContext(context.Background())
}

func (i EventDestinationTargetCloudwatchLogAuthArgs) ToEventDestinationTargetCloudwatchLogAuthOutputWithContext(ctx context.Context) EventDestinationTargetCloudwatchLogAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetCloudwatchLogAuthOutput)
}

// EventDestinationTargetCloudwatchLogAuthArrayInput is an input type that accepts EventDestinationTargetCloudwatchLogAuthArray and EventDestinationTargetCloudwatchLogAuthArrayOutput values.
// You can construct a concrete instance of `EventDestinationTargetCloudwatchLogAuthArrayInput` via:
//
//	EventDestinationTargetCloudwatchLogAuthArray{ EventDestinationTargetCloudwatchLogAuthArgs{...} }
type EventDestinationTargetCloudwatchLogAuthArrayInput interface {
	pulumi.Input

	ToEventDestinationTargetCloudwatchLogAuthArrayOutput() EventDestinationTargetCloudwatchLogAuthArrayOutput
	ToEventDestinationTargetCloudwatchLogAuthArrayOutputWithContext(context.Context) EventDestinationTargetCloudwatchLogAuthArrayOutput
}

type EventDestinationTargetCloudwatchLogAuthArray []EventDestinationTargetCloudwatchLogAuthInput

func (EventDestinationTargetCloudwatchLogAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetCloudwatchLogAuth)(nil)).Elem()
}

func (i EventDestinationTargetCloudwatchLogAuthArray) ToEventDestinationTargetCloudwatchLogAuthArrayOutput() EventDestinationTargetCloudwatchLogAuthArrayOutput {
	return i.ToEventDestinationTargetCloudwatchLogAuthArrayOutputWithContext(context.Background())
}

func (i EventDestinationTargetCloudwatchLogAuthArray) ToEventDestinationTargetCloudwatchLogAuthArrayOutputWithContext(ctx context.Context) EventDestinationTargetCloudwatchLogAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetCloudwatchLogAuthArrayOutput)
}

type EventDestinationTargetCloudwatchLogAuthOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetCloudwatchLogAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetCloudwatchLogAuth)(nil)).Elem()
}

func (o EventDestinationTargetCloudwatchLogAuthOutput) ToEventDestinationTargetCloudwatchLogAuthOutput() EventDestinationTargetCloudwatchLogAuthOutput {
	return o
}

func (o EventDestinationTargetCloudwatchLogAuthOutput) ToEventDestinationTargetCloudwatchLogAuthOutputWithContext(ctx context.Context) EventDestinationTargetCloudwatchLogAuthOutput {
	return o
}

func (o EventDestinationTargetCloudwatchLogAuthOutput) Creds() EventDestinationTargetCloudwatchLogAuthCredArrayOutput {
	return o.ApplyT(func(v EventDestinationTargetCloudwatchLogAuth) []EventDestinationTargetCloudwatchLogAuthCred {
		return v.Creds
	}).(EventDestinationTargetCloudwatchLogAuthCredArrayOutput)
}

func (o EventDestinationTargetCloudwatchLogAuthOutput) Roles() EventDestinationTargetCloudwatchLogAuthRoleArrayOutput {
	return o.ApplyT(func(v EventDestinationTargetCloudwatchLogAuth) []EventDestinationTargetCloudwatchLogAuthRole {
		return v.Roles
	}).(EventDestinationTargetCloudwatchLogAuthRoleArrayOutput)
}

type EventDestinationTargetCloudwatchLogAuthArrayOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetCloudwatchLogAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetCloudwatchLogAuth)(nil)).Elem()
}

func (o EventDestinationTargetCloudwatchLogAuthArrayOutput) ToEventDestinationTargetCloudwatchLogAuthArrayOutput() EventDestinationTargetCloudwatchLogAuthArrayOutput {
	return o
}

func (o EventDestinationTargetCloudwatchLogAuthArrayOutput) ToEventDestinationTargetCloudwatchLogAuthArrayOutputWithContext(ctx context.Context) EventDestinationTargetCloudwatchLogAuthArrayOutput {
	return o
}

func (o EventDestinationTargetCloudwatchLogAuthArrayOutput) Index(i pulumi.IntInput) EventDestinationTargetCloudwatchLogAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventDestinationTargetCloudwatchLogAuth {
		return vs[0].([]EventDestinationTargetCloudwatchLogAuth)[vs[1].(int)]
	}).(EventDestinationTargetCloudwatchLogAuthOutput)
}

type EventDestinationTargetCloudwatchLogAuthCred struct {
	AwsAccessKeyId     string `pulumi:"awsAccessKeyId"`
	AwsSecretAccessKey string `pulumi:"awsSecretAccessKey"`
}

// EventDestinationTargetCloudwatchLogAuthCredInput is an input type that accepts EventDestinationTargetCloudwatchLogAuthCredArgs and EventDestinationTargetCloudwatchLogAuthCredOutput values.
// You can construct a concrete instance of `EventDestinationTargetCloudwatchLogAuthCredInput` via:
//
//	EventDestinationTargetCloudwatchLogAuthCredArgs{...}
type EventDestinationTargetCloudwatchLogAuthCredInput interface {
	pulumi.Input

	ToEventDestinationTargetCloudwatchLogAuthCredOutput() EventDestinationTargetCloudwatchLogAuthCredOutput
	ToEventDestinationTargetCloudwatchLogAuthCredOutputWithContext(context.Context) EventDestinationTargetCloudwatchLogAuthCredOutput
}

type EventDestinationTargetCloudwatchLogAuthCredArgs struct {
	AwsAccessKeyId     pulumi.StringInput `pulumi:"awsAccessKeyId"`
	AwsSecretAccessKey pulumi.StringInput `pulumi:"awsSecretAccessKey"`
}

func (EventDestinationTargetCloudwatchLogAuthCredArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetCloudwatchLogAuthCred)(nil)).Elem()
}

func (i EventDestinationTargetCloudwatchLogAuthCredArgs) ToEventDestinationTargetCloudwatchLogAuthCredOutput() EventDestinationTargetCloudwatchLogAuthCredOutput {
	return i.ToEventDestinationTargetCloudwatchLogAuthCredOutputWithContext(context.Background())
}

func (i EventDestinationTargetCloudwatchLogAuthCredArgs) ToEventDestinationTargetCloudwatchLogAuthCredOutputWithContext(ctx context.Context) EventDestinationTargetCloudwatchLogAuthCredOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetCloudwatchLogAuthCredOutput)
}

// EventDestinationTargetCloudwatchLogAuthCredArrayInput is an input type that accepts EventDestinationTargetCloudwatchLogAuthCredArray and EventDestinationTargetCloudwatchLogAuthCredArrayOutput values.
// You can construct a concrete instance of `EventDestinationTargetCloudwatchLogAuthCredArrayInput` via:
//
//	EventDestinationTargetCloudwatchLogAuthCredArray{ EventDestinationTargetCloudwatchLogAuthCredArgs{...} }
type EventDestinationTargetCloudwatchLogAuthCredArrayInput interface {
	pulumi.Input

	ToEventDestinationTargetCloudwatchLogAuthCredArrayOutput() EventDestinationTargetCloudwatchLogAuthCredArrayOutput
	ToEventDestinationTargetCloudwatchLogAuthCredArrayOutputWithContext(context.Context) EventDestinationTargetCloudwatchLogAuthCredArrayOutput
}

type EventDestinationTargetCloudwatchLogAuthCredArray []EventDestinationTargetCloudwatchLogAuthCredInput

func (EventDestinationTargetCloudwatchLogAuthCredArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetCloudwatchLogAuthCred)(nil)).Elem()
}

func (i EventDestinationTargetCloudwatchLogAuthCredArray) ToEventDestinationTargetCloudwatchLogAuthCredArrayOutput() EventDestinationTargetCloudwatchLogAuthCredArrayOutput {
	return i.ToEventDestinationTargetCloudwatchLogAuthCredArrayOutputWithContext(context.Background())
}

func (i EventDestinationTargetCloudwatchLogAuthCredArray) ToEventDestinationTargetCloudwatchLogAuthCredArrayOutputWithContext(ctx context.Context) EventDestinationTargetCloudwatchLogAuthCredArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetCloudwatchLogAuthCredArrayOutput)
}

type EventDestinationTargetCloudwatchLogAuthCredOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetCloudwatchLogAuthCredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetCloudwatchLogAuthCred)(nil)).Elem()
}

func (o EventDestinationTargetCloudwatchLogAuthCredOutput) ToEventDestinationTargetCloudwatchLogAuthCredOutput() EventDestinationTargetCloudwatchLogAuthCredOutput {
	return o
}

func (o EventDestinationTargetCloudwatchLogAuthCredOutput) ToEventDestinationTargetCloudwatchLogAuthCredOutputWithContext(ctx context.Context) EventDestinationTargetCloudwatchLogAuthCredOutput {
	return o
}

func (o EventDestinationTargetCloudwatchLogAuthCredOutput) AwsAccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v EventDestinationTargetCloudwatchLogAuthCred) string { return v.AwsAccessKeyId }).(pulumi.StringOutput)
}

func (o EventDestinationTargetCloudwatchLogAuthCredOutput) AwsSecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v EventDestinationTargetCloudwatchLogAuthCred) string { return v.AwsSecretAccessKey }).(pulumi.StringOutput)
}

type EventDestinationTargetCloudwatchLogAuthCredArrayOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetCloudwatchLogAuthCredArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetCloudwatchLogAuthCred)(nil)).Elem()
}

func (o EventDestinationTargetCloudwatchLogAuthCredArrayOutput) ToEventDestinationTargetCloudwatchLogAuthCredArrayOutput() EventDestinationTargetCloudwatchLogAuthCredArrayOutput {
	return o
}

func (o EventDestinationTargetCloudwatchLogAuthCredArrayOutput) ToEventDestinationTargetCloudwatchLogAuthCredArrayOutputWithContext(ctx context.Context) EventDestinationTargetCloudwatchLogAuthCredArrayOutput {
	return o
}

func (o EventDestinationTargetCloudwatchLogAuthCredArrayOutput) Index(i pulumi.IntInput) EventDestinationTargetCloudwatchLogAuthCredOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventDestinationTargetCloudwatchLogAuthCred {
		return vs[0].([]EventDestinationTargetCloudwatchLogAuthCred)[vs[1].(int)]
	}).(EventDestinationTargetCloudwatchLogAuthCredOutput)
}

type EventDestinationTargetCloudwatchLogAuthRole struct {
	RoleArn string `pulumi:"roleArn"`
}

// EventDestinationTargetCloudwatchLogAuthRoleInput is an input type that accepts EventDestinationTargetCloudwatchLogAuthRoleArgs and EventDestinationTargetCloudwatchLogAuthRoleOutput values.
// You can construct a concrete instance of `EventDestinationTargetCloudwatchLogAuthRoleInput` via:
//
//	EventDestinationTargetCloudwatchLogAuthRoleArgs{...}
type EventDestinationTargetCloudwatchLogAuthRoleInput interface {
	pulumi.Input

	ToEventDestinationTargetCloudwatchLogAuthRoleOutput() EventDestinationTargetCloudwatchLogAuthRoleOutput
	ToEventDestinationTargetCloudwatchLogAuthRoleOutputWithContext(context.Context) EventDestinationTargetCloudwatchLogAuthRoleOutput
}

type EventDestinationTargetCloudwatchLogAuthRoleArgs struct {
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (EventDestinationTargetCloudwatchLogAuthRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetCloudwatchLogAuthRole)(nil)).Elem()
}

func (i EventDestinationTargetCloudwatchLogAuthRoleArgs) ToEventDestinationTargetCloudwatchLogAuthRoleOutput() EventDestinationTargetCloudwatchLogAuthRoleOutput {
	return i.ToEventDestinationTargetCloudwatchLogAuthRoleOutputWithContext(context.Background())
}

func (i EventDestinationTargetCloudwatchLogAuthRoleArgs) ToEventDestinationTargetCloudwatchLogAuthRoleOutputWithContext(ctx context.Context) EventDestinationTargetCloudwatchLogAuthRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetCloudwatchLogAuthRoleOutput)
}

// EventDestinationTargetCloudwatchLogAuthRoleArrayInput is an input type that accepts EventDestinationTargetCloudwatchLogAuthRoleArray and EventDestinationTargetCloudwatchLogAuthRoleArrayOutput values.
// You can construct a concrete instance of `EventDestinationTargetCloudwatchLogAuthRoleArrayInput` via:
//
//	EventDestinationTargetCloudwatchLogAuthRoleArray{ EventDestinationTargetCloudwatchLogAuthRoleArgs{...} }
type EventDestinationTargetCloudwatchLogAuthRoleArrayInput interface {
	pulumi.Input

	ToEventDestinationTargetCloudwatchLogAuthRoleArrayOutput() EventDestinationTargetCloudwatchLogAuthRoleArrayOutput
	ToEventDestinationTargetCloudwatchLogAuthRoleArrayOutputWithContext(context.Context) EventDestinationTargetCloudwatchLogAuthRoleArrayOutput
}

type EventDestinationTargetCloudwatchLogAuthRoleArray []EventDestinationTargetCloudwatchLogAuthRoleInput

func (EventDestinationTargetCloudwatchLogAuthRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetCloudwatchLogAuthRole)(nil)).Elem()
}

func (i EventDestinationTargetCloudwatchLogAuthRoleArray) ToEventDestinationTargetCloudwatchLogAuthRoleArrayOutput() EventDestinationTargetCloudwatchLogAuthRoleArrayOutput {
	return i.ToEventDestinationTargetCloudwatchLogAuthRoleArrayOutputWithContext(context.Background())
}

func (i EventDestinationTargetCloudwatchLogAuthRoleArray) ToEventDestinationTargetCloudwatchLogAuthRoleArrayOutputWithContext(ctx context.Context) EventDestinationTargetCloudwatchLogAuthRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetCloudwatchLogAuthRoleArrayOutput)
}

type EventDestinationTargetCloudwatchLogAuthRoleOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetCloudwatchLogAuthRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetCloudwatchLogAuthRole)(nil)).Elem()
}

func (o EventDestinationTargetCloudwatchLogAuthRoleOutput) ToEventDestinationTargetCloudwatchLogAuthRoleOutput() EventDestinationTargetCloudwatchLogAuthRoleOutput {
	return o
}

func (o EventDestinationTargetCloudwatchLogAuthRoleOutput) ToEventDestinationTargetCloudwatchLogAuthRoleOutputWithContext(ctx context.Context) EventDestinationTargetCloudwatchLogAuthRoleOutput {
	return o
}

func (o EventDestinationTargetCloudwatchLogAuthRoleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v EventDestinationTargetCloudwatchLogAuthRole) string { return v.RoleArn }).(pulumi.StringOutput)
}

type EventDestinationTargetCloudwatchLogAuthRoleArrayOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetCloudwatchLogAuthRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetCloudwatchLogAuthRole)(nil)).Elem()
}

func (o EventDestinationTargetCloudwatchLogAuthRoleArrayOutput) ToEventDestinationTargetCloudwatchLogAuthRoleArrayOutput() EventDestinationTargetCloudwatchLogAuthRoleArrayOutput {
	return o
}

func (o EventDestinationTargetCloudwatchLogAuthRoleArrayOutput) ToEventDestinationTargetCloudwatchLogAuthRoleArrayOutputWithContext(ctx context.Context) EventDestinationTargetCloudwatchLogAuthRoleArrayOutput {
	return o
}

func (o EventDestinationTargetCloudwatchLogAuthRoleArrayOutput) Index(i pulumi.IntInput) EventDestinationTargetCloudwatchLogAuthRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventDestinationTargetCloudwatchLogAuthRole {
		return vs[0].([]EventDestinationTargetCloudwatchLogAuthRole)[vs[1].(int)]
	}).(EventDestinationTargetCloudwatchLogAuthRoleOutput)
}

type EventDestinationTargetDebug struct {
	CallbackUrl *string `pulumi:"callbackUrl"`
	Log         *bool   `pulumi:"log"`
}

// EventDestinationTargetDebugInput is an input type that accepts EventDestinationTargetDebugArgs and EventDestinationTargetDebugOutput values.
// You can construct a concrete instance of `EventDestinationTargetDebugInput` via:
//
//	EventDestinationTargetDebugArgs{...}
type EventDestinationTargetDebugInput interface {
	pulumi.Input

	ToEventDestinationTargetDebugOutput() EventDestinationTargetDebugOutput
	ToEventDestinationTargetDebugOutputWithContext(context.Context) EventDestinationTargetDebugOutput
}

type EventDestinationTargetDebugArgs struct {
	CallbackUrl pulumi.StringPtrInput `pulumi:"callbackUrl"`
	Log         pulumi.BoolPtrInput   `pulumi:"log"`
}

func (EventDestinationTargetDebugArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetDebug)(nil)).Elem()
}

func (i EventDestinationTargetDebugArgs) ToEventDestinationTargetDebugOutput() EventDestinationTargetDebugOutput {
	return i.ToEventDestinationTargetDebugOutputWithContext(context.Background())
}

func (i EventDestinationTargetDebugArgs) ToEventDestinationTargetDebugOutputWithContext(ctx context.Context) EventDestinationTargetDebugOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetDebugOutput)
}

// EventDestinationTargetDebugArrayInput is an input type that accepts EventDestinationTargetDebugArray and EventDestinationTargetDebugArrayOutput values.
// You can construct a concrete instance of `EventDestinationTargetDebugArrayInput` via:
//
//	EventDestinationTargetDebugArray{ EventDestinationTargetDebugArgs{...} }
type EventDestinationTargetDebugArrayInput interface {
	pulumi.Input

	ToEventDestinationTargetDebugArrayOutput() EventDestinationTargetDebugArrayOutput
	ToEventDestinationTargetDebugArrayOutputWithContext(context.Context) EventDestinationTargetDebugArrayOutput
}

type EventDestinationTargetDebugArray []EventDestinationTargetDebugInput

func (EventDestinationTargetDebugArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetDebug)(nil)).Elem()
}

func (i EventDestinationTargetDebugArray) ToEventDestinationTargetDebugArrayOutput() EventDestinationTargetDebugArrayOutput {
	return i.ToEventDestinationTargetDebugArrayOutputWithContext(context.Background())
}

func (i EventDestinationTargetDebugArray) ToEventDestinationTargetDebugArrayOutputWithContext(ctx context.Context) EventDestinationTargetDebugArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetDebugArrayOutput)
}

type EventDestinationTargetDebugOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetDebugOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetDebug)(nil)).Elem()
}

func (o EventDestinationTargetDebugOutput) ToEventDestinationTargetDebugOutput() EventDestinationTargetDebugOutput {
	return o
}

func (o EventDestinationTargetDebugOutput) ToEventDestinationTargetDebugOutputWithContext(ctx context.Context) EventDestinationTargetDebugOutput {
	return o
}

func (o EventDestinationTargetDebugOutput) CallbackUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventDestinationTargetDebug) *string { return v.CallbackUrl }).(pulumi.StringPtrOutput)
}

func (o EventDestinationTargetDebugOutput) Log() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EventDestinationTargetDebug) *bool { return v.Log }).(pulumi.BoolPtrOutput)
}

type EventDestinationTargetDebugArrayOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetDebugArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetDebug)(nil)).Elem()
}

func (o EventDestinationTargetDebugArrayOutput) ToEventDestinationTargetDebugArrayOutput() EventDestinationTargetDebugArrayOutput {
	return o
}

func (o EventDestinationTargetDebugArrayOutput) ToEventDestinationTargetDebugArrayOutputWithContext(ctx context.Context) EventDestinationTargetDebugArrayOutput {
	return o
}

func (o EventDestinationTargetDebugArrayOutput) Index(i pulumi.IntInput) EventDestinationTargetDebugOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventDestinationTargetDebug {
		return vs[0].([]EventDestinationTargetDebug)[vs[1].(int)]
	}).(EventDestinationTargetDebugOutput)
}

type EventDestinationTargetFirehose struct {
	Auths             []EventDestinationTargetFirehoseAuth `pulumi:"auths"`
	DeliveryStreamArn *string                              `pulumi:"deliveryStreamArn"`
}

// EventDestinationTargetFirehoseInput is an input type that accepts EventDestinationTargetFirehoseArgs and EventDestinationTargetFirehoseOutput values.
// You can construct a concrete instance of `EventDestinationTargetFirehoseInput` via:
//
//	EventDestinationTargetFirehoseArgs{...}
type EventDestinationTargetFirehoseInput interface {
	pulumi.Input

	ToEventDestinationTargetFirehoseOutput() EventDestinationTargetFirehoseOutput
	ToEventDestinationTargetFirehoseOutputWithContext(context.Context) EventDestinationTargetFirehoseOutput
}

type EventDestinationTargetFirehoseArgs struct {
	Auths             EventDestinationTargetFirehoseAuthArrayInput `pulumi:"auths"`
	DeliveryStreamArn pulumi.StringPtrInput                        `pulumi:"deliveryStreamArn"`
}

func (EventDestinationTargetFirehoseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetFirehose)(nil)).Elem()
}

func (i EventDestinationTargetFirehoseArgs) ToEventDestinationTargetFirehoseOutput() EventDestinationTargetFirehoseOutput {
	return i.ToEventDestinationTargetFirehoseOutputWithContext(context.Background())
}

func (i EventDestinationTargetFirehoseArgs) ToEventDestinationTargetFirehoseOutputWithContext(ctx context.Context) EventDestinationTargetFirehoseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetFirehoseOutput)
}

// EventDestinationTargetFirehoseArrayInput is an input type that accepts EventDestinationTargetFirehoseArray and EventDestinationTargetFirehoseArrayOutput values.
// You can construct a concrete instance of `EventDestinationTargetFirehoseArrayInput` via:
//
//	EventDestinationTargetFirehoseArray{ EventDestinationTargetFirehoseArgs{...} }
type EventDestinationTargetFirehoseArrayInput interface {
	pulumi.Input

	ToEventDestinationTargetFirehoseArrayOutput() EventDestinationTargetFirehoseArrayOutput
	ToEventDestinationTargetFirehoseArrayOutputWithContext(context.Context) EventDestinationTargetFirehoseArrayOutput
}

type EventDestinationTargetFirehoseArray []EventDestinationTargetFirehoseInput

func (EventDestinationTargetFirehoseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetFirehose)(nil)).Elem()
}

func (i EventDestinationTargetFirehoseArray) ToEventDestinationTargetFirehoseArrayOutput() EventDestinationTargetFirehoseArrayOutput {
	return i.ToEventDestinationTargetFirehoseArrayOutputWithContext(context.Background())
}

func (i EventDestinationTargetFirehoseArray) ToEventDestinationTargetFirehoseArrayOutputWithContext(ctx context.Context) EventDestinationTargetFirehoseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetFirehoseArrayOutput)
}

type EventDestinationTargetFirehoseOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetFirehoseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetFirehose)(nil)).Elem()
}

func (o EventDestinationTargetFirehoseOutput) ToEventDestinationTargetFirehoseOutput() EventDestinationTargetFirehoseOutput {
	return o
}

func (o EventDestinationTargetFirehoseOutput) ToEventDestinationTargetFirehoseOutputWithContext(ctx context.Context) EventDestinationTargetFirehoseOutput {
	return o
}

func (o EventDestinationTargetFirehoseOutput) Auths() EventDestinationTargetFirehoseAuthArrayOutput {
	return o.ApplyT(func(v EventDestinationTargetFirehose) []EventDestinationTargetFirehoseAuth { return v.Auths }).(EventDestinationTargetFirehoseAuthArrayOutput)
}

func (o EventDestinationTargetFirehoseOutput) DeliveryStreamArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventDestinationTargetFirehose) *string { return v.DeliveryStreamArn }).(pulumi.StringPtrOutput)
}

type EventDestinationTargetFirehoseArrayOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetFirehoseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetFirehose)(nil)).Elem()
}

func (o EventDestinationTargetFirehoseArrayOutput) ToEventDestinationTargetFirehoseArrayOutput() EventDestinationTargetFirehoseArrayOutput {
	return o
}

func (o EventDestinationTargetFirehoseArrayOutput) ToEventDestinationTargetFirehoseArrayOutputWithContext(ctx context.Context) EventDestinationTargetFirehoseArrayOutput {
	return o
}

func (o EventDestinationTargetFirehoseArrayOutput) Index(i pulumi.IntInput) EventDestinationTargetFirehoseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventDestinationTargetFirehose {
		return vs[0].([]EventDestinationTargetFirehose)[vs[1].(int)]
	}).(EventDestinationTargetFirehoseOutput)
}

type EventDestinationTargetFirehoseAuth struct {
	Creds []EventDestinationTargetFirehoseAuthCred `pulumi:"creds"`
	Roles []EventDestinationTargetFirehoseAuthRole `pulumi:"roles"`
}

// EventDestinationTargetFirehoseAuthInput is an input type that accepts EventDestinationTargetFirehoseAuthArgs and EventDestinationTargetFirehoseAuthOutput values.
// You can construct a concrete instance of `EventDestinationTargetFirehoseAuthInput` via:
//
//	EventDestinationTargetFirehoseAuthArgs{...}
type EventDestinationTargetFirehoseAuthInput interface {
	pulumi.Input

	ToEventDestinationTargetFirehoseAuthOutput() EventDestinationTargetFirehoseAuthOutput
	ToEventDestinationTargetFirehoseAuthOutputWithContext(context.Context) EventDestinationTargetFirehoseAuthOutput
}

type EventDestinationTargetFirehoseAuthArgs struct {
	Creds EventDestinationTargetFirehoseAuthCredArrayInput `pulumi:"creds"`
	Roles EventDestinationTargetFirehoseAuthRoleArrayInput `pulumi:"roles"`
}

func (EventDestinationTargetFirehoseAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetFirehoseAuth)(nil)).Elem()
}

func (i EventDestinationTargetFirehoseAuthArgs) ToEventDestinationTargetFirehoseAuthOutput() EventDestinationTargetFirehoseAuthOutput {
	return i.ToEventDestinationTargetFirehoseAuthOutputWithContext(context.Background())
}

func (i EventDestinationTargetFirehoseAuthArgs) ToEventDestinationTargetFirehoseAuthOutputWithContext(ctx context.Context) EventDestinationTargetFirehoseAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetFirehoseAuthOutput)
}

// EventDestinationTargetFirehoseAuthArrayInput is an input type that accepts EventDestinationTargetFirehoseAuthArray and EventDestinationTargetFirehoseAuthArrayOutput values.
// You can construct a concrete instance of `EventDestinationTargetFirehoseAuthArrayInput` via:
//
//	EventDestinationTargetFirehoseAuthArray{ EventDestinationTargetFirehoseAuthArgs{...} }
type EventDestinationTargetFirehoseAuthArrayInput interface {
	pulumi.Input

	ToEventDestinationTargetFirehoseAuthArrayOutput() EventDestinationTargetFirehoseAuthArrayOutput
	ToEventDestinationTargetFirehoseAuthArrayOutputWithContext(context.Context) EventDestinationTargetFirehoseAuthArrayOutput
}

type EventDestinationTargetFirehoseAuthArray []EventDestinationTargetFirehoseAuthInput

func (EventDestinationTargetFirehoseAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetFirehoseAuth)(nil)).Elem()
}

func (i EventDestinationTargetFirehoseAuthArray) ToEventDestinationTargetFirehoseAuthArrayOutput() EventDestinationTargetFirehoseAuthArrayOutput {
	return i.ToEventDestinationTargetFirehoseAuthArrayOutputWithContext(context.Background())
}

func (i EventDestinationTargetFirehoseAuthArray) ToEventDestinationTargetFirehoseAuthArrayOutputWithContext(ctx context.Context) EventDestinationTargetFirehoseAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetFirehoseAuthArrayOutput)
}

type EventDestinationTargetFirehoseAuthOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetFirehoseAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetFirehoseAuth)(nil)).Elem()
}

func (o EventDestinationTargetFirehoseAuthOutput) ToEventDestinationTargetFirehoseAuthOutput() EventDestinationTargetFirehoseAuthOutput {
	return o
}

func (o EventDestinationTargetFirehoseAuthOutput) ToEventDestinationTargetFirehoseAuthOutputWithContext(ctx context.Context) EventDestinationTargetFirehoseAuthOutput {
	return o
}

func (o EventDestinationTargetFirehoseAuthOutput) Creds() EventDestinationTargetFirehoseAuthCredArrayOutput {
	return o.ApplyT(func(v EventDestinationTargetFirehoseAuth) []EventDestinationTargetFirehoseAuthCred { return v.Creds }).(EventDestinationTargetFirehoseAuthCredArrayOutput)
}

func (o EventDestinationTargetFirehoseAuthOutput) Roles() EventDestinationTargetFirehoseAuthRoleArrayOutput {
	return o.ApplyT(func(v EventDestinationTargetFirehoseAuth) []EventDestinationTargetFirehoseAuthRole { return v.Roles }).(EventDestinationTargetFirehoseAuthRoleArrayOutput)
}

type EventDestinationTargetFirehoseAuthArrayOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetFirehoseAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetFirehoseAuth)(nil)).Elem()
}

func (o EventDestinationTargetFirehoseAuthArrayOutput) ToEventDestinationTargetFirehoseAuthArrayOutput() EventDestinationTargetFirehoseAuthArrayOutput {
	return o
}

func (o EventDestinationTargetFirehoseAuthArrayOutput) ToEventDestinationTargetFirehoseAuthArrayOutputWithContext(ctx context.Context) EventDestinationTargetFirehoseAuthArrayOutput {
	return o
}

func (o EventDestinationTargetFirehoseAuthArrayOutput) Index(i pulumi.IntInput) EventDestinationTargetFirehoseAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventDestinationTargetFirehoseAuth {
		return vs[0].([]EventDestinationTargetFirehoseAuth)[vs[1].(int)]
	}).(EventDestinationTargetFirehoseAuthOutput)
}

type EventDestinationTargetFirehoseAuthCred struct {
	AwsAccessKeyId     string `pulumi:"awsAccessKeyId"`
	AwsSecretAccessKey string `pulumi:"awsSecretAccessKey"`
}

// EventDestinationTargetFirehoseAuthCredInput is an input type that accepts EventDestinationTargetFirehoseAuthCredArgs and EventDestinationTargetFirehoseAuthCredOutput values.
// You can construct a concrete instance of `EventDestinationTargetFirehoseAuthCredInput` via:
//
//	EventDestinationTargetFirehoseAuthCredArgs{...}
type EventDestinationTargetFirehoseAuthCredInput interface {
	pulumi.Input

	ToEventDestinationTargetFirehoseAuthCredOutput() EventDestinationTargetFirehoseAuthCredOutput
	ToEventDestinationTargetFirehoseAuthCredOutputWithContext(context.Context) EventDestinationTargetFirehoseAuthCredOutput
}

type EventDestinationTargetFirehoseAuthCredArgs struct {
	AwsAccessKeyId     pulumi.StringInput `pulumi:"awsAccessKeyId"`
	AwsSecretAccessKey pulumi.StringInput `pulumi:"awsSecretAccessKey"`
}

func (EventDestinationTargetFirehoseAuthCredArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetFirehoseAuthCred)(nil)).Elem()
}

func (i EventDestinationTargetFirehoseAuthCredArgs) ToEventDestinationTargetFirehoseAuthCredOutput() EventDestinationTargetFirehoseAuthCredOutput {
	return i.ToEventDestinationTargetFirehoseAuthCredOutputWithContext(context.Background())
}

func (i EventDestinationTargetFirehoseAuthCredArgs) ToEventDestinationTargetFirehoseAuthCredOutputWithContext(ctx context.Context) EventDestinationTargetFirehoseAuthCredOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetFirehoseAuthCredOutput)
}

// EventDestinationTargetFirehoseAuthCredArrayInput is an input type that accepts EventDestinationTargetFirehoseAuthCredArray and EventDestinationTargetFirehoseAuthCredArrayOutput values.
// You can construct a concrete instance of `EventDestinationTargetFirehoseAuthCredArrayInput` via:
//
//	EventDestinationTargetFirehoseAuthCredArray{ EventDestinationTargetFirehoseAuthCredArgs{...} }
type EventDestinationTargetFirehoseAuthCredArrayInput interface {
	pulumi.Input

	ToEventDestinationTargetFirehoseAuthCredArrayOutput() EventDestinationTargetFirehoseAuthCredArrayOutput
	ToEventDestinationTargetFirehoseAuthCredArrayOutputWithContext(context.Context) EventDestinationTargetFirehoseAuthCredArrayOutput
}

type EventDestinationTargetFirehoseAuthCredArray []EventDestinationTargetFirehoseAuthCredInput

func (EventDestinationTargetFirehoseAuthCredArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetFirehoseAuthCred)(nil)).Elem()
}

func (i EventDestinationTargetFirehoseAuthCredArray) ToEventDestinationTargetFirehoseAuthCredArrayOutput() EventDestinationTargetFirehoseAuthCredArrayOutput {
	return i.ToEventDestinationTargetFirehoseAuthCredArrayOutputWithContext(context.Background())
}

func (i EventDestinationTargetFirehoseAuthCredArray) ToEventDestinationTargetFirehoseAuthCredArrayOutputWithContext(ctx context.Context) EventDestinationTargetFirehoseAuthCredArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetFirehoseAuthCredArrayOutput)
}

type EventDestinationTargetFirehoseAuthCredOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetFirehoseAuthCredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetFirehoseAuthCred)(nil)).Elem()
}

func (o EventDestinationTargetFirehoseAuthCredOutput) ToEventDestinationTargetFirehoseAuthCredOutput() EventDestinationTargetFirehoseAuthCredOutput {
	return o
}

func (o EventDestinationTargetFirehoseAuthCredOutput) ToEventDestinationTargetFirehoseAuthCredOutputWithContext(ctx context.Context) EventDestinationTargetFirehoseAuthCredOutput {
	return o
}

func (o EventDestinationTargetFirehoseAuthCredOutput) AwsAccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v EventDestinationTargetFirehoseAuthCred) string { return v.AwsAccessKeyId }).(pulumi.StringOutput)
}

func (o EventDestinationTargetFirehoseAuthCredOutput) AwsSecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v EventDestinationTargetFirehoseAuthCred) string { return v.AwsSecretAccessKey }).(pulumi.StringOutput)
}

type EventDestinationTargetFirehoseAuthCredArrayOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetFirehoseAuthCredArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetFirehoseAuthCred)(nil)).Elem()
}

func (o EventDestinationTargetFirehoseAuthCredArrayOutput) ToEventDestinationTargetFirehoseAuthCredArrayOutput() EventDestinationTargetFirehoseAuthCredArrayOutput {
	return o
}

func (o EventDestinationTargetFirehoseAuthCredArrayOutput) ToEventDestinationTargetFirehoseAuthCredArrayOutputWithContext(ctx context.Context) EventDestinationTargetFirehoseAuthCredArrayOutput {
	return o
}

func (o EventDestinationTargetFirehoseAuthCredArrayOutput) Index(i pulumi.IntInput) EventDestinationTargetFirehoseAuthCredOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventDestinationTargetFirehoseAuthCred {
		return vs[0].([]EventDestinationTargetFirehoseAuthCred)[vs[1].(int)]
	}).(EventDestinationTargetFirehoseAuthCredOutput)
}

type EventDestinationTargetFirehoseAuthRole struct {
	RoleArn string `pulumi:"roleArn"`
}

// EventDestinationTargetFirehoseAuthRoleInput is an input type that accepts EventDestinationTargetFirehoseAuthRoleArgs and EventDestinationTargetFirehoseAuthRoleOutput values.
// You can construct a concrete instance of `EventDestinationTargetFirehoseAuthRoleInput` via:
//
//	EventDestinationTargetFirehoseAuthRoleArgs{...}
type EventDestinationTargetFirehoseAuthRoleInput interface {
	pulumi.Input

	ToEventDestinationTargetFirehoseAuthRoleOutput() EventDestinationTargetFirehoseAuthRoleOutput
	ToEventDestinationTargetFirehoseAuthRoleOutputWithContext(context.Context) EventDestinationTargetFirehoseAuthRoleOutput
}

type EventDestinationTargetFirehoseAuthRoleArgs struct {
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (EventDestinationTargetFirehoseAuthRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetFirehoseAuthRole)(nil)).Elem()
}

func (i EventDestinationTargetFirehoseAuthRoleArgs) ToEventDestinationTargetFirehoseAuthRoleOutput() EventDestinationTargetFirehoseAuthRoleOutput {
	return i.ToEventDestinationTargetFirehoseAuthRoleOutputWithContext(context.Background())
}

func (i EventDestinationTargetFirehoseAuthRoleArgs) ToEventDestinationTargetFirehoseAuthRoleOutputWithContext(ctx context.Context) EventDestinationTargetFirehoseAuthRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetFirehoseAuthRoleOutput)
}

// EventDestinationTargetFirehoseAuthRoleArrayInput is an input type that accepts EventDestinationTargetFirehoseAuthRoleArray and EventDestinationTargetFirehoseAuthRoleArrayOutput values.
// You can construct a concrete instance of `EventDestinationTargetFirehoseAuthRoleArrayInput` via:
//
//	EventDestinationTargetFirehoseAuthRoleArray{ EventDestinationTargetFirehoseAuthRoleArgs{...} }
type EventDestinationTargetFirehoseAuthRoleArrayInput interface {
	pulumi.Input

	ToEventDestinationTargetFirehoseAuthRoleArrayOutput() EventDestinationTargetFirehoseAuthRoleArrayOutput
	ToEventDestinationTargetFirehoseAuthRoleArrayOutputWithContext(context.Context) EventDestinationTargetFirehoseAuthRoleArrayOutput
}

type EventDestinationTargetFirehoseAuthRoleArray []EventDestinationTargetFirehoseAuthRoleInput

func (EventDestinationTargetFirehoseAuthRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetFirehoseAuthRole)(nil)).Elem()
}

func (i EventDestinationTargetFirehoseAuthRoleArray) ToEventDestinationTargetFirehoseAuthRoleArrayOutput() EventDestinationTargetFirehoseAuthRoleArrayOutput {
	return i.ToEventDestinationTargetFirehoseAuthRoleArrayOutputWithContext(context.Background())
}

func (i EventDestinationTargetFirehoseAuthRoleArray) ToEventDestinationTargetFirehoseAuthRoleArrayOutputWithContext(ctx context.Context) EventDestinationTargetFirehoseAuthRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetFirehoseAuthRoleArrayOutput)
}

type EventDestinationTargetFirehoseAuthRoleOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetFirehoseAuthRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetFirehoseAuthRole)(nil)).Elem()
}

func (o EventDestinationTargetFirehoseAuthRoleOutput) ToEventDestinationTargetFirehoseAuthRoleOutput() EventDestinationTargetFirehoseAuthRoleOutput {
	return o
}

func (o EventDestinationTargetFirehoseAuthRoleOutput) ToEventDestinationTargetFirehoseAuthRoleOutputWithContext(ctx context.Context) EventDestinationTargetFirehoseAuthRoleOutput {
	return o
}

func (o EventDestinationTargetFirehoseAuthRoleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v EventDestinationTargetFirehoseAuthRole) string { return v.RoleArn }).(pulumi.StringOutput)
}

type EventDestinationTargetFirehoseAuthRoleArrayOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetFirehoseAuthRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetFirehoseAuthRole)(nil)).Elem()
}

func (o EventDestinationTargetFirehoseAuthRoleArrayOutput) ToEventDestinationTargetFirehoseAuthRoleArrayOutput() EventDestinationTargetFirehoseAuthRoleArrayOutput {
	return o
}

func (o EventDestinationTargetFirehoseAuthRoleArrayOutput) ToEventDestinationTargetFirehoseAuthRoleArrayOutputWithContext(ctx context.Context) EventDestinationTargetFirehoseAuthRoleArrayOutput {
	return o
}

func (o EventDestinationTargetFirehoseAuthRoleArrayOutput) Index(i pulumi.IntInput) EventDestinationTargetFirehoseAuthRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventDestinationTargetFirehoseAuthRole {
		return vs[0].([]EventDestinationTargetFirehoseAuthRole)[vs[1].(int)]
	}).(EventDestinationTargetFirehoseAuthRoleOutput)
}

type EventDestinationTargetKinese struct {
	Auths     []EventDestinationTargetKineseAuth `pulumi:"auths"`
	StreamArn *string                            `pulumi:"streamArn"`
}

// EventDestinationTargetKineseInput is an input type that accepts EventDestinationTargetKineseArgs and EventDestinationTargetKineseOutput values.
// You can construct a concrete instance of `EventDestinationTargetKineseInput` via:
//
//	EventDestinationTargetKineseArgs{...}
type EventDestinationTargetKineseInput interface {
	pulumi.Input

	ToEventDestinationTargetKineseOutput() EventDestinationTargetKineseOutput
	ToEventDestinationTargetKineseOutputWithContext(context.Context) EventDestinationTargetKineseOutput
}

type EventDestinationTargetKineseArgs struct {
	Auths     EventDestinationTargetKineseAuthArrayInput `pulumi:"auths"`
	StreamArn pulumi.StringPtrInput                      `pulumi:"streamArn"`
}

func (EventDestinationTargetKineseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetKinese)(nil)).Elem()
}

func (i EventDestinationTargetKineseArgs) ToEventDestinationTargetKineseOutput() EventDestinationTargetKineseOutput {
	return i.ToEventDestinationTargetKineseOutputWithContext(context.Background())
}

func (i EventDestinationTargetKineseArgs) ToEventDestinationTargetKineseOutputWithContext(ctx context.Context) EventDestinationTargetKineseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetKineseOutput)
}

// EventDestinationTargetKineseArrayInput is an input type that accepts EventDestinationTargetKineseArray and EventDestinationTargetKineseArrayOutput values.
// You can construct a concrete instance of `EventDestinationTargetKineseArrayInput` via:
//
//	EventDestinationTargetKineseArray{ EventDestinationTargetKineseArgs{...} }
type EventDestinationTargetKineseArrayInput interface {
	pulumi.Input

	ToEventDestinationTargetKineseArrayOutput() EventDestinationTargetKineseArrayOutput
	ToEventDestinationTargetKineseArrayOutputWithContext(context.Context) EventDestinationTargetKineseArrayOutput
}

type EventDestinationTargetKineseArray []EventDestinationTargetKineseInput

func (EventDestinationTargetKineseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetKinese)(nil)).Elem()
}

func (i EventDestinationTargetKineseArray) ToEventDestinationTargetKineseArrayOutput() EventDestinationTargetKineseArrayOutput {
	return i.ToEventDestinationTargetKineseArrayOutputWithContext(context.Background())
}

func (i EventDestinationTargetKineseArray) ToEventDestinationTargetKineseArrayOutputWithContext(ctx context.Context) EventDestinationTargetKineseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetKineseArrayOutput)
}

type EventDestinationTargetKineseOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetKineseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetKinese)(nil)).Elem()
}

func (o EventDestinationTargetKineseOutput) ToEventDestinationTargetKineseOutput() EventDestinationTargetKineseOutput {
	return o
}

func (o EventDestinationTargetKineseOutput) ToEventDestinationTargetKineseOutputWithContext(ctx context.Context) EventDestinationTargetKineseOutput {
	return o
}

func (o EventDestinationTargetKineseOutput) Auths() EventDestinationTargetKineseAuthArrayOutput {
	return o.ApplyT(func(v EventDestinationTargetKinese) []EventDestinationTargetKineseAuth { return v.Auths }).(EventDestinationTargetKineseAuthArrayOutput)
}

func (o EventDestinationTargetKineseOutput) StreamArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventDestinationTargetKinese) *string { return v.StreamArn }).(pulumi.StringPtrOutput)
}

type EventDestinationTargetKineseArrayOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetKineseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetKinese)(nil)).Elem()
}

func (o EventDestinationTargetKineseArrayOutput) ToEventDestinationTargetKineseArrayOutput() EventDestinationTargetKineseArrayOutput {
	return o
}

func (o EventDestinationTargetKineseArrayOutput) ToEventDestinationTargetKineseArrayOutputWithContext(ctx context.Context) EventDestinationTargetKineseArrayOutput {
	return o
}

func (o EventDestinationTargetKineseArrayOutput) Index(i pulumi.IntInput) EventDestinationTargetKineseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventDestinationTargetKinese {
		return vs[0].([]EventDestinationTargetKinese)[vs[1].(int)]
	}).(EventDestinationTargetKineseOutput)
}

type EventDestinationTargetKineseAuth struct {
	Creds []EventDestinationTargetKineseAuthCred `pulumi:"creds"`
	Roles []EventDestinationTargetKineseAuthRole `pulumi:"roles"`
}

// EventDestinationTargetKineseAuthInput is an input type that accepts EventDestinationTargetKineseAuthArgs and EventDestinationTargetKineseAuthOutput values.
// You can construct a concrete instance of `EventDestinationTargetKineseAuthInput` via:
//
//	EventDestinationTargetKineseAuthArgs{...}
type EventDestinationTargetKineseAuthInput interface {
	pulumi.Input

	ToEventDestinationTargetKineseAuthOutput() EventDestinationTargetKineseAuthOutput
	ToEventDestinationTargetKineseAuthOutputWithContext(context.Context) EventDestinationTargetKineseAuthOutput
}

type EventDestinationTargetKineseAuthArgs struct {
	Creds EventDestinationTargetKineseAuthCredArrayInput `pulumi:"creds"`
	Roles EventDestinationTargetKineseAuthRoleArrayInput `pulumi:"roles"`
}

func (EventDestinationTargetKineseAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetKineseAuth)(nil)).Elem()
}

func (i EventDestinationTargetKineseAuthArgs) ToEventDestinationTargetKineseAuthOutput() EventDestinationTargetKineseAuthOutput {
	return i.ToEventDestinationTargetKineseAuthOutputWithContext(context.Background())
}

func (i EventDestinationTargetKineseAuthArgs) ToEventDestinationTargetKineseAuthOutputWithContext(ctx context.Context) EventDestinationTargetKineseAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetKineseAuthOutput)
}

// EventDestinationTargetKineseAuthArrayInput is an input type that accepts EventDestinationTargetKineseAuthArray and EventDestinationTargetKineseAuthArrayOutput values.
// You can construct a concrete instance of `EventDestinationTargetKineseAuthArrayInput` via:
//
//	EventDestinationTargetKineseAuthArray{ EventDestinationTargetKineseAuthArgs{...} }
type EventDestinationTargetKineseAuthArrayInput interface {
	pulumi.Input

	ToEventDestinationTargetKineseAuthArrayOutput() EventDestinationTargetKineseAuthArrayOutput
	ToEventDestinationTargetKineseAuthArrayOutputWithContext(context.Context) EventDestinationTargetKineseAuthArrayOutput
}

type EventDestinationTargetKineseAuthArray []EventDestinationTargetKineseAuthInput

func (EventDestinationTargetKineseAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetKineseAuth)(nil)).Elem()
}

func (i EventDestinationTargetKineseAuthArray) ToEventDestinationTargetKineseAuthArrayOutput() EventDestinationTargetKineseAuthArrayOutput {
	return i.ToEventDestinationTargetKineseAuthArrayOutputWithContext(context.Background())
}

func (i EventDestinationTargetKineseAuthArray) ToEventDestinationTargetKineseAuthArrayOutputWithContext(ctx context.Context) EventDestinationTargetKineseAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetKineseAuthArrayOutput)
}

type EventDestinationTargetKineseAuthOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetKineseAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetKineseAuth)(nil)).Elem()
}

func (o EventDestinationTargetKineseAuthOutput) ToEventDestinationTargetKineseAuthOutput() EventDestinationTargetKineseAuthOutput {
	return o
}

func (o EventDestinationTargetKineseAuthOutput) ToEventDestinationTargetKineseAuthOutputWithContext(ctx context.Context) EventDestinationTargetKineseAuthOutput {
	return o
}

func (o EventDestinationTargetKineseAuthOutput) Creds() EventDestinationTargetKineseAuthCredArrayOutput {
	return o.ApplyT(func(v EventDestinationTargetKineseAuth) []EventDestinationTargetKineseAuthCred { return v.Creds }).(EventDestinationTargetKineseAuthCredArrayOutput)
}

func (o EventDestinationTargetKineseAuthOutput) Roles() EventDestinationTargetKineseAuthRoleArrayOutput {
	return o.ApplyT(func(v EventDestinationTargetKineseAuth) []EventDestinationTargetKineseAuthRole { return v.Roles }).(EventDestinationTargetKineseAuthRoleArrayOutput)
}

type EventDestinationTargetKineseAuthArrayOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetKineseAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetKineseAuth)(nil)).Elem()
}

func (o EventDestinationTargetKineseAuthArrayOutput) ToEventDestinationTargetKineseAuthArrayOutput() EventDestinationTargetKineseAuthArrayOutput {
	return o
}

func (o EventDestinationTargetKineseAuthArrayOutput) ToEventDestinationTargetKineseAuthArrayOutputWithContext(ctx context.Context) EventDestinationTargetKineseAuthArrayOutput {
	return o
}

func (o EventDestinationTargetKineseAuthArrayOutput) Index(i pulumi.IntInput) EventDestinationTargetKineseAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventDestinationTargetKineseAuth {
		return vs[0].([]EventDestinationTargetKineseAuth)[vs[1].(int)]
	}).(EventDestinationTargetKineseAuthOutput)
}

type EventDestinationTargetKineseAuthCred struct {
	AwsAccessKeyId     string `pulumi:"awsAccessKeyId"`
	AwsSecretAccessKey string `pulumi:"awsSecretAccessKey"`
}

// EventDestinationTargetKineseAuthCredInput is an input type that accepts EventDestinationTargetKineseAuthCredArgs and EventDestinationTargetKineseAuthCredOutput values.
// You can construct a concrete instance of `EventDestinationTargetKineseAuthCredInput` via:
//
//	EventDestinationTargetKineseAuthCredArgs{...}
type EventDestinationTargetKineseAuthCredInput interface {
	pulumi.Input

	ToEventDestinationTargetKineseAuthCredOutput() EventDestinationTargetKineseAuthCredOutput
	ToEventDestinationTargetKineseAuthCredOutputWithContext(context.Context) EventDestinationTargetKineseAuthCredOutput
}

type EventDestinationTargetKineseAuthCredArgs struct {
	AwsAccessKeyId     pulumi.StringInput `pulumi:"awsAccessKeyId"`
	AwsSecretAccessKey pulumi.StringInput `pulumi:"awsSecretAccessKey"`
}

func (EventDestinationTargetKineseAuthCredArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetKineseAuthCred)(nil)).Elem()
}

func (i EventDestinationTargetKineseAuthCredArgs) ToEventDestinationTargetKineseAuthCredOutput() EventDestinationTargetKineseAuthCredOutput {
	return i.ToEventDestinationTargetKineseAuthCredOutputWithContext(context.Background())
}

func (i EventDestinationTargetKineseAuthCredArgs) ToEventDestinationTargetKineseAuthCredOutputWithContext(ctx context.Context) EventDestinationTargetKineseAuthCredOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetKineseAuthCredOutput)
}

// EventDestinationTargetKineseAuthCredArrayInput is an input type that accepts EventDestinationTargetKineseAuthCredArray and EventDestinationTargetKineseAuthCredArrayOutput values.
// You can construct a concrete instance of `EventDestinationTargetKineseAuthCredArrayInput` via:
//
//	EventDestinationTargetKineseAuthCredArray{ EventDestinationTargetKineseAuthCredArgs{...} }
type EventDestinationTargetKineseAuthCredArrayInput interface {
	pulumi.Input

	ToEventDestinationTargetKineseAuthCredArrayOutput() EventDestinationTargetKineseAuthCredArrayOutput
	ToEventDestinationTargetKineseAuthCredArrayOutputWithContext(context.Context) EventDestinationTargetKineseAuthCredArrayOutput
}

type EventDestinationTargetKineseAuthCredArray []EventDestinationTargetKineseAuthCredInput

func (EventDestinationTargetKineseAuthCredArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetKineseAuthCred)(nil)).Elem()
}

func (i EventDestinationTargetKineseAuthCredArray) ToEventDestinationTargetKineseAuthCredArrayOutput() EventDestinationTargetKineseAuthCredArrayOutput {
	return i.ToEventDestinationTargetKineseAuthCredArrayOutputWithContext(context.Background())
}

func (i EventDestinationTargetKineseAuthCredArray) ToEventDestinationTargetKineseAuthCredArrayOutputWithContext(ctx context.Context) EventDestinationTargetKineseAuthCredArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetKineseAuthCredArrayOutput)
}

type EventDestinationTargetKineseAuthCredOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetKineseAuthCredOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetKineseAuthCred)(nil)).Elem()
}

func (o EventDestinationTargetKineseAuthCredOutput) ToEventDestinationTargetKineseAuthCredOutput() EventDestinationTargetKineseAuthCredOutput {
	return o
}

func (o EventDestinationTargetKineseAuthCredOutput) ToEventDestinationTargetKineseAuthCredOutputWithContext(ctx context.Context) EventDestinationTargetKineseAuthCredOutput {
	return o
}

func (o EventDestinationTargetKineseAuthCredOutput) AwsAccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v EventDestinationTargetKineseAuthCred) string { return v.AwsAccessKeyId }).(pulumi.StringOutput)
}

func (o EventDestinationTargetKineseAuthCredOutput) AwsSecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v EventDestinationTargetKineseAuthCred) string { return v.AwsSecretAccessKey }).(pulumi.StringOutput)
}

type EventDestinationTargetKineseAuthCredArrayOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetKineseAuthCredArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetKineseAuthCred)(nil)).Elem()
}

func (o EventDestinationTargetKineseAuthCredArrayOutput) ToEventDestinationTargetKineseAuthCredArrayOutput() EventDestinationTargetKineseAuthCredArrayOutput {
	return o
}

func (o EventDestinationTargetKineseAuthCredArrayOutput) ToEventDestinationTargetKineseAuthCredArrayOutputWithContext(ctx context.Context) EventDestinationTargetKineseAuthCredArrayOutput {
	return o
}

func (o EventDestinationTargetKineseAuthCredArrayOutput) Index(i pulumi.IntInput) EventDestinationTargetKineseAuthCredOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventDestinationTargetKineseAuthCred {
		return vs[0].([]EventDestinationTargetKineseAuthCred)[vs[1].(int)]
	}).(EventDestinationTargetKineseAuthCredOutput)
}

type EventDestinationTargetKineseAuthRole struct {
	RoleArn string `pulumi:"roleArn"`
}

// EventDestinationTargetKineseAuthRoleInput is an input type that accepts EventDestinationTargetKineseAuthRoleArgs and EventDestinationTargetKineseAuthRoleOutput values.
// You can construct a concrete instance of `EventDestinationTargetKineseAuthRoleInput` via:
//
//	EventDestinationTargetKineseAuthRoleArgs{...}
type EventDestinationTargetKineseAuthRoleInput interface {
	pulumi.Input

	ToEventDestinationTargetKineseAuthRoleOutput() EventDestinationTargetKineseAuthRoleOutput
	ToEventDestinationTargetKineseAuthRoleOutputWithContext(context.Context) EventDestinationTargetKineseAuthRoleOutput
}

type EventDestinationTargetKineseAuthRoleArgs struct {
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (EventDestinationTargetKineseAuthRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetKineseAuthRole)(nil)).Elem()
}

func (i EventDestinationTargetKineseAuthRoleArgs) ToEventDestinationTargetKineseAuthRoleOutput() EventDestinationTargetKineseAuthRoleOutput {
	return i.ToEventDestinationTargetKineseAuthRoleOutputWithContext(context.Background())
}

func (i EventDestinationTargetKineseAuthRoleArgs) ToEventDestinationTargetKineseAuthRoleOutputWithContext(ctx context.Context) EventDestinationTargetKineseAuthRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetKineseAuthRoleOutput)
}

// EventDestinationTargetKineseAuthRoleArrayInput is an input type that accepts EventDestinationTargetKineseAuthRoleArray and EventDestinationTargetKineseAuthRoleArrayOutput values.
// You can construct a concrete instance of `EventDestinationTargetKineseAuthRoleArrayInput` via:
//
//	EventDestinationTargetKineseAuthRoleArray{ EventDestinationTargetKineseAuthRoleArgs{...} }
type EventDestinationTargetKineseAuthRoleArrayInput interface {
	pulumi.Input

	ToEventDestinationTargetKineseAuthRoleArrayOutput() EventDestinationTargetKineseAuthRoleArrayOutput
	ToEventDestinationTargetKineseAuthRoleArrayOutputWithContext(context.Context) EventDestinationTargetKineseAuthRoleArrayOutput
}

type EventDestinationTargetKineseAuthRoleArray []EventDestinationTargetKineseAuthRoleInput

func (EventDestinationTargetKineseAuthRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetKineseAuthRole)(nil)).Elem()
}

func (i EventDestinationTargetKineseAuthRoleArray) ToEventDestinationTargetKineseAuthRoleArrayOutput() EventDestinationTargetKineseAuthRoleArrayOutput {
	return i.ToEventDestinationTargetKineseAuthRoleArrayOutputWithContext(context.Background())
}

func (i EventDestinationTargetKineseAuthRoleArray) ToEventDestinationTargetKineseAuthRoleArrayOutputWithContext(ctx context.Context) EventDestinationTargetKineseAuthRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationTargetKineseAuthRoleArrayOutput)
}

type EventDestinationTargetKineseAuthRoleOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetKineseAuthRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationTargetKineseAuthRole)(nil)).Elem()
}

func (o EventDestinationTargetKineseAuthRoleOutput) ToEventDestinationTargetKineseAuthRoleOutput() EventDestinationTargetKineseAuthRoleOutput {
	return o
}

func (o EventDestinationTargetKineseAuthRoleOutput) ToEventDestinationTargetKineseAuthRoleOutputWithContext(ctx context.Context) EventDestinationTargetKineseAuthRoleOutput {
	return o
}

func (o EventDestinationTargetKineseAuthRoleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v EventDestinationTargetKineseAuthRole) string { return v.RoleArn }).(pulumi.StringOutput)
}

type EventDestinationTargetKineseAuthRoleArrayOutput struct{ *pulumi.OutputState }

func (EventDestinationTargetKineseAuthRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationTargetKineseAuthRole)(nil)).Elem()
}

func (o EventDestinationTargetKineseAuthRoleArrayOutput) ToEventDestinationTargetKineseAuthRoleArrayOutput() EventDestinationTargetKineseAuthRoleArrayOutput {
	return o
}

func (o EventDestinationTargetKineseAuthRoleArrayOutput) ToEventDestinationTargetKineseAuthRoleArrayOutputWithContext(ctx context.Context) EventDestinationTargetKineseAuthRoleArrayOutput {
	return o
}

func (o EventDestinationTargetKineseAuthRoleArrayOutput) Index(i pulumi.IntInput) EventDestinationTargetKineseAuthRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventDestinationTargetKineseAuthRole {
		return vs[0].([]EventDestinationTargetKineseAuthRole)[vs[1].(int)]
	}).(EventDestinationTargetKineseAuthRoleOutput)
}

type EventSubscriptionSource struct {
	// TODO
	Fields []string `pulumi:"fields"`
	// TODO
	Filter *string `pulumi:"filter"`
	// Type of event for which an event subscription will trigger
	Type *string `pulumi:"type"`
	// URI of the Event Source API resource.
	Uri *string `pulumi:"uri"`
}

// EventSubscriptionSourceInput is an input type that accepts EventSubscriptionSourceArgs and EventSubscriptionSourceOutput values.
// You can construct a concrete instance of `EventSubscriptionSourceInput` via:
//
//	EventSubscriptionSourceArgs{...}
type EventSubscriptionSourceInput interface {
	pulumi.Input

	ToEventSubscriptionSourceOutput() EventSubscriptionSourceOutput
	ToEventSubscriptionSourceOutputWithContext(context.Context) EventSubscriptionSourceOutput
}

type EventSubscriptionSourceArgs struct {
	// TODO
	Fields pulumi.StringArrayInput `pulumi:"fields"`
	// TODO
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Type of event for which an event subscription will trigger
	Type pulumi.StringPtrInput `pulumi:"type"`
	// URI of the Event Source API resource.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (EventSubscriptionSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSubscriptionSource)(nil)).Elem()
}

func (i EventSubscriptionSourceArgs) ToEventSubscriptionSourceOutput() EventSubscriptionSourceOutput {
	return i.ToEventSubscriptionSourceOutputWithContext(context.Background())
}

func (i EventSubscriptionSourceArgs) ToEventSubscriptionSourceOutputWithContext(ctx context.Context) EventSubscriptionSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSubscriptionSourceOutput)
}

// EventSubscriptionSourceArrayInput is an input type that accepts EventSubscriptionSourceArray and EventSubscriptionSourceArrayOutput values.
// You can construct a concrete instance of `EventSubscriptionSourceArrayInput` via:
//
//	EventSubscriptionSourceArray{ EventSubscriptionSourceArgs{...} }
type EventSubscriptionSourceArrayInput interface {
	pulumi.Input

	ToEventSubscriptionSourceArrayOutput() EventSubscriptionSourceArrayOutput
	ToEventSubscriptionSourceArrayOutputWithContext(context.Context) EventSubscriptionSourceArrayOutput
}

type EventSubscriptionSourceArray []EventSubscriptionSourceInput

func (EventSubscriptionSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSubscriptionSource)(nil)).Elem()
}

func (i EventSubscriptionSourceArray) ToEventSubscriptionSourceArrayOutput() EventSubscriptionSourceArrayOutput {
	return i.ToEventSubscriptionSourceArrayOutputWithContext(context.Background())
}

func (i EventSubscriptionSourceArray) ToEventSubscriptionSourceArrayOutputWithContext(ctx context.Context) EventSubscriptionSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSubscriptionSourceArrayOutput)
}

type EventSubscriptionSourceOutput struct{ *pulumi.OutputState }

func (EventSubscriptionSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSubscriptionSource)(nil)).Elem()
}

func (o EventSubscriptionSourceOutput) ToEventSubscriptionSourceOutput() EventSubscriptionSourceOutput {
	return o
}

func (o EventSubscriptionSourceOutput) ToEventSubscriptionSourceOutputWithContext(ctx context.Context) EventSubscriptionSourceOutput {
	return o
}

// TODO
func (o EventSubscriptionSourceOutput) Fields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EventSubscriptionSource) []string { return v.Fields }).(pulumi.StringArrayOutput)
}

// TODO
func (o EventSubscriptionSourceOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventSubscriptionSource) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Type of event for which an event subscription will trigger
func (o EventSubscriptionSourceOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventSubscriptionSource) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// URI of the Event Source API resource.
func (o EventSubscriptionSourceOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventSubscriptionSource) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type EventSubscriptionSourceArrayOutput struct{ *pulumi.OutputState }

func (EventSubscriptionSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSubscriptionSource)(nil)).Elem()
}

func (o EventSubscriptionSourceArrayOutput) ToEventSubscriptionSourceArrayOutput() EventSubscriptionSourceArrayOutput {
	return o
}

func (o EventSubscriptionSourceArrayOutput) ToEventSubscriptionSourceArrayOutputWithContext(ctx context.Context) EventSubscriptionSourceArrayOutput {
	return o
}

func (o EventSubscriptionSourceArrayOutput) Index(i pulumi.IntInput) EventSubscriptionSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventSubscriptionSource {
		return vs[0].([]EventSubscriptionSource)[vs[1].(int)]
	}).(EventSubscriptionSourceOutput)
}

type ReservedDomainCertificateManagementPolicy struct {
	// certificate authority to request certificates from. The only supported value is letsencrypt.
	Authority *string `pulumi:"authority"`
	// type of private key to use when requesting certificates. Defaults to rsa, can be either rsa or ecdsa.
	PrivateKeyType *string `pulumi:"privateKeyType"`
}

// ReservedDomainCertificateManagementPolicyInput is an input type that accepts ReservedDomainCertificateManagementPolicyArgs and ReservedDomainCertificateManagementPolicyOutput values.
// You can construct a concrete instance of `ReservedDomainCertificateManagementPolicyInput` via:
//
//	ReservedDomainCertificateManagementPolicyArgs{...}
type ReservedDomainCertificateManagementPolicyInput interface {
	pulumi.Input

	ToReservedDomainCertificateManagementPolicyOutput() ReservedDomainCertificateManagementPolicyOutput
	ToReservedDomainCertificateManagementPolicyOutputWithContext(context.Context) ReservedDomainCertificateManagementPolicyOutput
}

type ReservedDomainCertificateManagementPolicyArgs struct {
	// certificate authority to request certificates from. The only supported value is letsencrypt.
	Authority pulumi.StringPtrInput `pulumi:"authority"`
	// type of private key to use when requesting certificates. Defaults to rsa, can be either rsa or ecdsa.
	PrivateKeyType pulumi.StringPtrInput `pulumi:"privateKeyType"`
}

func (ReservedDomainCertificateManagementPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservedDomainCertificateManagementPolicy)(nil)).Elem()
}

func (i ReservedDomainCertificateManagementPolicyArgs) ToReservedDomainCertificateManagementPolicyOutput() ReservedDomainCertificateManagementPolicyOutput {
	return i.ToReservedDomainCertificateManagementPolicyOutputWithContext(context.Background())
}

func (i ReservedDomainCertificateManagementPolicyArgs) ToReservedDomainCertificateManagementPolicyOutputWithContext(ctx context.Context) ReservedDomainCertificateManagementPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReservedDomainCertificateManagementPolicyOutput)
}

// ReservedDomainCertificateManagementPolicyArrayInput is an input type that accepts ReservedDomainCertificateManagementPolicyArray and ReservedDomainCertificateManagementPolicyArrayOutput values.
// You can construct a concrete instance of `ReservedDomainCertificateManagementPolicyArrayInput` via:
//
//	ReservedDomainCertificateManagementPolicyArray{ ReservedDomainCertificateManagementPolicyArgs{...} }
type ReservedDomainCertificateManagementPolicyArrayInput interface {
	pulumi.Input

	ToReservedDomainCertificateManagementPolicyArrayOutput() ReservedDomainCertificateManagementPolicyArrayOutput
	ToReservedDomainCertificateManagementPolicyArrayOutputWithContext(context.Context) ReservedDomainCertificateManagementPolicyArrayOutput
}

type ReservedDomainCertificateManagementPolicyArray []ReservedDomainCertificateManagementPolicyInput

func (ReservedDomainCertificateManagementPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReservedDomainCertificateManagementPolicy)(nil)).Elem()
}

func (i ReservedDomainCertificateManagementPolicyArray) ToReservedDomainCertificateManagementPolicyArrayOutput() ReservedDomainCertificateManagementPolicyArrayOutput {
	return i.ToReservedDomainCertificateManagementPolicyArrayOutputWithContext(context.Background())
}

func (i ReservedDomainCertificateManagementPolicyArray) ToReservedDomainCertificateManagementPolicyArrayOutputWithContext(ctx context.Context) ReservedDomainCertificateManagementPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReservedDomainCertificateManagementPolicyArrayOutput)
}

type ReservedDomainCertificateManagementPolicyOutput struct{ *pulumi.OutputState }

func (ReservedDomainCertificateManagementPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservedDomainCertificateManagementPolicy)(nil)).Elem()
}

func (o ReservedDomainCertificateManagementPolicyOutput) ToReservedDomainCertificateManagementPolicyOutput() ReservedDomainCertificateManagementPolicyOutput {
	return o
}

func (o ReservedDomainCertificateManagementPolicyOutput) ToReservedDomainCertificateManagementPolicyOutputWithContext(ctx context.Context) ReservedDomainCertificateManagementPolicyOutput {
	return o
}

// certificate authority to request certificates from. The only supported value is letsencrypt.
func (o ReservedDomainCertificateManagementPolicyOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReservedDomainCertificateManagementPolicy) *string { return v.Authority }).(pulumi.StringPtrOutput)
}

// type of private key to use when requesting certificates. Defaults to rsa, can be either rsa or ecdsa.
func (o ReservedDomainCertificateManagementPolicyOutput) PrivateKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReservedDomainCertificateManagementPolicy) *string { return v.PrivateKeyType }).(pulumi.StringPtrOutput)
}

type ReservedDomainCertificateManagementPolicyArrayOutput struct{ *pulumi.OutputState }

func (ReservedDomainCertificateManagementPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReservedDomainCertificateManagementPolicy)(nil)).Elem()
}

func (o ReservedDomainCertificateManagementPolicyArrayOutput) ToReservedDomainCertificateManagementPolicyArrayOutput() ReservedDomainCertificateManagementPolicyArrayOutput {
	return o
}

func (o ReservedDomainCertificateManagementPolicyArrayOutput) ToReservedDomainCertificateManagementPolicyArrayOutputWithContext(ctx context.Context) ReservedDomainCertificateManagementPolicyArrayOutput {
	return o
}

func (o ReservedDomainCertificateManagementPolicyArrayOutput) Index(i pulumi.IntInput) ReservedDomainCertificateManagementPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReservedDomainCertificateManagementPolicy {
		return vs[0].([]ReservedDomainCertificateManagementPolicy)[vs[1].(int)]
	}).(ReservedDomainCertificateManagementPolicyOutput)
}

type TlsCertificateSubjectAlternativeName struct {
	// set of additional domains (including wildcards) this TLS certificate is valid for
	DnsNames []string `pulumi:"dnsNames"`
	// set of IP addresses this TLS certificate is also valid for
	Ips []string `pulumi:"ips"`
}

// TlsCertificateSubjectAlternativeNameInput is an input type that accepts TlsCertificateSubjectAlternativeNameArgs and TlsCertificateSubjectAlternativeNameOutput values.
// You can construct a concrete instance of `TlsCertificateSubjectAlternativeNameInput` via:
//
//	TlsCertificateSubjectAlternativeNameArgs{...}
type TlsCertificateSubjectAlternativeNameInput interface {
	pulumi.Input

	ToTlsCertificateSubjectAlternativeNameOutput() TlsCertificateSubjectAlternativeNameOutput
	ToTlsCertificateSubjectAlternativeNameOutputWithContext(context.Context) TlsCertificateSubjectAlternativeNameOutput
}

type TlsCertificateSubjectAlternativeNameArgs struct {
	// set of additional domains (including wildcards) this TLS certificate is valid for
	DnsNames pulumi.StringArrayInput `pulumi:"dnsNames"`
	// set of IP addresses this TLS certificate is also valid for
	Ips pulumi.StringArrayInput `pulumi:"ips"`
}

func (TlsCertificateSubjectAlternativeNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsCertificateSubjectAlternativeName)(nil)).Elem()
}

func (i TlsCertificateSubjectAlternativeNameArgs) ToTlsCertificateSubjectAlternativeNameOutput() TlsCertificateSubjectAlternativeNameOutput {
	return i.ToTlsCertificateSubjectAlternativeNameOutputWithContext(context.Background())
}

func (i TlsCertificateSubjectAlternativeNameArgs) ToTlsCertificateSubjectAlternativeNameOutputWithContext(ctx context.Context) TlsCertificateSubjectAlternativeNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsCertificateSubjectAlternativeNameOutput)
}

// TlsCertificateSubjectAlternativeNameArrayInput is an input type that accepts TlsCertificateSubjectAlternativeNameArray and TlsCertificateSubjectAlternativeNameArrayOutput values.
// You can construct a concrete instance of `TlsCertificateSubjectAlternativeNameArrayInput` via:
//
//	TlsCertificateSubjectAlternativeNameArray{ TlsCertificateSubjectAlternativeNameArgs{...} }
type TlsCertificateSubjectAlternativeNameArrayInput interface {
	pulumi.Input

	ToTlsCertificateSubjectAlternativeNameArrayOutput() TlsCertificateSubjectAlternativeNameArrayOutput
	ToTlsCertificateSubjectAlternativeNameArrayOutputWithContext(context.Context) TlsCertificateSubjectAlternativeNameArrayOutput
}

type TlsCertificateSubjectAlternativeNameArray []TlsCertificateSubjectAlternativeNameInput

func (TlsCertificateSubjectAlternativeNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TlsCertificateSubjectAlternativeName)(nil)).Elem()
}

func (i TlsCertificateSubjectAlternativeNameArray) ToTlsCertificateSubjectAlternativeNameArrayOutput() TlsCertificateSubjectAlternativeNameArrayOutput {
	return i.ToTlsCertificateSubjectAlternativeNameArrayOutputWithContext(context.Background())
}

func (i TlsCertificateSubjectAlternativeNameArray) ToTlsCertificateSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) TlsCertificateSubjectAlternativeNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsCertificateSubjectAlternativeNameArrayOutput)
}

type TlsCertificateSubjectAlternativeNameOutput struct{ *pulumi.OutputState }

func (TlsCertificateSubjectAlternativeNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TlsCertificateSubjectAlternativeName)(nil)).Elem()
}

func (o TlsCertificateSubjectAlternativeNameOutput) ToTlsCertificateSubjectAlternativeNameOutput() TlsCertificateSubjectAlternativeNameOutput {
	return o
}

func (o TlsCertificateSubjectAlternativeNameOutput) ToTlsCertificateSubjectAlternativeNameOutputWithContext(ctx context.Context) TlsCertificateSubjectAlternativeNameOutput {
	return o
}

// set of additional domains (including wildcards) this TLS certificate is valid for
func (o TlsCertificateSubjectAlternativeNameOutput) DnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TlsCertificateSubjectAlternativeName) []string { return v.DnsNames }).(pulumi.StringArrayOutput)
}

// set of IP addresses this TLS certificate is also valid for
func (o TlsCertificateSubjectAlternativeNameOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TlsCertificateSubjectAlternativeName) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

type TlsCertificateSubjectAlternativeNameArrayOutput struct{ *pulumi.OutputState }

func (TlsCertificateSubjectAlternativeNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TlsCertificateSubjectAlternativeName)(nil)).Elem()
}

func (o TlsCertificateSubjectAlternativeNameArrayOutput) ToTlsCertificateSubjectAlternativeNameArrayOutput() TlsCertificateSubjectAlternativeNameArrayOutput {
	return o
}

func (o TlsCertificateSubjectAlternativeNameArrayOutput) ToTlsCertificateSubjectAlternativeNameArrayOutputWithContext(ctx context.Context) TlsCertificateSubjectAlternativeNameArrayOutput {
	return o
}

func (o TlsCertificateSubjectAlternativeNameArrayOutput) Index(i pulumi.IntInput) TlsCertificateSubjectAlternativeNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TlsCertificateSubjectAlternativeName {
		return vs[0].([]TlsCertificateSubjectAlternativeName)[vs[1].(int)]
	}).(TlsCertificateSubjectAlternativeNameOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationBackendInput)(nil)).Elem(), EndpointConfigurationBackendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationBackendArrayInput)(nil)).Elem(), EndpointConfigurationBackendArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationBackendBackendInput)(nil)).Elem(), EndpointConfigurationBackendBackendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationBackendBackendArrayInput)(nil)).Elem(), EndpointConfigurationBackendBackendArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationBasicAuthInput)(nil)).Elem(), EndpointConfigurationBasicAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationBasicAuthArrayInput)(nil)).Elem(), EndpointConfigurationBasicAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationCircuitBreakerInput)(nil)).Elem(), EndpointConfigurationCircuitBreakerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationCircuitBreakerArrayInput)(nil)).Elem(), EndpointConfigurationCircuitBreakerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationCompressionInput)(nil)).Elem(), EndpointConfigurationCompressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationCompressionArrayInput)(nil)).Elem(), EndpointConfigurationCompressionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationIpPolicyInput)(nil)).Elem(), EndpointConfigurationIpPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationIpPolicyArrayInput)(nil)).Elem(), EndpointConfigurationIpPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationIpPolicyIpPolicyInput)(nil)).Elem(), EndpointConfigurationIpPolicyIpPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationIpPolicyIpPolicyArrayInput)(nil)).Elem(), EndpointConfigurationIpPolicyIpPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationLoggingInput)(nil)).Elem(), EndpointConfigurationLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationLoggingArrayInput)(nil)).Elem(), EndpointConfigurationLoggingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationLoggingEventStreamInput)(nil)).Elem(), EndpointConfigurationLoggingEventStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationLoggingEventStreamArrayInput)(nil)).Elem(), EndpointConfigurationLoggingEventStreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationMutualTlInput)(nil)).Elem(), EndpointConfigurationMutualTlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationMutualTlArrayInput)(nil)).Elem(), EndpointConfigurationMutualTlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationMutualTlCertificateAuthorityInput)(nil)).Elem(), EndpointConfigurationMutualTlCertificateAuthorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationMutualTlCertificateAuthorityArrayInput)(nil)).Elem(), EndpointConfigurationMutualTlCertificateAuthorityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationOauthInput)(nil)).Elem(), EndpointConfigurationOauthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationOauthArrayInput)(nil)).Elem(), EndpointConfigurationOauthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationOauthProviderInput)(nil)).Elem(), EndpointConfigurationOauthProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationOauthProviderArrayInput)(nil)).Elem(), EndpointConfigurationOauthProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationOauthProviderFacebookInput)(nil)).Elem(), EndpointConfigurationOauthProviderFacebookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationOauthProviderFacebookArrayInput)(nil)).Elem(), EndpointConfigurationOauthProviderFacebookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationOauthProviderGithubInput)(nil)).Elem(), EndpointConfigurationOauthProviderGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationOauthProviderGithubArrayInput)(nil)).Elem(), EndpointConfigurationOauthProviderGithubArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationOauthProviderGoogleInput)(nil)).Elem(), EndpointConfigurationOauthProviderGoogleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationOauthProviderGoogleArrayInput)(nil)).Elem(), EndpointConfigurationOauthProviderGoogleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationOauthProviderMicrosoftInput)(nil)).Elem(), EndpointConfigurationOauthProviderMicrosoftArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationOauthProviderMicrosoftArrayInput)(nil)).Elem(), EndpointConfigurationOauthProviderMicrosoftArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationOidcInput)(nil)).Elem(), EndpointConfigurationOidcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationOidcArrayInput)(nil)).Elem(), EndpointConfigurationOidcArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationRequestHeaderInput)(nil)).Elem(), EndpointConfigurationRequestHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationRequestHeaderArrayInput)(nil)).Elem(), EndpointConfigurationRequestHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationResponseHeaderInput)(nil)).Elem(), EndpointConfigurationResponseHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationResponseHeaderArrayInput)(nil)).Elem(), EndpointConfigurationResponseHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationSamlInput)(nil)).Elem(), EndpointConfigurationSamlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationSamlArrayInput)(nil)).Elem(), EndpointConfigurationSamlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationTlsTerminationInput)(nil)).Elem(), EndpointConfigurationTlsTerminationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationTlsTerminationArrayInput)(nil)).Elem(), EndpointConfigurationTlsTerminationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationWebhookValidationInput)(nil)).Elem(), EndpointConfigurationWebhookValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointConfigurationWebhookValidationArrayInput)(nil)).Elem(), EndpointConfigurationWebhookValidationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetInput)(nil)).Elem(), EventDestinationTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetArrayInput)(nil)).Elem(), EventDestinationTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetCloudwatchLogInput)(nil)).Elem(), EventDestinationTargetCloudwatchLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetCloudwatchLogArrayInput)(nil)).Elem(), EventDestinationTargetCloudwatchLogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetCloudwatchLogAuthInput)(nil)).Elem(), EventDestinationTargetCloudwatchLogAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetCloudwatchLogAuthArrayInput)(nil)).Elem(), EventDestinationTargetCloudwatchLogAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetCloudwatchLogAuthCredInput)(nil)).Elem(), EventDestinationTargetCloudwatchLogAuthCredArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetCloudwatchLogAuthCredArrayInput)(nil)).Elem(), EventDestinationTargetCloudwatchLogAuthCredArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetCloudwatchLogAuthRoleInput)(nil)).Elem(), EventDestinationTargetCloudwatchLogAuthRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetCloudwatchLogAuthRoleArrayInput)(nil)).Elem(), EventDestinationTargetCloudwatchLogAuthRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetDebugInput)(nil)).Elem(), EventDestinationTargetDebugArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetDebugArrayInput)(nil)).Elem(), EventDestinationTargetDebugArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetFirehoseInput)(nil)).Elem(), EventDestinationTargetFirehoseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetFirehoseArrayInput)(nil)).Elem(), EventDestinationTargetFirehoseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetFirehoseAuthInput)(nil)).Elem(), EventDestinationTargetFirehoseAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetFirehoseAuthArrayInput)(nil)).Elem(), EventDestinationTargetFirehoseAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetFirehoseAuthCredInput)(nil)).Elem(), EventDestinationTargetFirehoseAuthCredArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetFirehoseAuthCredArrayInput)(nil)).Elem(), EventDestinationTargetFirehoseAuthCredArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetFirehoseAuthRoleInput)(nil)).Elem(), EventDestinationTargetFirehoseAuthRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetFirehoseAuthRoleArrayInput)(nil)).Elem(), EventDestinationTargetFirehoseAuthRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetKineseInput)(nil)).Elem(), EventDestinationTargetKineseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetKineseArrayInput)(nil)).Elem(), EventDestinationTargetKineseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetKineseAuthInput)(nil)).Elem(), EventDestinationTargetKineseAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetKineseAuthArrayInput)(nil)).Elem(), EventDestinationTargetKineseAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetKineseAuthCredInput)(nil)).Elem(), EventDestinationTargetKineseAuthCredArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetKineseAuthCredArrayInput)(nil)).Elem(), EventDestinationTargetKineseAuthCredArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetKineseAuthRoleInput)(nil)).Elem(), EventDestinationTargetKineseAuthRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDestinationTargetKineseAuthRoleArrayInput)(nil)).Elem(), EventDestinationTargetKineseAuthRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSubscriptionSourceInput)(nil)).Elem(), EventSubscriptionSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSubscriptionSourceArrayInput)(nil)).Elem(), EventSubscriptionSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReservedDomainCertificateManagementPolicyInput)(nil)).Elem(), ReservedDomainCertificateManagementPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReservedDomainCertificateManagementPolicyArrayInput)(nil)).Elem(), ReservedDomainCertificateManagementPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TlsCertificateSubjectAlternativeNameInput)(nil)).Elem(), TlsCertificateSubjectAlternativeNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TlsCertificateSubjectAlternativeNameArrayInput)(nil)).Elem(), TlsCertificateSubjectAlternativeNameArray{})
	pulumi.RegisterOutputType(EndpointConfigurationBackendOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationBackendArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationBackendBackendOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationBackendBackendArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationBasicAuthOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationBasicAuthArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationCircuitBreakerOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationCircuitBreakerArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationCompressionOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationCompressionArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationIpPolicyOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationIpPolicyArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationIpPolicyIpPolicyOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationIpPolicyIpPolicyArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationLoggingOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationLoggingArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationLoggingEventStreamOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationLoggingEventStreamArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationMutualTlOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationMutualTlArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationMutualTlCertificateAuthorityOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationMutualTlCertificateAuthorityArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationOauthOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationOauthArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationOauthProviderOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationOauthProviderArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationOauthProviderFacebookOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationOauthProviderFacebookArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationOauthProviderGithubOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationOauthProviderGithubArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationOauthProviderGoogleOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationOauthProviderGoogleArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationOauthProviderMicrosoftOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationOauthProviderMicrosoftArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationOidcOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationOidcArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationRequestHeaderOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationRequestHeaderArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationResponseHeaderOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationResponseHeaderArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationSamlOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationSamlArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationTlsTerminationOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationTlsTerminationArrayOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationWebhookValidationOutput{})
	pulumi.RegisterOutputType(EndpointConfigurationWebhookValidationArrayOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetArrayOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetCloudwatchLogOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetCloudwatchLogArrayOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetCloudwatchLogAuthOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetCloudwatchLogAuthArrayOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetCloudwatchLogAuthCredOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetCloudwatchLogAuthCredArrayOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetCloudwatchLogAuthRoleOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetCloudwatchLogAuthRoleArrayOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetDebugOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetDebugArrayOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetFirehoseOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetFirehoseArrayOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetFirehoseAuthOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetFirehoseAuthArrayOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetFirehoseAuthCredOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetFirehoseAuthCredArrayOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetFirehoseAuthRoleOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetFirehoseAuthRoleArrayOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetKineseOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetKineseArrayOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetKineseAuthOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetKineseAuthArrayOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetKineseAuthCredOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetKineseAuthCredArrayOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetKineseAuthRoleOutput{})
	pulumi.RegisterOutputType(EventDestinationTargetKineseAuthRoleArrayOutput{})
	pulumi.RegisterOutputType(EventSubscriptionSourceOutput{})
	pulumi.RegisterOutputType(EventSubscriptionSourceArrayOutput{})
	pulumi.RegisterOutputType(ReservedDomainCertificateManagementPolicyOutput{})
	pulumi.RegisterOutputType(ReservedDomainCertificateManagementPolicyArrayOutput{})
	pulumi.RegisterOutputType(TlsCertificateSubjectAlternativeNameOutput{})
	pulumi.RegisterOutputType(TlsCertificateSubjectAlternativeNameArrayOutput{})
}
